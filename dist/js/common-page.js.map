{"version":3,"sources":["webpack:///common-page.js","webpack:///./common-page.js","webpack:////Users/buschidos/work/git/result/~/magnific-popup/dist/jquery.magnific-popup.js","webpack:///./lib/tooltipster.js","webpack:///./modules/calculator.js","webpack:////Users/buschidos/work/git/result/~/nouislider/distribute/nouislider.js"],"names":["webpackJsonp",0,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_jquery","_jquery2","_tooltipster","_tooltipster2","_scrollmagic","_scrollmagic2","_select","_select2","_navColorChange","_navColorChange2","_gallery","_gallery2","window","document","select","tooltipster","fancy","length","magnificPopup","type","closeOnContentClick","closeBtnInside","fixedContentPos","mainClass","image","verticalFit","zoom","enabled","duration","redLine","controller","Controller","container","logotype","find","outerHeight","factor","Scene","triggerElement","triggerHook","on","e","TweenMax","set","y","progress","addTo","toparea","topareaGallery","navButtons","title","previews","preventDefault","slickApiCall","index","this","text","eq","hide","show","getElement","slick","current","next","clicked","filter","removeClass","addClass","fadeOut","data","fadeIn",6,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","apply","undefined","$","mfp","_prevStatus","_document","_prevContentType","_wrapClasses","_currPopupType","CLOSE_EVENT","BEFORE_CLOSE_EVENT","AFTER_CLOSE_EVENT","BEFORE_APPEND_EVENT","MARKUP_PARSE_EVENT","OPEN_EVENT","CHANGE_EVENT","NS","EVENT_NS","READY_CLASS","REMOVING_CLASS","PREVENT_CLOSE_CLASS","MagnificPopup","_isJQ","_window","_mfpOn","name","f","ev","_getEl","className","appendTo","html","raw","el","createElement","innerHTML","appendChild","_mfpTrigger","triggerHandler","st","callbacks","charAt","toLowerCase","slice","isArray","_getCloseBtn","currTemplate","closeBtn","closeMarkup","replace","tClose","_checkInstance","instance","init","supportsTransitions","s","style","v","pop","prototype","constructor","appVersion","navigator","isLowIE","isIE8","all","addEventListener","isAndroid","test","isIOS","supportsTransition","probablyMobile","userAgent","popupsCache","open","i","isObj","items","toArray","item","parsed","isOpen","updateItemHTML","types","mainEl","key","extend","defaults","modal","closeOnBgClick","showCloseBtn","enableEscapeKey","bgOverlay","close","wrap","attr","_checkIfClose","target","contentContainer","preloader","tLoading","modules","n","toUpperCase","call","template","values","close_replaceWith","append","alignTop","css","overflow","overflowY","overflowX","top","scrollTop","position","fixedBgPos","height","keyCode","updateSize","windowHeight","wH","windowStyles","_hasScrollBar","_getScrollbarSize","marginRight","isIE7","classesToadd","_addClassToMFP","add","prependTo","body","_lastFocusedEl","activeElement","setTimeout","content","_setFocus","_onFocusIn","removalDelay","_close","classesToRemove","detach","empty","_removeClassFromMFP","off","removeAttr","currItem","autoFocusLast","focus","prevHeight","winHeight","zoomLevel","documentElement","clientWidth","innerWidth","innerHeight","parseEl","markup","newContent","appendContent","preloaded","prepend","tagName","src","hasClass","addGroup","options","eHandler","mfpEl","_openClick","eName","delegate","midClick","which","ctrlKey","metaKey","altKey","shiftKey","disableOn","isFunction","width","stopPropagation","updateStatus","status","stopImmediatePropagation","closeOnContent","closeOnBg","contains","cName","scrollHeight","_parseMarkup","arr","each","value","split","replaceWith","is","scrollbarSize","scrollDiv","cssText","offsetWidth","removeChild","proto","registerModule","push","fn","jqEl","itemOpts","parseInt","arguments","Array","_hiddenClass","_inlinePlaceholder","_lastInlineElement","INLINE_NS","_putInlineElementsBack","after","hiddenClass","tNotFound","initInline","getInline","inlineSt","inline","parent","parentNode","inlineElement","_ajaxCur","AJAX_NS","_removeAjaxCursor","_destroyAjaxRequest","req","abort","settings","cursor","tError","initAjax","ajax","getAjax","opts","url","success","textStatus","jqXHR","temp","xhr","finished","error","loadError","_imgInterval","_getTitle","titleSrc","initImage","imgSt","ns","resizeImage","img","decr","_onImageHasSize","hasSize","clearInterval","isCheckingImgSize","imgHidden","findImageSize","counter","mfpSetInterval","delay","setInterval","naturalWidth","getImage","guard","onLoadComplete","complete","loaded","onLoadError","alt","clone","img_replaceWith","loading","hasMozTransform","getHasMozTransform","MozTransform","easing","opener","element","initZoom","zoomSt","openTimeout","animatedImg","getElToAnimate","newImg","transition","cssObj","zIndex","left","-webkit-backface-visibility","t","showMainContent","_allowZoom","clearTimeout","_getItemToZoom","_getOffset","remove","isLarge","offset","paddingTop","paddingBottom","offsetHeight","IFRAME_NS","_emptyPage","_fixIframeBugs","isShowing","srcAction","patterns","youtube","id","vimeo","gmaps","initIframe","prevType","newType","getIframe","embedSrc","iframeSt","iframe","indexOf","substr","lastIndexOf","dataObj","_getLoopedId","numSlides","_replaceCurrTotal","curr","total","arrowMarkup","preload","navigateByImgClick","arrows","tPrev","tNext","tCounter","initGallery","gSt","gallery","direction","prev","l","arrowLeft","arrowRight","click","_preloadTimeout","preloadNearbyImages","goTo","newIndex","p","preloadBefore","Math","min","preloadAfter","_preloadItem","RETINA_NS","replaceSrc","m","ratio","initRetina","devicePixelRatio","retina","isNaN","max-width",7,"_typeof2","_typeof3","Plugin","bodyOverflowX","checkInterval","Content","$el","$elProxy","elProxyPosition","mouseIsOverProxy","namespace","round","random","Status","timerHide","timerShow","$tooltip","iconTheme","theme","_init","areEqual","a","b","same","deviceIsPureTouch","deviceHasMouse","deviceHasTouchCapability","pluginName","animation","arrow","arrowColor","autoClose","contentAsHTML","contentCloning","debug","minWidth","maxWidth","functionInit","origin","functionBefore","continueTooltip","functionReady","tooltip","functionAfter","hideOnClick","icon","iconCloning","iconDesktop","iconTouch","interactive","interactiveTolerance","multiple","offsetX","offsetY","onlyOne","positionTracker","positionTrackerCallback","option","restoration","speed","timer","touchDevices","trigger","updateAnimation","self","querySelector","initialTitle","_content_set","c","insertAfter","_show","_showNow","callback","not","nss","ac","finish","extraTime","clearQueue","queue","stop","animationSpeed","pointerEvents","_content_insert","reposition","_interval_set","event","tolerance","_interval_cancel","_repositionInfo","identical","dimension","$d","_update","-webkit-transition","-moz-transition","-o-transition","-ms-transition","fadeTo","outerWidth","finishCallbacks","update","dontGoOffScreenX","windowLeft","scrollLeft","myLeft","arrowReposition","tooltipWidth","windowWidth","dontGoOffScreenY","switchTo","switchFrom","proxy","tooltipHeight","practicalPosition","myTop","areaShape","mapName","map","mapOffsetLeft","mapOffsetTop","areaMeasurements","areaLeft","areaTop","areaWidth","areaRight","areaBottom","areaSmallestX","areaSmallestY","areaGreatestX","areaGreatestY","arrayAlternate","areaNumber","myLeftMirror","leftDifference","topDifference","borderWidth","parseFloat","newWidth","arrowClass","tooltipBorderWidth","tooltipBorderColor","arrowBorder","arrowBorderSize","arrowBorderColor","arrowConstruct","enable","disable","destroy","removeData","grep","elementIcon","elementTooltip","o","val","args","methodIsStatic","Error","resp","instances","multipleIsSet","debugIsSet","go","console","log","one",77,"_slicedToArray2","_slicedToArray3","_nouislider","_nouislider2","formatValue","space","toFixed","getPackAmount","stowage","reserve","CAPACITY","highlight","totalValue","calculate","silent","sliderValue","textContent","ceil","timeout","root","sliderContainer","slider","firstChild","initialValue","_slider$data","max","create","start","range","handle","noUiSlider","valuesStr","handleIndex","valuesInt","what","_valuesInt",87,"unique","array","closest","to","elem","rect","getBoundingClientRect","doc","ownerDocument","docElem","pageOffset","getPageOffset","x","clientTop","clientLeft","isNumeric","isFinite","accurateNumber","number","pow","Number","addClassFor","limit","asArray","countDecimals","numStr","pieces","classList","RegExp","join","supportPageOffset","pageXOffset","isCSS1Compat","compatMode","pageYOffset","addCssPrefix","cssPrefix","subRangeRatio","pa","pb","fromPercentage","toPercentage","abs","isPercentage","getJ","j","toStepping","xVal","xPct","va","vb","fromStepping","getStep","xSteps","snap","handleEntryPoint","that","percentage","Object","toString","handleStepPoint","Spectrum","entry","singleStep","xNumSteps","ordered","hasOwnProperty","sort","testStep","testRange","spectrum","dir","testStart","handles","testSnap","testAnimate","animate","testConnect","connect","testOrientation","ort","testMargin","margin","getMargin","testLimit","testDirection","testBehaviour","tap","drag","fixed","hover","events","testTooltips","tooltips","forEach","formatter","testFormat","format","from","testCssPrefix","testOptions","tests","defaultFormatter","step","r","orientation","behaviour","keys","pips","closure","getPositions","delimit","d","fixEvent","touch","mouse","pointer","changedTouches","pageX","pageY","clientX","clientY","points","addHandle","additions","reverse","cssClasses","addConnection","addHandles","nrHandles","base","addSlider","div","addTooltip","tips","scope_Handles","bindEvent","getGroup","mode","stepped","scope_Spectrum","spread","generateSpread","density","group","safeIncrement","increment","originalSpectrumDirection","indexes","firstInRange","lastInRange","ignoreFirst","ignoreLast","prevPct","unshift","q","newPct","pctDifference","pctPos","steps","realSteps","stepsize","low","high","addMarking","filterFunc","getSize","getTags","source","addSpread","out","grid","scope_Target","baseSize","scope_Base","fireEvent","handleNumber","scope_Events","targetEvent","eventType","scope_Self","valueGet","inSliderOrder","scope_Values","scope_Locations","attach","method","hasAttribute","actions","buttons","calcPoint","methods","eventName","move","buttonsProperty","end","positions","state","proposal","setHandle","active","removeEventListener","noUiListener","noUiListeners","documentLeave","nodeName","relatedTarget","children","moveEvent","endEvent","outEvent","concat","getComputedStyle","location","noLimitOption","lowerMargin","upperMargin","lowerLimit","upperLimit","requestAnimationFrame","previousSibling","setValues","count","String","valueSet","input","retour","cls","getCurrentStep","getApplicableStep","stepDecimals","decrement","namespacedEvent","removeEvent","substring","bind","tEvent","tNamespace","updateOptions","optionsToUpdate","newOptions","defaultCssPrefix","get","initialize","originalOptions","pointerEnabled","msPointerEnabled","convert"],"mappings":"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","file":"common-page.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _jquery = __webpack_require__(1);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t__webpack_require__(2);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(6);\n\t\n\tvar _tooltipster = __webpack_require__(7);\n\t\n\tvar _tooltipster2 = _interopRequireDefault(_tooltipster);\n\t\n\tvar _scrollmagic = __webpack_require__(72);\n\t\n\tvar _scrollmagic2 = _interopRequireDefault(_scrollmagic);\n\t\n\t__webpack_require__(73);\n\t\n\t__webpack_require__(77);\n\t\n\tvar _select = __webpack_require__(88);\n\t\n\tvar _select2 = _interopRequireDefault(_select);\n\t\n\tvar _navColorChange = __webpack_require__(96);\n\t\n\tvar _navColorChange2 = _interopRequireDefault(_navColorChange);\n\t\n\tvar _gallery = __webpack_require__(102);\n\t\n\tvar _gallery2 = _interopRequireDefault(_gallery);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*global TweenMax*/\n\t\n\t\n\t(0, _select2.default)(_jquery2.default);\n\t//import './modules/footer-map';\n\t\n\t(0, _tooltipster2.default)(_jquery2.default, window, window.document);\n\t(0, _navColorChange2.default)();\n\t(0, _jquery2.default)('.select').select();\n\t(0, _jquery2.default)('.js-tooltip').tooltipster();\n\t\n\t(function () {\n\t\n\t    var fancy = (0, _jquery2.default)('.js-fancy');\n\t    if (!fancy.length) return;\n\t\n\t    fancy.magnificPopup({\n\t        type: 'image',\n\t        closeOnContentClick: true,\n\t        closeBtnInside: false,\n\t        fixedContentPos: true,\n\t        mainClass: 'mfp-no-margins mfp-with-zoom',\n\t        image: {\n\t            verticalFit: true\n\t        },\n\t        zoom: {\n\t            enabled: true,\n\t            duration: 300\n\t        }\n\t    });\n\t})();\n\t\n\t(function () {\n\t\n\t    /**\n\t     * Parallax for logotype on red background\n\t     */\n\t\n\t    var redLine = (0, _jquery2.default)('.v-line');\n\t\n\t    if (!redLine.length) return;\n\t\n\t    var controller = new _scrollmagic2.default.Controller({ container: 'body' });\n\t    var logotype = redLine.find('.logotype-full');\n\t    var duration = redLine.outerHeight();\n\t    var factor = 0.7;\n\t\n\t    new _scrollmagic2.default.Scene({\n\t        duration: duration,\n\t        triggerElement: redLine[0],\n\t        triggerHook: 'onLeave'\n\t    }).on('progress', function (e) {\n\t\n\t        TweenMax.set(logotype, {\n\t            y: duration * e.progress * factor\n\t        });\n\t    }).addTo(controller);\n\t})();\n\t\n\t(function () {\n\t\n\t    /**\n\t     * Topare slider for catalog item page\n\t     */\n\t\n\t    var toparea = (0, _jquery2.default)('.toparea');\n\t    if (!toparea.length) return;\n\t\n\t    var topareaGallery = new _gallery2.default(toparea.find('.toparea-gallery'));\n\t    var navButtons = toparea.find('.select-buttons-group').find('.btn');\n\t    var title = toparea.find('.toparea__subtitle');\n\t    var previews = (0, _jquery2.default)('body').find('.preview');\n\t\n\t    navButtons.on('click', function (e) {\n\t        e.preventDefault();\n\t        topareaGallery.slickApiCall('slickGoTo', navButtons.index(this));\n\t    });\n\t    title.text(navButtons.eq(0).text());\n\t    previews.hide();\n\t    previews.eq(0).show();\n\t\n\t    topareaGallery.getElement().on('beforeChange', function (e, slick, current, next) {\n\t        var clicked = navButtons.eq(next);\n\t        previews.hide();\n\t        previews.eq(next).show();\n\t\n\t        navButtons.filter('.is-selected').removeClass('is-selected');\n\t        clicked.addClass('is-selected');\n\t\n\t        title.fadeOut(400, function () {\n\t            title.text(clicked.data('text') || clicked.text());\n\t            title.fadeIn(400);\n\t        });\n\t    });\n\t})();\n\t\n\t(0, _jquery2.default)('html').removeClass('no-js');\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! Magnific Popup - v1.1.0 - 2016-02-20\n\t* http://dimsemenov.com/plugins/magnific-popup/\n\t* Copyright (c) 2016 Dmitry Semenov; */\n\t;(function (factory) { \n\tif (true) { \n\t // AMD. Register as an anonymous module. \n\t !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); \n\t } else if (typeof exports === 'object') { \n\t // Node/CommonJS \n\t factory(require('jquery')); \n\t } else { \n\t // Browser globals \n\t factory(window.jQuery || window.Zepto); \n\t } \n\t }(function($) { \n\t\n\t/*>>core*/\n\t/**\n\t * \n\t * Magnific Popup Core JS file\n\t * \n\t */\n\t\n\t\n\t/**\n\t * Private static constants\n\t */\n\tvar CLOSE_EVENT = 'Close',\n\t\tBEFORE_CLOSE_EVENT = 'BeforeClose',\n\t\tAFTER_CLOSE_EVENT = 'AfterClose',\n\t\tBEFORE_APPEND_EVENT = 'BeforeAppend',\n\t\tMARKUP_PARSE_EVENT = 'MarkupParse',\n\t\tOPEN_EVENT = 'Open',\n\t\tCHANGE_EVENT = 'Change',\n\t\tNS = 'mfp',\n\t\tEVENT_NS = '.' + NS,\n\t\tREADY_CLASS = 'mfp-ready',\n\t\tREMOVING_CLASS = 'mfp-removing',\n\t\tPREVENT_CLOSE_CLASS = 'mfp-prevent-close';\n\t\n\t\n\t/**\n\t * Private vars \n\t */\n\t/*jshint -W079 */\n\tvar mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'\n\t\tMagnificPopup = function(){},\n\t\t_isJQ = !!(window.jQuery),\n\t\t_prevStatus,\n\t\t_window = $(window),\n\t\t_document,\n\t\t_prevContentType,\n\t\t_wrapClasses,\n\t\t_currPopupType;\n\t\n\t\n\t/**\n\t * Private functions\n\t */\n\tvar _mfpOn = function(name, f) {\n\t\t\tmfp.ev.on(NS + name + EVENT_NS, f);\n\t\t},\n\t\t_getEl = function(className, appendTo, html, raw) {\n\t\t\tvar el = document.createElement('div');\n\t\t\tel.className = 'mfp-'+className;\n\t\t\tif(html) {\n\t\t\t\tel.innerHTML = html;\n\t\t\t}\n\t\t\tif(!raw) {\n\t\t\t\tel = $(el);\n\t\t\t\tif(appendTo) {\n\t\t\t\t\tel.appendTo(appendTo);\n\t\t\t\t}\n\t\t\t} else if(appendTo) {\n\t\t\t\tappendTo.appendChild(el);\n\t\t\t}\n\t\t\treturn el;\n\t\t},\n\t\t_mfpTrigger = function(e, data) {\n\t\t\tmfp.ev.triggerHandler(NS + e, data);\n\t\n\t\t\tif(mfp.st.callbacks) {\n\t\t\t\t// converts \"mfpEventName\" to \"eventName\" callback and triggers it if it's present\n\t\t\t\te = e.charAt(0).toLowerCase() + e.slice(1);\n\t\t\t\tif(mfp.st.callbacks[e]) {\n\t\t\t\t\tmfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_getCloseBtn = function(type) {\n\t\t\tif(type !== _currPopupType || !mfp.currTemplate.closeBtn) {\n\t\t\t\tmfp.currTemplate.closeBtn = $( mfp.st.closeMarkup.replace('%title%', mfp.st.tClose ) );\n\t\t\t\t_currPopupType = type;\n\t\t\t}\n\t\t\treturn mfp.currTemplate.closeBtn;\n\t\t},\n\t\t// Initialize Magnific Popup only when called at least once\n\t\t_checkInstance = function() {\n\t\t\tif(!$.magnificPopup.instance) {\n\t\t\t\t/*jshint -W020 */\n\t\t\t\tmfp = new MagnificPopup();\n\t\t\t\tmfp.init();\n\t\t\t\t$.magnificPopup.instance = mfp;\n\t\t\t}\n\t\t},\n\t\t// CSS transition detection, http://stackoverflow.com/questions/7264899/detect-css-transitions-using-javascript-and-without-modernizr\n\t\tsupportsTransitions = function() {\n\t\t\tvar s = document.createElement('p').style, // 's' for style. better to create an element if body yet to exist\n\t\t\t\tv = ['ms','O','Moz','Webkit']; // 'v' for vendor\n\t\n\t\t\tif( s['transition'] !== undefined ) {\n\t\t\t\treturn true; \n\t\t\t}\n\t\t\t\t\n\t\t\twhile( v.length ) {\n\t\t\t\tif( v.pop() + 'Transition' in s ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\n\t\t\treturn false;\n\t\t};\n\t\n\t\n\t\n\t/**\n\t * Public functions\n\t */\n\tMagnificPopup.prototype = {\n\t\n\t\tconstructor: MagnificPopup,\n\t\n\t\t/**\n\t\t * Initializes Magnific Popup plugin. \n\t\t * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed\n\t\t */\n\t\tinit: function() {\n\t\t\tvar appVersion = navigator.appVersion;\n\t\t\tmfp.isLowIE = mfp.isIE8 = document.all && !document.addEventListener;\n\t\t\tmfp.isAndroid = (/android/gi).test(appVersion);\n\t\t\tmfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);\n\t\t\tmfp.supportsTransition = supportsTransitions();\n\t\n\t\t\t// We disable fixed positioned lightbox on devices that don't handle it nicely.\n\t\t\t// If you know a better way of detecting this - let me know.\n\t\t\tmfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent) );\n\t\t\t_document = $(document);\n\t\n\t\t\tmfp.popupsCache = {};\n\t\t},\n\t\n\t\t/**\n\t\t * Opens popup\n\t\t * @param  data [description]\n\t\t */\n\t\topen: function(data) {\n\t\n\t\t\tvar i;\n\t\n\t\t\tif(data.isObj === false) { \n\t\t\t\t// convert jQuery collection to array to avoid conflicts later\n\t\t\t\tmfp.items = data.items.toArray();\n\t\n\t\t\t\tmfp.index = 0;\n\t\t\t\tvar items = data.items,\n\t\t\t\t\titem;\n\t\t\t\tfor(i = 0; i < items.length; i++) {\n\t\t\t\t\titem = items[i];\n\t\t\t\t\tif(item.parsed) {\n\t\t\t\t\t\titem = item.el[0];\n\t\t\t\t\t}\n\t\t\t\t\tif(item === data.el[0]) {\n\t\t\t\t\t\tmfp.index = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmfp.items = $.isArray(data.items) ? data.items : [data.items];\n\t\t\t\tmfp.index = data.index || 0;\n\t\t\t}\n\t\n\t\t\t// if popup is already opened - we just update the content\n\t\t\tif(mfp.isOpen) {\n\t\t\t\tmfp.updateItemHTML();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmfp.types = []; \n\t\t\t_wrapClasses = '';\n\t\t\tif(data.mainEl && data.mainEl.length) {\n\t\t\t\tmfp.ev = data.mainEl.eq(0);\n\t\t\t} else {\n\t\t\t\tmfp.ev = _document;\n\t\t\t}\n\t\n\t\t\tif(data.key) {\n\t\t\t\tif(!mfp.popupsCache[data.key]) {\n\t\t\t\t\tmfp.popupsCache[data.key] = {};\n\t\t\t\t}\n\t\t\t\tmfp.currTemplate = mfp.popupsCache[data.key];\n\t\t\t} else {\n\t\t\t\tmfp.currTemplate = {};\n\t\t\t}\n\t\n\t\n\t\n\t\t\tmfp.st = $.extend(true, {}, $.magnificPopup.defaults, data ); \n\t\t\tmfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;\n\t\n\t\t\tif(mfp.st.modal) {\n\t\t\t\tmfp.st.closeOnContentClick = false;\n\t\t\t\tmfp.st.closeOnBgClick = false;\n\t\t\t\tmfp.st.showCloseBtn = false;\n\t\t\t\tmfp.st.enableEscapeKey = false;\n\t\t\t}\n\t\t\t\n\t\n\t\t\t// Building markup\n\t\t\t// main containers are created only once\n\t\t\tif(!mfp.bgOverlay) {\n\t\n\t\t\t\t// Dark overlay\n\t\t\t\tmfp.bgOverlay = _getEl('bg').on('click'+EVENT_NS, function() {\n\t\t\t\t\tmfp.close();\n\t\t\t\t});\n\t\n\t\t\t\tmfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click'+EVENT_NS, function(e) {\n\t\t\t\t\tif(mfp._checkIfClose(e.target)) {\n\t\t\t\t\t\tmfp.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tmfp.container = _getEl('container', mfp.wrap);\n\t\t\t}\n\t\n\t\t\tmfp.contentContainer = _getEl('content');\n\t\t\tif(mfp.st.preloader) {\n\t\t\t\tmfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);\n\t\t\t}\n\t\n\t\n\t\t\t// Initializing modules\n\t\t\tvar modules = $.magnificPopup.modules;\n\t\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\t\tvar n = modules[i];\n\t\t\t\tn = n.charAt(0).toUpperCase() + n.slice(1);\n\t\t\t\tmfp['init'+n].call(mfp);\n\t\t\t}\n\t\t\t_mfpTrigger('BeforeOpen');\n\t\n\t\n\t\t\tif(mfp.st.showCloseBtn) {\n\t\t\t\t// Close button\n\t\t\t\tif(!mfp.st.closeBtnInside) {\n\t\t\t\t\tmfp.wrap.append( _getCloseBtn() );\n\t\t\t\t} else {\n\t\t\t\t\t_mfpOn(MARKUP_PARSE_EVENT, function(e, template, values, item) {\n\t\t\t\t\t\tvalues.close_replaceWith = _getCloseBtn(item.type);\n\t\t\t\t\t});\n\t\t\t\t\t_wrapClasses += ' mfp-close-btn-in';\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif(mfp.st.alignTop) {\n\t\t\t\t_wrapClasses += ' mfp-align-top';\n\t\t\t}\n\t\n\t\t\n\t\n\t\t\tif(mfp.fixedContentPos) {\n\t\t\t\tmfp.wrap.css({\n\t\t\t\t\toverflow: mfp.st.overflowY,\n\t\t\t\t\toverflowX: 'hidden',\n\t\t\t\t\toverflowY: mfp.st.overflowY\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmfp.wrap.css({ \n\t\t\t\t\ttop: _window.scrollTop(),\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif( mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos) ) {\n\t\t\t\tmfp.bgOverlay.css({\n\t\t\t\t\theight: _document.height(),\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t\n\t\n\t\t\tif(mfp.st.enableEscapeKey) {\n\t\t\t\t// Close on ESC key\n\t\t\t\t_document.on('keyup' + EVENT_NS, function(e) {\n\t\t\t\t\tif(e.keyCode === 27) {\n\t\t\t\t\t\tmfp.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t_window.on('resize' + EVENT_NS, function() {\n\t\t\t\tmfp.updateSize();\n\t\t\t});\n\t\n\t\n\t\t\tif(!mfp.st.closeOnContentClick) {\n\t\t\t\t_wrapClasses += ' mfp-auto-cursor';\n\t\t\t}\n\t\t\t\n\t\t\tif(_wrapClasses)\n\t\t\t\tmfp.wrap.addClass(_wrapClasses);\n\t\n\t\n\t\t\t// this triggers recalculation of layout, so we get it once to not to trigger twice\n\t\t\tvar windowHeight = mfp.wH = _window.height();\n\t\n\t\t\t\n\t\t\tvar windowStyles = {};\n\t\n\t\t\tif( mfp.fixedContentPos ) {\n\t            if(mfp._hasScrollBar(windowHeight)){\n\t                var s = mfp._getScrollbarSize();\n\t                if(s) {\n\t                    windowStyles.marginRight = s;\n\t                }\n\t            }\n\t        }\n\t\n\t\t\tif(mfp.fixedContentPos) {\n\t\t\t\tif(!mfp.isIE7) {\n\t\t\t\t\twindowStyles.overflow = 'hidden';\n\t\t\t\t} else {\n\t\t\t\t\t// ie7 double-scroll bug\n\t\t\t\t\t$('body, html').css('overflow', 'hidden');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t\n\t\t\t\n\t\t\tvar classesToadd = mfp.st.mainClass;\n\t\t\tif(mfp.isIE7) {\n\t\t\t\tclassesToadd += ' mfp-ie7';\n\t\t\t}\n\t\t\tif(classesToadd) {\n\t\t\t\tmfp._addClassToMFP( classesToadd );\n\t\t\t}\n\t\n\t\t\t// add content\n\t\t\tmfp.updateItemHTML();\n\t\n\t\t\t_mfpTrigger('BuildControls');\n\t\n\t\t\t// remove scrollbar, add margin e.t.c\n\t\t\t$('html').css(windowStyles);\n\t\t\t\n\t\t\t// add everything to DOM\n\t\t\tmfp.bgOverlay.add(mfp.wrap).prependTo( mfp.st.prependTo || $(document.body) );\n\t\n\t\t\t// Save last focused element\n\t\t\tmfp._lastFocusedEl = document.activeElement;\n\t\t\t\n\t\t\t// Wait for next cycle to allow CSS transition\n\t\t\tsetTimeout(function() {\n\t\t\t\t\n\t\t\t\tif(mfp.content) {\n\t\t\t\t\tmfp._addClassToMFP(READY_CLASS);\n\t\t\t\t\tmfp._setFocus();\n\t\t\t\t} else {\n\t\t\t\t\t// if content is not defined (not loaded e.t.c) we add class only for BG\n\t\t\t\t\tmfp.bgOverlay.addClass(READY_CLASS);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Trap the focus in popup\n\t\t\t\t_document.on('focusin' + EVENT_NS, mfp._onFocusIn);\n\t\n\t\t\t}, 16);\n\t\n\t\t\tmfp.isOpen = true;\n\t\t\tmfp.updateSize(windowHeight);\n\t\t\t_mfpTrigger(OPEN_EVENT);\n\t\n\t\t\treturn data;\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the popup\n\t\t */\n\t\tclose: function() {\n\t\t\tif(!mfp.isOpen) return;\n\t\t\t_mfpTrigger(BEFORE_CLOSE_EVENT);\n\t\n\t\t\tmfp.isOpen = false;\n\t\t\t// for CSS3 animation\n\t\t\tif(mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition )  {\n\t\t\t\tmfp._addClassToMFP(REMOVING_CLASS);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tmfp._close();\n\t\t\t\t}, mfp.st.removalDelay);\n\t\t\t} else {\n\t\t\t\tmfp._close();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Helper for close() function\n\t\t */\n\t\t_close: function() {\n\t\t\t_mfpTrigger(CLOSE_EVENT);\n\t\n\t\t\tvar classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';\n\t\n\t\t\tmfp.bgOverlay.detach();\n\t\t\tmfp.wrap.detach();\n\t\t\tmfp.container.empty();\n\t\n\t\t\tif(mfp.st.mainClass) {\n\t\t\t\tclassesToRemove += mfp.st.mainClass + ' ';\n\t\t\t}\n\t\n\t\t\tmfp._removeClassFromMFP(classesToRemove);\n\t\n\t\t\tif(mfp.fixedContentPos) {\n\t\t\t\tvar windowStyles = {marginRight: ''};\n\t\t\t\tif(mfp.isIE7) {\n\t\t\t\t\t$('body, html').css('overflow', '');\n\t\t\t\t} else {\n\t\t\t\t\twindowStyles.overflow = '';\n\t\t\t\t}\n\t\t\t\t$('html').css(windowStyles);\n\t\t\t}\n\t\t\t\n\t\t\t_document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);\n\t\t\tmfp.ev.off(EVENT_NS);\n\t\n\t\t\t// clean up DOM elements that aren't removed\n\t\t\tmfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');\n\t\t\tmfp.bgOverlay.attr('class', 'mfp-bg');\n\t\t\tmfp.container.attr('class', 'mfp-container');\n\t\n\t\t\t// remove close button from target element\n\t\t\tif(mfp.st.showCloseBtn &&\n\t\t\t(!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true)) {\n\t\t\t\tif(mfp.currTemplate.closeBtn)\n\t\t\t\t\tmfp.currTemplate.closeBtn.detach();\n\t\t\t}\n\t\n\t\n\t\t\tif(mfp.st.autoFocusLast && mfp._lastFocusedEl) {\n\t\t\t\t$(mfp._lastFocusedEl).focus(); // put tab focus back\n\t\t\t}\n\t\t\tmfp.currItem = null;\t\n\t\t\tmfp.content = null;\n\t\t\tmfp.currTemplate = null;\n\t\t\tmfp.prevHeight = 0;\n\t\n\t\t\t_mfpTrigger(AFTER_CLOSE_EVENT);\n\t\t},\n\t\t\n\t\tupdateSize: function(winHeight) {\n\t\n\t\t\tif(mfp.isIOS) {\n\t\t\t\t// fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2\n\t\t\t\tvar zoomLevel = document.documentElement.clientWidth / window.innerWidth;\n\t\t\t\tvar height = window.innerHeight * zoomLevel;\n\t\t\t\tmfp.wrap.css('height', height);\n\t\t\t\tmfp.wH = height;\n\t\t\t} else {\n\t\t\t\tmfp.wH = winHeight || _window.height();\n\t\t\t}\n\t\t\t// Fixes #84: popup incorrectly positioned with position:relative on body\n\t\t\tif(!mfp.fixedContentPos) {\n\t\t\t\tmfp.wrap.css('height', mfp.wH);\n\t\t\t}\n\t\n\t\t\t_mfpTrigger('Resize');\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Set content of popup based on current index\n\t\t */\n\t\tupdateItemHTML: function() {\n\t\t\tvar item = mfp.items[mfp.index];\n\t\n\t\t\t// Detach and perform modifications\n\t\t\tmfp.contentContainer.detach();\n\t\n\t\t\tif(mfp.content)\n\t\t\t\tmfp.content.detach();\n\t\n\t\t\tif(!item.parsed) {\n\t\t\t\titem = mfp.parseEl( mfp.index );\n\t\t\t}\n\t\n\t\t\tvar type = item.type;\n\t\n\t\t\t_mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);\n\t\t\t// BeforeChange event works like so:\n\t\t\t// _mfpOn('BeforeChange', function(e, prevType, newType) { });\n\t\n\t\t\tmfp.currItem = item;\n\t\n\t\t\tif(!mfp.currTemplate[type]) {\n\t\t\t\tvar markup = mfp.st[type] ? mfp.st[type].markup : false;\n\t\n\t\t\t\t// allows to modify markup\n\t\t\t\t_mfpTrigger('FirstMarkupParse', markup);\n\t\n\t\t\t\tif(markup) {\n\t\t\t\t\tmfp.currTemplate[type] = $(markup);\n\t\t\t\t} else {\n\t\t\t\t\t// if there is no markup found we just define that template is parsed\n\t\t\t\t\tmfp.currTemplate[type] = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif(_prevContentType && _prevContentType !== item.type) {\n\t\t\t\tmfp.container.removeClass('mfp-'+_prevContentType+'-holder');\n\t\t\t}\n\t\n\t\t\tvar newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);\n\t\t\tmfp.appendContent(newContent, type);\n\t\n\t\t\titem.preloaded = true;\n\t\n\t\t\t_mfpTrigger(CHANGE_EVENT, item);\n\t\t\t_prevContentType = item.type;\n\t\n\t\t\t// Append container back after its content changed\n\t\t\tmfp.container.prepend(mfp.contentContainer);\n\t\n\t\t\t_mfpTrigger('AfterChange');\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Set HTML content of popup\n\t\t */\n\t\tappendContent: function(newContent, type) {\n\t\t\tmfp.content = newContent;\n\t\n\t\t\tif(newContent) {\n\t\t\t\tif(mfp.st.showCloseBtn && mfp.st.closeBtnInside &&\n\t\t\t\t\tmfp.currTemplate[type] === true) {\n\t\t\t\t\t// if there is no markup, we just append close button element inside\n\t\t\t\t\tif(!mfp.content.find('.mfp-close').length) {\n\t\t\t\t\t\tmfp.content.append(_getCloseBtn());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmfp.content = newContent;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmfp.content = '';\n\t\t\t}\n\t\n\t\t\t_mfpTrigger(BEFORE_APPEND_EVENT);\n\t\t\tmfp.container.addClass('mfp-'+type+'-holder');\n\t\n\t\t\tmfp.contentContainer.append(mfp.content);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Creates Magnific Popup data object based on given data\n\t\t * @param  {int} index Index of item to parse\n\t\t */\n\t\tparseEl: function(index) {\n\t\t\tvar item = mfp.items[index],\n\t\t\t\ttype;\n\t\n\t\t\tif(item.tagName) {\n\t\t\t\titem = { el: $(item) };\n\t\t\t} else {\n\t\t\t\ttype = item.type;\n\t\t\t\titem = { data: item, src: item.src };\n\t\t\t}\n\t\n\t\t\tif(item.el) {\n\t\t\t\tvar types = mfp.types;\n\t\n\t\t\t\t// check for 'mfp-TYPE' class\n\t\t\t\tfor(var i = 0; i < types.length; i++) {\n\t\t\t\t\tif( item.el.hasClass('mfp-'+types[i]) ) {\n\t\t\t\t\t\ttype = types[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\titem.src = item.el.attr('data-mfp-src');\n\t\t\t\tif(!item.src) {\n\t\t\t\t\titem.src = item.el.attr('href');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\titem.type = type || mfp.st.type || 'inline';\n\t\t\titem.index = index;\n\t\t\titem.parsed = true;\n\t\t\tmfp.items[index] = item;\n\t\t\t_mfpTrigger('ElementParse', item);\n\t\n\t\t\treturn mfp.items[index];\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Initializes single popup or a group of popups\n\t\t */\n\t\taddGroup: function(el, options) {\n\t\t\tvar eHandler = function(e) {\n\t\t\t\te.mfpEl = this;\n\t\t\t\tmfp._openClick(e, el, options);\n\t\t\t};\n\t\n\t\t\tif(!options) {\n\t\t\t\toptions = {};\n\t\t\t}\n\t\n\t\t\tvar eName = 'click.magnificPopup';\n\t\t\toptions.mainEl = el;\n\t\n\t\t\tif(options.items) {\n\t\t\t\toptions.isObj = true;\n\t\t\t\tel.off(eName).on(eName, eHandler);\n\t\t\t} else {\n\t\t\t\toptions.isObj = false;\n\t\t\t\tif(options.delegate) {\n\t\t\t\t\tel.off(eName).on(eName, options.delegate , eHandler);\n\t\t\t\t} else {\n\t\t\t\t\toptions.items = el;\n\t\t\t\t\tel.off(eName).on(eName, eHandler);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_openClick: function(e, el, options) {\n\t\t\tvar midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;\n\t\n\t\n\t\t\tif(!midClick && ( e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;\n\t\n\t\t\tif(disableOn) {\n\t\t\t\tif($.isFunction(disableOn)) {\n\t\t\t\t\tif( !disableOn.call(mfp) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else { // else it's number\n\t\t\t\t\tif( _window.width() < disableOn ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif(e.type) {\n\t\t\t\te.preventDefault();\n\t\n\t\t\t\t// This will prevent popup from closing if element is inside and popup is already opened\n\t\t\t\tif(mfp.isOpen) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\toptions.el = $(e.mfpEl);\n\t\t\tif(options.delegate) {\n\t\t\t\toptions.items = el.find(options.delegate);\n\t\t\t}\n\t\t\tmfp.open(options);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Updates text on preloader\n\t\t */\n\t\tupdateStatus: function(status, text) {\n\t\n\t\t\tif(mfp.preloader) {\n\t\t\t\tif(_prevStatus !== status) {\n\t\t\t\t\tmfp.container.removeClass('mfp-s-'+_prevStatus);\n\t\t\t\t}\n\t\n\t\t\t\tif(!text && status === 'loading') {\n\t\t\t\t\ttext = mfp.st.tLoading;\n\t\t\t\t}\n\t\n\t\t\t\tvar data = {\n\t\t\t\t\tstatus: status,\n\t\t\t\t\ttext: text\n\t\t\t\t};\n\t\t\t\t// allows to modify status\n\t\t\t\t_mfpTrigger('UpdateStatus', data);\n\t\n\t\t\t\tstatus = data.status;\n\t\t\t\ttext = data.text;\n\t\n\t\t\t\tmfp.preloader.html(text);\n\t\n\t\t\t\tmfp.preloader.find('a').on('click', function(e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t});\n\t\n\t\t\t\tmfp.container.addClass('mfp-s-'+status);\n\t\t\t\t_prevStatus = status;\n\t\t\t}\n\t\t},\n\t\n\t\n\t\t/*\n\t\t\t\"Private\" helpers that aren't private at all\n\t\t */\n\t\t// Check to close popup or not\n\t\t// \"target\" is an element that was clicked\n\t\t_checkIfClose: function(target) {\n\t\n\t\t\tif($(target).hasClass(PREVENT_CLOSE_CLASS)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar closeOnContent = mfp.st.closeOnContentClick;\n\t\t\tvar closeOnBg = mfp.st.closeOnBgClick;\n\t\n\t\t\tif(closeOnContent && closeOnBg) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\n\t\t\t\t// We close the popup if click is on close button or on preloader. Or if there is no content.\n\t\t\t\tif(!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0]) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t\t// if click is outside the content\n\t\t\t\tif(  (target !== mfp.content[0] && !$.contains(mfp.content[0], target))  ) {\n\t\t\t\t\tif(closeOnBg) {\n\t\t\t\t\t\t// last check, if the clicked element is in DOM, (in case it's removed onclick)\n\t\t\t\t\t\tif( $.contains(document, target) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if(closeOnContent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t_addClassToMFP: function(cName) {\n\t\t\tmfp.bgOverlay.addClass(cName);\n\t\t\tmfp.wrap.addClass(cName);\n\t\t},\n\t\t_removeClassFromMFP: function(cName) {\n\t\t\tthis.bgOverlay.removeClass(cName);\n\t\t\tmfp.wrap.removeClass(cName);\n\t\t},\n\t\t_hasScrollBar: function(winHeight) {\n\t\t\treturn (  (mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()) );\n\t\t},\n\t\t_setFocus: function() {\n\t\t\t(mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();\n\t\t},\n\t\t_onFocusIn: function(e) {\n\t\t\tif( e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target) ) {\n\t\t\t\tmfp._setFocus();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t_parseMarkup: function(template, values, item) {\n\t\t\tvar arr;\n\t\t\tif(item.data) {\n\t\t\t\tvalues = $.extend(item.data, values);\n\t\t\t}\n\t\t\t_mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item] );\n\t\n\t\t\t$.each(values, function(key, value) {\n\t\t\t\tif(value === undefined || value === false) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tarr = key.split('_');\n\t\t\t\tif(arr.length > 1) {\n\t\t\t\t\tvar el = template.find(EVENT_NS + '-'+arr[0]);\n\t\n\t\t\t\t\tif(el.length > 0) {\n\t\t\t\t\t\tvar attr = arr[1];\n\t\t\t\t\t\tif(attr === 'replaceWith') {\n\t\t\t\t\t\t\tif(el[0] !== value[0]) {\n\t\t\t\t\t\t\t\tel.replaceWith(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(attr === 'img') {\n\t\t\t\t\t\t\tif(el.is('img')) {\n\t\t\t\t\t\t\t\tel.attr('src', value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.replaceWith( $('<img>').attr('src', value).attr('class', el.attr('class')) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.attr(arr[1], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\t\t\t\ttemplate.find(EVENT_NS + '-'+key).html(value);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t_getScrollbarSize: function() {\n\t\t\t// thx David\n\t\t\tif(mfp.scrollbarSize === undefined) {\n\t\t\t\tvar scrollDiv = document.createElement(\"div\");\n\t\t\t\tscrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\n\t\t\t\tdocument.body.appendChild(scrollDiv);\n\t\t\t\tmfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\t\t\t\tdocument.body.removeChild(scrollDiv);\n\t\t\t}\n\t\t\treturn mfp.scrollbarSize;\n\t\t}\n\t\n\t}; /* MagnificPopup core prototype end */\n\t\n\t\n\t\n\t\n\t/**\n\t * Public static functions\n\t */\n\t$.magnificPopup = {\n\t\tinstance: null,\n\t\tproto: MagnificPopup.prototype,\n\t\tmodules: [],\n\t\n\t\topen: function(options, index) {\n\t\t\t_checkInstance();\n\t\n\t\t\tif(!options) {\n\t\t\t\toptions = {};\n\t\t\t} else {\n\t\t\t\toptions = $.extend(true, {}, options);\n\t\t\t}\n\t\n\t\t\toptions.isObj = true;\n\t\t\toptions.index = index || 0;\n\t\t\treturn this.instance.open(options);\n\t\t},\n\t\n\t\tclose: function() {\n\t\t\treturn $.magnificPopup.instance && $.magnificPopup.instance.close();\n\t\t},\n\t\n\t\tregisterModule: function(name, module) {\n\t\t\tif(module.options) {\n\t\t\t\t$.magnificPopup.defaults[name] = module.options;\n\t\t\t}\n\t\t\t$.extend(this.proto, module.proto);\n\t\t\tthis.modules.push(name);\n\t\t},\n\t\n\t\tdefaults: {\n\t\n\t\t\t// Info about options is in docs:\n\t\t\t// http://dimsemenov.com/plugins/magnific-popup/documentation.html#options\n\t\n\t\t\tdisableOn: 0,\n\t\n\t\t\tkey: null,\n\t\n\t\t\tmidClick: false,\n\t\n\t\t\tmainClass: '',\n\t\n\t\t\tpreloader: true,\n\t\n\t\t\tfocus: '', // CSS selector of input to focus after popup is opened\n\t\n\t\t\tcloseOnContentClick: false,\n\t\n\t\t\tcloseOnBgClick: true,\n\t\n\t\t\tcloseBtnInside: true,\n\t\n\t\t\tshowCloseBtn: true,\n\t\n\t\t\tenableEscapeKey: true,\n\t\n\t\t\tmodal: false,\n\t\n\t\t\talignTop: false,\n\t\n\t\t\tremovalDelay: 0,\n\t\n\t\t\tprependTo: null,\n\t\n\t\t\tfixedContentPos: 'auto',\n\t\n\t\t\tfixedBgPos: 'auto',\n\t\n\t\t\toverflowY: 'auto',\n\t\n\t\t\tcloseMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\">&#215;</button>',\n\t\n\t\t\ttClose: 'Close (Esc)',\n\t\n\t\t\ttLoading: 'Loading...',\n\t\n\t\t\tautoFocusLast: true\n\t\n\t\t}\n\t};\n\t\n\t\n\t\n\t$.fn.magnificPopup = function(options) {\n\t\t_checkInstance();\n\t\n\t\tvar jqEl = $(this);\n\t\n\t\t// We call some API method of first param is a string\n\t\tif (typeof options === \"string\" ) {\n\t\n\t\t\tif(options === 'open') {\n\t\t\t\tvar items,\n\t\t\t\t\titemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,\n\t\t\t\t\tindex = parseInt(arguments[1], 10) || 0;\n\t\n\t\t\t\tif(itemOpts.items) {\n\t\t\t\t\titems = itemOpts.items[index];\n\t\t\t\t} else {\n\t\t\t\t\titems = jqEl;\n\t\t\t\t\tif(itemOpts.delegate) {\n\t\t\t\t\t\titems = items.find(itemOpts.delegate);\n\t\t\t\t\t}\n\t\t\t\t\titems = items.eq( index );\n\t\t\t\t}\n\t\t\t\tmfp._openClick({mfpEl:items}, jqEl, itemOpts);\n\t\t\t} else {\n\t\t\t\tif(mfp.isOpen)\n\t\t\t\t\tmfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\n\t\t} else {\n\t\t\t// clone options obj\n\t\t\toptions = $.extend(true, {}, options);\n\t\n\t\t\t/*\n\t\t\t * As Zepto doesn't support .data() method for objects\n\t\t\t * and it works only in normal browsers\n\t\t\t * we assign \"options\" object directly to the DOM element. FTW!\n\t\t\t */\n\t\t\tif(_isJQ) {\n\t\t\t\tjqEl.data('magnificPopup', options);\n\t\t\t} else {\n\t\t\t\tjqEl[0].magnificPopup = options;\n\t\t\t}\n\t\n\t\t\tmfp.addGroup(jqEl, options);\n\t\n\t\t}\n\t\treturn jqEl;\n\t};\n\t\n\t/*>>core*/\n\t\n\t/*>>inline*/\n\t\n\tvar INLINE_NS = 'inline',\n\t\t_hiddenClass,\n\t\t_inlinePlaceholder,\n\t\t_lastInlineElement,\n\t\t_putInlineElementsBack = function() {\n\t\t\tif(_lastInlineElement) {\n\t\t\t\t_inlinePlaceholder.after( _lastInlineElement.addClass(_hiddenClass) ).detach();\n\t\t\t\t_lastInlineElement = null;\n\t\t\t}\n\t\t};\n\t\n\t$.magnificPopup.registerModule(INLINE_NS, {\n\t\toptions: {\n\t\t\thiddenClass: 'hide', // will be appended with `mfp-` prefix\n\t\t\tmarkup: '',\n\t\t\ttNotFound: 'Content not found'\n\t\t},\n\t\tproto: {\n\t\n\t\t\tinitInline: function() {\n\t\t\t\tmfp.types.push(INLINE_NS);\n\t\n\t\t\t\t_mfpOn(CLOSE_EVENT+'.'+INLINE_NS, function() {\n\t\t\t\t\t_putInlineElementsBack();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tgetInline: function(item, template) {\n\t\n\t\t\t\t_putInlineElementsBack();\n\t\n\t\t\t\tif(item.src) {\n\t\t\t\t\tvar inlineSt = mfp.st.inline,\n\t\t\t\t\t\tel = $(item.src);\n\t\n\t\t\t\t\tif(el.length) {\n\t\n\t\t\t\t\t\t// If target element has parent - we replace it with placeholder and put it back after popup is closed\n\t\t\t\t\t\tvar parent = el[0].parentNode;\n\t\t\t\t\t\tif(parent && parent.tagName) {\n\t\t\t\t\t\t\tif(!_inlinePlaceholder) {\n\t\t\t\t\t\t\t\t_hiddenClass = inlineSt.hiddenClass;\n\t\t\t\t\t\t\t\t_inlinePlaceholder = _getEl(_hiddenClass);\n\t\t\t\t\t\t\t\t_hiddenClass = 'mfp-'+_hiddenClass;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// replace target inline element with placeholder\n\t\t\t\t\t\t\t_lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmfp.updateStatus('error', inlineSt.tNotFound);\n\t\t\t\t\t\tel = $('<div>');\n\t\t\t\t\t}\n\t\n\t\t\t\t\titem.inlineElement = el;\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\n\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\tmfp._parseMarkup(template, {}, item);\n\t\t\t\treturn template;\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*>>inline*/\n\t\n\t/*>>ajax*/\n\tvar AJAX_NS = 'ajax',\n\t\t_ajaxCur,\n\t\t_removeAjaxCursor = function() {\n\t\t\tif(_ajaxCur) {\n\t\t\t\t$(document.body).removeClass(_ajaxCur);\n\t\t\t}\n\t\t},\n\t\t_destroyAjaxRequest = function() {\n\t\t\t_removeAjaxCursor();\n\t\t\tif(mfp.req) {\n\t\t\t\tmfp.req.abort();\n\t\t\t}\n\t\t};\n\t\n\t$.magnificPopup.registerModule(AJAX_NS, {\n\t\n\t\toptions: {\n\t\t\tsettings: null,\n\t\t\tcursor: 'mfp-ajax-cur',\n\t\t\ttError: '<a href=\"%url%\">The content</a> could not be loaded.'\n\t\t},\n\t\n\t\tproto: {\n\t\t\tinitAjax: function() {\n\t\t\t\tmfp.types.push(AJAX_NS);\n\t\t\t\t_ajaxCur = mfp.st.ajax.cursor;\n\t\n\t\t\t\t_mfpOn(CLOSE_EVENT+'.'+AJAX_NS, _destroyAjaxRequest);\n\t\t\t\t_mfpOn('BeforeChange.' + AJAX_NS, _destroyAjaxRequest);\n\t\t\t},\n\t\t\tgetAjax: function(item) {\n\t\n\t\t\t\tif(_ajaxCur) {\n\t\t\t\t\t$(document.body).addClass(_ajaxCur);\n\t\t\t\t}\n\t\n\t\t\t\tmfp.updateStatus('loading');\n\t\n\t\t\t\tvar opts = $.extend({\n\t\t\t\t\turl: item.src,\n\t\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\n\t\t\t\t\t\tvar temp = {\n\t\t\t\t\t\t\tdata:data,\n\t\t\t\t\t\t\txhr:jqXHR\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t_mfpTrigger('ParseAjax', temp);\n\t\n\t\t\t\t\t\tmfp.appendContent( $(temp.data), AJAX_NS );\n\t\n\t\t\t\t\t\titem.finished = true;\n\t\n\t\t\t\t\t\t_removeAjaxCursor();\n\t\n\t\t\t\t\t\tmfp._setFocus();\n\t\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tmfp.wrap.addClass(READY_CLASS);\n\t\t\t\t\t\t}, 16);\n\t\n\t\t\t\t\t\tmfp.updateStatus('ready');\n\t\n\t\t\t\t\t\t_mfpTrigger('AjaxContentAdded');\n\t\t\t\t\t},\n\t\t\t\t\terror: function() {\n\t\t\t\t\t\t_removeAjaxCursor();\n\t\t\t\t\t\titem.finished = item.loadError = true;\n\t\t\t\t\t\tmfp.updateStatus('error', mfp.st.ajax.tError.replace('%url%', item.src));\n\t\t\t\t\t}\n\t\t\t\t}, mfp.st.ajax.settings);\n\t\n\t\t\t\tmfp.req = $.ajax(opts);\n\t\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*>>ajax*/\n\t\n\t/*>>image*/\n\tvar _imgInterval,\n\t\t_getTitle = function(item) {\n\t\t\tif(item.data && item.data.title !== undefined)\n\t\t\t\treturn item.data.title;\n\t\n\t\t\tvar src = mfp.st.image.titleSrc;\n\t\n\t\t\tif(src) {\n\t\t\t\tif($.isFunction(src)) {\n\t\t\t\t\treturn src.call(mfp, item);\n\t\t\t\t} else if(item.el) {\n\t\t\t\t\treturn item.el.attr(src) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t};\n\t\n\t$.magnificPopup.registerModule('image', {\n\t\n\t\toptions: {\n\t\t\tmarkup: '<div class=\"mfp-figure\">'+\n\t\t\t\t\t\t'<div class=\"mfp-close\"></div>'+\n\t\t\t\t\t\t'<figure>'+\n\t\t\t\t\t\t\t'<div class=\"mfp-img\"></div>'+\n\t\t\t\t\t\t\t'<figcaption>'+\n\t\t\t\t\t\t\t\t'<div class=\"mfp-bottom-bar\">'+\n\t\t\t\t\t\t\t\t\t'<div class=\"mfp-title\"></div>'+\n\t\t\t\t\t\t\t\t\t'<div class=\"mfp-counter\"></div>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t'</figcaption>'+\n\t\t\t\t\t\t'</figure>'+\n\t\t\t\t\t'</div>',\n\t\t\tcursor: 'mfp-zoom-out-cur',\n\t\t\ttitleSrc: 'title',\n\t\t\tverticalFit: true,\n\t\t\ttError: '<a href=\"%url%\">The image</a> could not be loaded.'\n\t\t},\n\t\n\t\tproto: {\n\t\t\tinitImage: function() {\n\t\t\t\tvar imgSt = mfp.st.image,\n\t\t\t\t\tns = '.image';\n\t\n\t\t\t\tmfp.types.push('image');\n\t\n\t\t\t\t_mfpOn(OPEN_EVENT+ns, function() {\n\t\t\t\t\tif(mfp.currItem.type === 'image' && imgSt.cursor) {\n\t\t\t\t\t\t$(document.body).addClass(imgSt.cursor);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\t\tif(imgSt.cursor) {\n\t\t\t\t\t\t$(document.body).removeClass(imgSt.cursor);\n\t\t\t\t\t}\n\t\t\t\t\t_window.off('resize' + EVENT_NS);\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn('Resize'+ns, mfp.resizeImage);\n\t\t\t\tif(mfp.isLowIE) {\n\t\t\t\t\t_mfpOn('AfterChange', mfp.resizeImage);\n\t\t\t\t}\n\t\t\t},\n\t\t\tresizeImage: function() {\n\t\t\t\tvar item = mfp.currItem;\n\t\t\t\tif(!item || !item.img) return;\n\t\n\t\t\t\tif(mfp.st.image.verticalFit) {\n\t\t\t\t\tvar decr = 0;\n\t\t\t\t\t// fix box-sizing in ie7/8\n\t\t\t\t\tif(mfp.isLowIE) {\n\t\t\t\t\t\tdecr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'),10);\n\t\t\t\t\t}\n\t\t\t\t\titem.img.css('max-height', mfp.wH-decr);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_onImageHasSize: function(item) {\n\t\t\t\tif(item.img) {\n\t\n\t\t\t\t\titem.hasSize = true;\n\t\n\t\t\t\t\tif(_imgInterval) {\n\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t}\n\t\n\t\t\t\t\titem.isCheckingImgSize = false;\n\t\n\t\t\t\t\t_mfpTrigger('ImageHasSize', item);\n\t\n\t\t\t\t\tif(item.imgHidden) {\n\t\t\t\t\t\tif(mfp.content)\n\t\t\t\t\t\t\tmfp.content.removeClass('mfp-loading');\n\t\n\t\t\t\t\t\titem.imgHidden = false;\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Function that loops until the image has size to display elements that rely on it asap\n\t\t\t */\n\t\t\tfindImageSize: function(item) {\n\t\n\t\t\t\tvar counter = 0,\n\t\t\t\t\timg = item.img[0],\n\t\t\t\t\tmfpSetInterval = function(delay) {\n\t\n\t\t\t\t\t\tif(_imgInterval) {\n\t\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// decelerating interval that checks for size of an image\n\t\t\t\t\t\t_imgInterval = setInterval(function() {\n\t\t\t\t\t\t\tif(img.naturalWidth > 0) {\n\t\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif(counter > 200) {\n\t\t\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\tif(counter === 3) {\n\t\t\t\t\t\t\t\tmfpSetInterval(10);\n\t\t\t\t\t\t\t} else if(counter === 40) {\n\t\t\t\t\t\t\t\tmfpSetInterval(50);\n\t\t\t\t\t\t\t} else if(counter === 100) {\n\t\t\t\t\t\t\t\tmfpSetInterval(500);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, delay);\n\t\t\t\t\t};\n\t\n\t\t\t\tmfpSetInterval(1);\n\t\t\t},\n\t\n\t\t\tgetImage: function(item, template) {\n\t\n\t\t\t\tvar guard = 0,\n\t\n\t\t\t\t\t// image load complete handler\n\t\t\t\t\tonLoadComplete = function() {\n\t\t\t\t\t\tif(item) {\n\t\t\t\t\t\t\tif (item.img[0].complete) {\n\t\t\t\t\t\t\t\titem.img.off('.mfploader');\n\t\n\t\t\t\t\t\t\t\tif(item === mfp.currItem){\n\t\t\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\n\t\t\t\t\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\t\t\titem.loaded = true;\n\t\n\t\t\t\t\t\t\t\t_mfpTrigger('ImageLoadComplete');\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if image complete check fails 200 times (20 sec), we assume that there was an error.\n\t\t\t\t\t\t\t\tguard++;\n\t\t\t\t\t\t\t\tif(guard < 200) {\n\t\t\t\t\t\t\t\t\tsetTimeout(onLoadComplete,100);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tonLoadError();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// image error handler\n\t\t\t\t\tonLoadError = function() {\n\t\t\t\t\t\tif(item) {\n\t\t\t\t\t\t\titem.img.off('.mfploader');\n\t\t\t\t\t\t\tif(item === mfp.currItem){\n\t\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\t\t\t\t\t\t\tmfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\t\titem.loaded = true;\n\t\t\t\t\t\t\titem.loadError = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\timgSt = mfp.st.image;\n\t\n\t\n\t\t\t\tvar el = template.find('.mfp-img');\n\t\t\t\tif(el.length) {\n\t\t\t\t\tvar img = document.createElement('img');\n\t\t\t\t\timg.className = 'mfp-img';\n\t\t\t\t\tif(item.el && item.el.find('img').length) {\n\t\t\t\t\t\timg.alt = item.el.find('img').attr('alt');\n\t\t\t\t\t}\n\t\t\t\t\titem.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);\n\t\t\t\t\timg.src = item.src;\n\t\n\t\t\t\t\t// without clone() \"error\" event is not firing when IMG is replaced by new IMG\n\t\t\t\t\t// TODO: find a way to avoid such cloning\n\t\t\t\t\tif(el.is('img')) {\n\t\t\t\t\t\titem.img = item.img.clone();\n\t\t\t\t\t}\n\t\n\t\t\t\t\timg = item.img[0];\n\t\t\t\t\tif(img.naturalWidth > 0) {\n\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t} else if(!img.width) {\n\t\t\t\t\t\titem.hasSize = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tmfp._parseMarkup(template, {\n\t\t\t\t\ttitle: _getTitle(item),\n\t\t\t\t\timg_replaceWith: item.img\n\t\t\t\t}, item);\n\t\n\t\t\t\tmfp.resizeImage();\n\t\n\t\t\t\tif(item.hasSize) {\n\t\t\t\t\tif(_imgInterval) clearInterval(_imgInterval);\n\t\n\t\t\t\t\tif(item.loadError) {\n\t\t\t\t\t\ttemplate.addClass('mfp-loading');\n\t\t\t\t\t\tmfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttemplate.removeClass('mfp-loading');\n\t\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t\t}\n\t\t\t\t\treturn template;\n\t\t\t\t}\n\t\n\t\t\t\tmfp.updateStatus('loading');\n\t\t\t\titem.loading = true;\n\t\n\t\t\t\tif(!item.hasSize) {\n\t\t\t\t\titem.imgHidden = true;\n\t\t\t\t\ttemplate.addClass('mfp-loading');\n\t\t\t\t\tmfp.findImageSize(item);\n\t\t\t\t}\n\t\n\t\t\t\treturn template;\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*>>image*/\n\t\n\t/*>>zoom*/\n\tvar hasMozTransform,\n\t\tgetHasMozTransform = function() {\n\t\t\tif(hasMozTransform === undefined) {\n\t\t\t\thasMozTransform = document.createElement('p').style.MozTransform !== undefined;\n\t\t\t}\n\t\t\treturn hasMozTransform;\n\t\t};\n\t\n\t$.magnificPopup.registerModule('zoom', {\n\t\n\t\toptions: {\n\t\t\tenabled: false,\n\t\t\teasing: 'ease-in-out',\n\t\t\tduration: 300,\n\t\t\topener: function(element) {\n\t\t\t\treturn element.is('img') ? element : element.find('img');\n\t\t\t}\n\t\t},\n\t\n\t\tproto: {\n\t\n\t\t\tinitZoom: function() {\n\t\t\t\tvar zoomSt = mfp.st.zoom,\n\t\t\t\t\tns = '.zoom',\n\t\t\t\t\timage;\n\t\n\t\t\t\tif(!zoomSt.enabled || !mfp.supportsTransition) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar duration = zoomSt.duration,\n\t\t\t\t\tgetElToAnimate = function(image) {\n\t\t\t\t\t\tvar newImg = image.clone().removeAttr('style').removeAttr('class').addClass('mfp-animated-image'),\n\t\t\t\t\t\t\ttransition = 'all '+(zoomSt.duration/1000)+'s ' + zoomSt.easing,\n\t\t\t\t\t\t\tcssObj = {\n\t\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\t\tzIndex: 9999,\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t'-webkit-backface-visibility': 'hidden'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tt = 'transition';\n\t\n\t\t\t\t\t\tcssObj['-webkit-'+t] = cssObj['-moz-'+t] = cssObj['-o-'+t] = cssObj[t] = transition;\n\t\n\t\t\t\t\t\tnewImg.css(cssObj);\n\t\t\t\t\t\treturn newImg;\n\t\t\t\t\t},\n\t\t\t\t\tshowMainContent = function() {\n\t\t\t\t\t\tmfp.content.css('visibility', 'visible');\n\t\t\t\t\t},\n\t\t\t\t\topenTimeout,\n\t\t\t\t\tanimatedImg;\n\t\n\t\t\t\t_mfpOn('BuildControls'+ns, function() {\n\t\t\t\t\tif(mfp._allowZoom()) {\n\t\n\t\t\t\t\t\tclearTimeout(openTimeout);\n\t\t\t\t\t\tmfp.content.css('visibility', 'hidden');\n\t\n\t\t\t\t\t\t// Basically, all code below does is clones existing image, puts in on top of the current one and animated it\n\t\n\t\t\t\t\t\timage = mfp._getItemToZoom();\n\t\n\t\t\t\t\t\tif(!image) {\n\t\t\t\t\t\t\tshowMainContent();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tanimatedImg = getElToAnimate(image);\n\t\n\t\t\t\t\t\tanimatedImg.css( mfp._getOffset() );\n\t\n\t\t\t\t\t\tmfp.wrap.append(animatedImg);\n\t\n\t\t\t\t\t\topenTimeout = setTimeout(function() {\n\t\t\t\t\t\t\tanimatedImg.css( mfp._getOffset( true ) );\n\t\t\t\t\t\t\topenTimeout = setTimeout(function() {\n\t\n\t\t\t\t\t\t\t\tshowMainContent();\n\t\n\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\tanimatedImg.remove();\n\t\t\t\t\t\t\t\t\timage = animatedImg = null;\n\t\t\t\t\t\t\t\t\t_mfpTrigger('ZoomAnimationEnded');\n\t\t\t\t\t\t\t\t}, 16); // avoid blink when switching images\n\t\n\t\t\t\t\t\t\t}, duration); // this timeout equals animation duration\n\t\n\t\t\t\t\t\t}, 16); // by adding this timeout we avoid short glitch at the beginning of animation\n\t\n\t\n\t\t\t\t\t\t// Lots of timeouts...\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t_mfpOn(BEFORE_CLOSE_EVENT+ns, function() {\n\t\t\t\t\tif(mfp._allowZoom()) {\n\t\n\t\t\t\t\t\tclearTimeout(openTimeout);\n\t\n\t\t\t\t\t\tmfp.st.removalDelay = duration;\n\t\n\t\t\t\t\t\tif(!image) {\n\t\t\t\t\t\t\timage = mfp._getItemToZoom();\n\t\t\t\t\t\t\tif(!image) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tanimatedImg = getElToAnimate(image);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tanimatedImg.css( mfp._getOffset(true) );\n\t\t\t\t\t\tmfp.wrap.append(animatedImg);\n\t\t\t\t\t\tmfp.content.css('visibility', 'hidden');\n\t\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tanimatedImg.css( mfp._getOffset() );\n\t\t\t\t\t\t}, 16);\n\t\t\t\t\t}\n\t\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\t\tif(mfp._allowZoom()) {\n\t\t\t\t\t\tshowMainContent();\n\t\t\t\t\t\tif(animatedImg) {\n\t\t\t\t\t\t\tanimatedImg.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t\timage = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\t_allowZoom: function() {\n\t\t\t\treturn mfp.currItem.type === 'image';\n\t\t\t},\n\t\n\t\t\t_getItemToZoom: function() {\n\t\t\t\tif(mfp.currItem.hasSize) {\n\t\t\t\t\treturn mfp.currItem.img;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Get element postion relative to viewport\n\t\t\t_getOffset: function(isLarge) {\n\t\t\t\tvar el;\n\t\t\t\tif(isLarge) {\n\t\t\t\t\tel = mfp.currItem.img;\n\t\t\t\t} else {\n\t\t\t\t\tel = mfp.st.zoom.opener(mfp.currItem.el || mfp.currItem);\n\t\t\t\t}\n\t\n\t\t\t\tvar offset = el.offset();\n\t\t\t\tvar paddingTop = parseInt(el.css('padding-top'),10);\n\t\t\t\tvar paddingBottom = parseInt(el.css('padding-bottom'),10);\n\t\t\t\toffset.top -= ( $(window).scrollTop() - paddingTop );\n\t\n\t\n\t\t\t\t/*\n\t\n\t\t\t\tAnimating left + top + width/height looks glitchy in Firefox, but perfect in Chrome. And vice-versa.\n\t\n\t\t\t\t */\n\t\t\t\tvar obj = {\n\t\t\t\t\twidth: el.width(),\n\t\t\t\t\t// fix Zepto height+padding issue\n\t\t\t\t\theight: (_isJQ ? el.innerHeight() : el[0].offsetHeight) - paddingBottom - paddingTop\n\t\t\t\t};\n\t\n\t\t\t\t// I hate to do this, but there is no another option\n\t\t\t\tif( getHasMozTransform() ) {\n\t\t\t\t\tobj['-moz-transform'] = obj['transform'] = 'translate(' + offset.left + 'px,' + offset.top + 'px)';\n\t\t\t\t} else {\n\t\t\t\t\tobj.left = offset.left;\n\t\t\t\t\tobj.top = offset.top;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\n\t\t}\n\t});\n\t\n\t\n\t\n\t/*>>zoom*/\n\t\n\t/*>>iframe*/\n\t\n\tvar IFRAME_NS = 'iframe',\n\t\t_emptyPage = '//about:blank',\n\t\n\t\t_fixIframeBugs = function(isShowing) {\n\t\t\tif(mfp.currTemplate[IFRAME_NS]) {\n\t\t\t\tvar el = mfp.currTemplate[IFRAME_NS].find('iframe');\n\t\t\t\tif(el.length) {\n\t\t\t\t\t// reset src after the popup is closed to avoid \"video keeps playing after popup is closed\" bug\n\t\t\t\t\tif(!isShowing) {\n\t\t\t\t\t\tel[0].src = _emptyPage;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// IE8 black screen bug fix\n\t\t\t\t\tif(mfp.isIE8) {\n\t\t\t\t\t\tel.css('display', isShowing ? 'block' : 'none');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t$.magnificPopup.registerModule(IFRAME_NS, {\n\t\n\t\toptions: {\n\t\t\tmarkup: '<div class=\"mfp-iframe-scaler\">'+\n\t\t\t\t\t\t'<div class=\"mfp-close\"></div>'+\n\t\t\t\t\t\t'<iframe class=\"mfp-iframe\" src=\"//about:blank\" frameborder=\"0\" allowfullscreen></iframe>'+\n\t\t\t\t\t'</div>',\n\t\n\t\t\tsrcAction: 'iframe_src',\n\t\n\t\t\t// we don't care and support only one default type of URL by default\n\t\t\tpatterns: {\n\t\t\t\tyoutube: {\n\t\t\t\t\tindex: 'youtube.com',\n\t\t\t\t\tid: 'v=',\n\t\t\t\t\tsrc: '//www.youtube.com/embed/%id%?autoplay=1'\n\t\t\t\t},\n\t\t\t\tvimeo: {\n\t\t\t\t\tindex: 'vimeo.com/',\n\t\t\t\t\tid: '/',\n\t\t\t\t\tsrc: '//player.vimeo.com/video/%id%?autoplay=1'\n\t\t\t\t},\n\t\t\t\tgmaps: {\n\t\t\t\t\tindex: '//maps.google.',\n\t\t\t\t\tsrc: '%id%&output=embed'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tproto: {\n\t\t\tinitIframe: function() {\n\t\t\t\tmfp.types.push(IFRAME_NS);\n\t\n\t\t\t\t_mfpOn('BeforeChange', function(e, prevType, newType) {\n\t\t\t\t\tif(prevType !== newType) {\n\t\t\t\t\t\tif(prevType === IFRAME_NS) {\n\t\t\t\t\t\t\t_fixIframeBugs(); // iframe if removed\n\t\t\t\t\t\t} else if(newType === IFRAME_NS) {\n\t\t\t\t\t\t\t_fixIframeBugs(true); // iframe is showing\n\t\t\t\t\t\t}\n\t\t\t\t\t}// else {\n\t\t\t\t\t\t// iframe source is switched, don't do anything\n\t\t\t\t\t//}\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function() {\n\t\t\t\t\t_fixIframeBugs();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tgetIframe: function(item, template) {\n\t\t\t\tvar embedSrc = item.src;\n\t\t\t\tvar iframeSt = mfp.st.iframe;\n\t\n\t\t\t\t$.each(iframeSt.patterns, function() {\n\t\t\t\t\tif(embedSrc.indexOf( this.index ) > -1) {\n\t\t\t\t\t\tif(this.id) {\n\t\t\t\t\t\t\tif(typeof this.id === 'string') {\n\t\t\t\t\t\t\t\tembedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id)+this.id.length, embedSrc.length);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tembedSrc = this.id.call( this, embedSrc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tembedSrc = this.src.replace('%id%', embedSrc );\n\t\t\t\t\t\treturn false; // break;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tvar dataObj = {};\n\t\t\t\tif(iframeSt.srcAction) {\n\t\t\t\t\tdataObj[iframeSt.srcAction] = embedSrc;\n\t\t\t\t}\n\t\t\t\tmfp._parseMarkup(template, dataObj, item);\n\t\n\t\t\t\tmfp.updateStatus('ready');\n\t\n\t\t\t\treturn template;\n\t\t\t}\n\t\t}\n\t});\n\t\n\t\n\t\n\t/*>>iframe*/\n\t\n\t/*>>gallery*/\n\t/**\n\t * Get looped index depending on number of slides\n\t */\n\tvar _getLoopedId = function(index) {\n\t\t\tvar numSlides = mfp.items.length;\n\t\t\tif(index > numSlides - 1) {\n\t\t\t\treturn index - numSlides;\n\t\t\t} else  if(index < 0) {\n\t\t\t\treturn numSlides + index;\n\t\t\t}\n\t\t\treturn index;\n\t\t},\n\t\t_replaceCurrTotal = function(text, curr, total) {\n\t\t\treturn text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);\n\t\t};\n\t\n\t$.magnificPopup.registerModule('gallery', {\n\t\n\t\toptions: {\n\t\t\tenabled: false,\n\t\t\tarrowMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-arrow mfp-arrow-%dir%\"></button>',\n\t\t\tpreload: [0,2],\n\t\t\tnavigateByImgClick: true,\n\t\t\tarrows: true,\n\t\n\t\t\ttPrev: 'Previous (Left arrow key)',\n\t\t\ttNext: 'Next (Right arrow key)',\n\t\t\ttCounter: '%curr% of %total%'\n\t\t},\n\t\n\t\tproto: {\n\t\t\tinitGallery: function() {\n\t\n\t\t\t\tvar gSt = mfp.st.gallery,\n\t\t\t\t\tns = '.mfp-gallery';\n\t\n\t\t\t\tmfp.direction = true; // true - next, false - prev\n\t\n\t\t\t\tif(!gSt || !gSt.enabled ) return false;\n\t\n\t\t\t\t_wrapClasses += ' mfp-gallery';\n\t\n\t\t\t\t_mfpOn(OPEN_EVENT+ns, function() {\n\t\n\t\t\t\t\tif(gSt.navigateByImgClick) {\n\t\t\t\t\t\tmfp.wrap.on('click'+ns, '.mfp-img', function() {\n\t\t\t\t\t\t\tif(mfp.items.length > 1) {\n\t\t\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_document.on('keydown'+ns, function(e) {\n\t\t\t\t\t\tif (e.keyCode === 37) {\n\t\t\t\t\t\t\tmfp.prev();\n\t\t\t\t\t\t} else if (e.keyCode === 39) {\n\t\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn('UpdateStatus'+ns, function(e, data) {\n\t\t\t\t\tif(data.text) {\n\t\t\t\t\t\tdata.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn(MARKUP_PARSE_EVENT+ns, function(e, element, values, item) {\n\t\t\t\t\tvar l = mfp.items.length;\n\t\t\t\t\tvalues.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn('BuildControls' + ns, function() {\n\t\t\t\t\tif(mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {\n\t\t\t\t\t\tvar markup = gSt.arrowMarkup,\n\t\t\t\t\t\t\tarrowLeft = mfp.arrowLeft = $( markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, 'left') ).addClass(PREVENT_CLOSE_CLASS),\n\t\t\t\t\t\t\tarrowRight = mfp.arrowRight = $( markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, 'right') ).addClass(PREVENT_CLOSE_CLASS);\n\t\n\t\t\t\t\t\tarrowLeft.click(function() {\n\t\t\t\t\t\t\tmfp.prev();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tarrowRight.click(function() {\n\t\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmfp.container.append(arrowLeft.add(arrowRight));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t_mfpOn(CHANGE_EVENT+ns, function() {\n\t\t\t\t\tif(mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);\n\t\n\t\t\t\t\tmfp._preloadTimeout = setTimeout(function() {\n\t\t\t\t\t\tmfp.preloadNearbyImages();\n\t\t\t\t\t\tmfp._preloadTimeout = null;\n\t\t\t\t\t}, 16);\n\t\t\t\t});\n\t\n\t\n\t\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\t\t_document.off(ns);\n\t\t\t\t\tmfp.wrap.off('click'+ns);\n\t\t\t\t\tmfp.arrowRight = mfp.arrowLeft = null;\n\t\t\t\t});\n\t\n\t\t\t},\n\t\t\tnext: function() {\n\t\t\t\tmfp.direction = true;\n\t\t\t\tmfp.index = _getLoopedId(mfp.index + 1);\n\t\t\t\tmfp.updateItemHTML();\n\t\t\t},\n\t\t\tprev: function() {\n\t\t\t\tmfp.direction = false;\n\t\t\t\tmfp.index = _getLoopedId(mfp.index - 1);\n\t\t\t\tmfp.updateItemHTML();\n\t\t\t},\n\t\t\tgoTo: function(newIndex) {\n\t\t\t\tmfp.direction = (newIndex >= mfp.index);\n\t\t\t\tmfp.index = newIndex;\n\t\t\t\tmfp.updateItemHTML();\n\t\t\t},\n\t\t\tpreloadNearbyImages: function() {\n\t\t\t\tvar p = mfp.st.gallery.preload,\n\t\t\t\t\tpreloadBefore = Math.min(p[0], mfp.items.length),\n\t\t\t\t\tpreloadAfter = Math.min(p[1], mfp.items.length),\n\t\t\t\t\ti;\n\t\n\t\t\t\tfor(i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {\n\t\t\t\t\tmfp._preloadItem(mfp.index+i);\n\t\t\t\t}\n\t\t\t\tfor(i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {\n\t\t\t\t\tmfp._preloadItem(mfp.index-i);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_preloadItem: function(index) {\n\t\t\t\tindex = _getLoopedId(index);\n\t\n\t\t\t\tif(mfp.items[index].preloaded) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar item = mfp.items[index];\n\t\t\t\tif(!item.parsed) {\n\t\t\t\t\titem = mfp.parseEl( index );\n\t\t\t\t}\n\t\n\t\t\t\t_mfpTrigger('LazyLoad', item);\n\t\n\t\t\t\tif(item.type === 'image') {\n\t\t\t\t\titem.img = $('<img class=\"mfp-img\" />').on('load.mfploader', function() {\n\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t}).on('error.mfploader', function() {\n\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\titem.loadError = true;\n\t\t\t\t\t\t_mfpTrigger('LazyLoadError', item);\n\t\t\t\t\t}).attr('src', item.src);\n\t\t\t\t}\n\t\n\t\n\t\t\t\titem.preloaded = true;\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*>>gallery*/\n\t\n\t/*>>retina*/\n\t\n\tvar RETINA_NS = 'retina';\n\t\n\t$.magnificPopup.registerModule(RETINA_NS, {\n\t\toptions: {\n\t\t\treplaceSrc: function(item) {\n\t\t\t\treturn item.src.replace(/\\.\\w+$/, function(m) { return '@2x' + m; });\n\t\t\t},\n\t\t\tratio: 1 // Function or number.  Set to 1 to disable.\n\t\t},\n\t\tproto: {\n\t\t\tinitRetina: function() {\n\t\t\t\tif(window.devicePixelRatio > 1) {\n\t\n\t\t\t\t\tvar st = mfp.st.retina,\n\t\t\t\t\t\tratio = st.ratio;\n\t\n\t\t\t\t\tratio = !isNaN(ratio) ? ratio : ratio();\n\t\n\t\t\t\t\tif(ratio > 1) {\n\t\t\t\t\t\t_mfpOn('ImageHasSize' + '.' + RETINA_NS, function(e, item) {\n\t\t\t\t\t\t\titem.img.css({\n\t\t\t\t\t\t\t\t'max-width': item.img[0].naturalWidth / ratio,\n\t\t\t\t\t\t\t\t'width': '100%'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\t_mfpOn('ElementParse' + '.' + RETINA_NS, function(e, item) {\n\t\t\t\t\t\t\titem.src = st.replaceSrc(item, ratio);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*>>retina*/\n\t _checkInstance(); }));\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof2 = __webpack_require__(8);\n\t\n\tvar _typeof3 = _interopRequireDefault(_typeof2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t\n\t Tooltipster 3.3.0 | 2014-11-08\n\t A rockin' custom tooltip jQuery plugin\n\t\n\t Developed by Caleb Jacob under the MIT license http://opensource.org/licenses/MIT\n\t\n\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t */\n\t\n\tmodule.exports = function initTooltipster($, window, document) {\n\t\n\t    var pluginName = \"tooltipster\",\n\t        defaults = {\n\t        animation: 'fade',\n\t        arrow: true,\n\t        arrowColor: '',\n\t        autoClose: true,\n\t        content: null,\n\t        contentAsHTML: false,\n\t        contentCloning: true,\n\t        debug: true,\n\t        delay: 200,\n\t        minWidth: 0,\n\t        maxWidth: null,\n\t        functionInit: function functionInit(origin, content) {},\n\t        functionBefore: function functionBefore(origin, continueTooltip) {\n\t            continueTooltip();\n\t        },\n\t        functionReady: function functionReady(origin, tooltip) {},\n\t        functionAfter: function functionAfter(origin) {},\n\t        hideOnClick: false,\n\t        icon: '(?)',\n\t        iconCloning: true,\n\t        iconDesktop: false,\n\t        iconTouch: false,\n\t        iconTheme: 'tooltipster-icon',\n\t        interactive: false,\n\t        interactiveTolerance: 350,\n\t        multiple: false,\n\t        offsetX: 0,\n\t        offsetY: 0,\n\t        onlyOne: false,\n\t        position: 'top',\n\t        positionTracker: false,\n\t        positionTrackerCallback: function positionTrackerCallback(origin) {\n\t            // the default tracker callback will close the tooltip when the trigger is\n\t            // 'hover' (see https://github.com/iamceege/tooltipster/pull/253)\n\t            if (this.option('trigger') == 'hover' && this.option('autoClose')) {\n\t                this.hide();\n\t            }\n\t        },\n\t        restoration: 'current',\n\t        speed: 350,\n\t        timer: 0,\n\t        theme: 'tooltipster-default',\n\t        touchDevices: true,\n\t        trigger: 'hover',\n\t        updateAnimation: true\n\t    };\n\t\n\t    function Plugin(element, options) {\n\t\n\t        // list of instance variables\n\t\n\t        this.bodyOverflowX;\n\t        // stack of custom callbacks provided as parameters to API methods\n\t        this.callbacks = {\n\t            hide: [],\n\t            show: []\n\t        };\n\t        this.checkInterval = null;\n\t        // this will be the user content shown in the tooltip. A capital \"C\" is used because there is also a method called content()\n\t        this.Content;\n\t        // this is the original element which is being applied the tooltipster plugin\n\t        this.$el = $(element);\n\t        // this will be the element which triggers the appearance of the tooltip on hover/click/custom events.\n\t        // it will be the same as this.$el if icons are not used (see in the options), otherwise it will correspond to the created icon\n\t        this.$elProxy;\n\t        this.elProxyPosition;\n\t        this.enabled = true;\n\t        this.options = $.extend({}, defaults, options);\n\t        this.mouseIsOverProxy = false;\n\t        // a unique namespace per instance, for easy selective unbinding\n\t        this.namespace = 'tooltipster-' + Math.round(Math.random() * 100000);\n\t        // Status (capital S) can be either : appearing, shown, disappearing, hidden\n\t        this.Status = 'hidden';\n\t        this.timerHide = null;\n\t        this.timerShow = null;\n\t        // this will be the tooltip element (jQuery wrapped HTML element)\n\t        this.$tooltip;\n\t\n\t        // for backward compatibility\n\t        this.options.iconTheme = this.options.iconTheme.replace('.', '');\n\t        this.options.theme = this.options.theme.replace('.', '');\n\t\n\t        // launch\n\t\n\t        this._init();\n\t    }\n\t\n\t    Plugin.prototype = {\n\t\n\t        _init: function _init() {\n\t\n\t            var self = this;\n\t\n\t            // disable the plugin on old browsers (including IE7 and lower)\n\t            if (document.querySelector) {\n\t\n\t                // note : the content is null (empty) by default and can stay that way if the plugin remains initialized but not fed any content. The tooltip will just not appear.\n\t\n\t                // let's save the initial value of the title attribute for later restoration if need be.\n\t                var initialTitle = null;\n\t                // it will already have been saved in case of multiple tooltips\n\t                if (self.$el.data('tooltipster-initialTitle') === undefined) {\n\t\n\t                    initialTitle = self.$el.attr('title');\n\t\n\t                    // we do not want initialTitle to have the value \"undefined\" because of how jQuery's .data() method works\n\t                    if (initialTitle === undefined) initialTitle = null;\n\t\n\t                    self.$el.data('tooltipster-initialTitle', initialTitle);\n\t                }\n\t\n\t                // if content is provided in the options, its has precedence over the title attribute.\n\t                // Note : an empty string is considered content, only 'null' represents the absence of content.\n\t                // Also, an existing title=\"\" attribute will result in an empty string content\n\t                if (self.options.content !== null) {\n\t                    self._content_set(self.options.content);\n\t                } else {\n\t                    self._content_set(initialTitle);\n\t                }\n\t\n\t                var c = self.options.functionInit.call(self.$el, self.$el, self.Content);\n\t                if (typeof c !== 'undefined') self._content_set(c);\n\t\n\t                self.$el\n\t                // strip the title off of the element to prevent the default tooltips from popping up\n\t                .removeAttr('title')\n\t                // to be able to find all instances on the page later (upon window events in particular)\n\t                .addClass('tooltipstered');\n\t\n\t                // detect if we're changing the tooltip origin to an icon\n\t                // note about this condition : if the device has touch capability and self.options.iconTouch is false, you'll have no icons event though you may consider your device as a desktop if it also has a mouse. Not sure why someone would have this use case though.\n\t                if (!deviceHasTouchCapability && self.options.iconDesktop || deviceHasTouchCapability && self.options.iconTouch) {\n\t\n\t                    // TODO : the tooltip should be automatically be given an absolute position to be near the origin. Otherwise, when the origin is floating or what, it's going to be nowhere near it and disturb the position flow of the page elements. It will imply that the icon also detects when its origin moves, to follow it : not trivial.\n\t                    // Until it's done, the icon feature does not really make sense since the user still has most of the work to do by himself\n\t\n\t                    // if the icon provided is in the form of a string\n\t                    if (typeof self.options.icon === 'string') {\n\t                        // wrap it in a span with the icon class\n\t                        self.$elProxy = $('<span class=\"' + self.options.iconTheme + '\"></span>');\n\t                        self.$elProxy.text(self.options.icon);\n\t                    }\n\t                    // if it is an object (sensible choice)\n\t                    else {\n\t                            // (deep) clone the object if iconCloning == true, to make sure every instance has its own proxy. We use the icon without wrapping, no need to. We do not give it a class either, as the user will undoubtedly style the object on his own and since our css properties may conflict with his own\n\t                            if (self.options.iconCloning) self.$elProxy = self.options.icon.clone(true);else self.$elProxy = self.options.icon;\n\t                        }\n\t\n\t                    self.$elProxy.insertAfter(self.$el);\n\t                } else {\n\t                    self.$elProxy = self.$el;\n\t                }\n\t\n\t                // for 'click' and 'hover' triggers : bind on events to open the tooltip. Closing is now handled in _showNow() because of its bindings.\n\t                // Notes about touch events :\n\t                // - mouseenter, mouseleave and clicks happen even on pure touch devices because they are emulated. deviceIsPureTouch() is a simple attempt to detect them.\n\t                // - on hybrid devices, we do not prevent touch gesture from opening tooltips. It would be too complex to differentiate real mouse events from emulated ones.\n\t                // - we check deviceIsPureTouch() at each event rather than prior to binding because the situation may change during browsing\n\t                if (self.options.trigger == 'hover') {\n\t\n\t                    // these binding are for mouse interaction only\n\t                    self.$elProxy.on('mouseenter.' + self.namespace, function () {\n\t                        if (!deviceIsPureTouch() || self.options.touchDevices) {\n\t                            self.mouseIsOverProxy = true;\n\t                            self._show();\n\t                        }\n\t                    }).on('mouseleave.' + self.namespace, function () {\n\t                        if (!deviceIsPureTouch() || self.options.touchDevices) {\n\t                            self.mouseIsOverProxy = false;\n\t                        }\n\t                    });\n\t\n\t                    // for touch interaction only\n\t                    if (deviceHasTouchCapability && self.options.touchDevices) {\n\t\n\t                        // for touch devices, we immediately display the tooltip because we cannot rely on mouseleave to handle the delay\n\t                        self.$elProxy.on('touchstart.' + self.namespace, function () {\n\t                            self._showNow();\n\t                        });\n\t                    }\n\t                } else if (self.options.trigger == 'click') {\n\t\n\t                    // note : for touch devices, we do not bind on touchstart, we only rely on the emulated clicks (triggered by taps)\n\t                    self.$elProxy.on('click.' + self.namespace, function () {\n\t                        if (!deviceIsPureTouch() || self.options.touchDevices) {\n\t                            self._show();\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        },\n\t\n\t        // this function will schedule the opening of the tooltip after the delay, if there is one\n\t        _show: function _show() {\n\t\n\t            var self = this;\n\t\n\t            if (self.Status != 'shown' && self.Status != 'appearing') {\n\t\n\t                if (self.options.delay) {\n\t                    self.timerShow = setTimeout(function () {\n\t\n\t                        // for hover trigger, we check if the mouse is still over the proxy, otherwise we do not show anything\n\t                        if (self.options.trigger == 'click' || self.options.trigger == 'hover' && self.mouseIsOverProxy) {\n\t                            self._showNow();\n\t                        }\n\t                    }, self.options.delay);\n\t                } else self._showNow();\n\t            }\n\t        },\n\t\n\t        // this function will open the tooltip right away\n\t        _showNow: function _showNow(callback) {\n\t\n\t            var self = this;\n\t\n\t            // call our constructor custom function before continuing\n\t            self.options.functionBefore.call(self.$el, self.$el, function () {\n\t\n\t                // continue only if the tooltip is enabled and has any content\n\t                if (self.enabled && self.Content !== null) {\n\t\n\t                    // save the method callback and cancel hide method callbacks\n\t                    if (callback) self.callbacks.show.push(callback);\n\t                    self.callbacks.hide = [];\n\t\n\t                    //get rid of any appearance timer\n\t                    clearTimeout(self.timerShow);\n\t                    self.timerShow = null;\n\t                    clearTimeout(self.timerHide);\n\t                    self.timerHide = null;\n\t\n\t                    // if we only want one tooltip open at a time, close all auto-closing tooltips currently open and not already disappearing\n\t                    if (self.options.onlyOne) {\n\t                        $('.tooltipstered').not(self.$el).each(function (i, el) {\n\t\n\t                            var $el = $(el),\n\t                                nss = $el.data('tooltipster-ns');\n\t\n\t                            // iterate on all tooltips of the element\n\t                            $.each(nss, function (i, ns) {\n\t                                var instance = $el.data(ns),\n\t\n\t                                // we have to use the public methods here\n\t                                s = instance.status(),\n\t                                    ac = instance.option('autoClose');\n\t\n\t                                if (s !== 'hidden' && s !== 'disappearing' && ac) {\n\t                                    instance.hide();\n\t                                }\n\t                            });\n\t                        });\n\t                    }\n\t\n\t                    var finish = function finish() {\n\t                        self.Status = 'shown';\n\t\n\t                        // trigger any show method custom callbacks and reset them\n\t                        $.each(self.callbacks.show, function (i, c) {\n\t                            c.call(self.$el);\n\t                        });\n\t                        self.callbacks.show = [];\n\t                    };\n\t\n\t                    // if this origin already has its tooltip open\n\t                    if (self.Status !== 'hidden') {\n\t\n\t                        // the timer (if any) will start (or restart) right now\n\t                        var extraTime = 0;\n\t\n\t                        // if it was disappearing, cancel that\n\t                        if (self.Status === 'disappearing') {\n\t\n\t                            self.Status = 'appearing';\n\t\n\t                            if (supportsTransitions()) {\n\t\n\t                                self.$tooltip.clearQueue().removeClass('tooltipster-dying').addClass('tooltipster-' + self.options.animation + '-show');\n\t\n\t                                if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);\n\t\n\t                                self.$tooltip.queue(finish);\n\t                            } else {\n\t                                // in case the tooltip was currently fading out, bring it back to life\n\t                                self.$tooltip.stop().fadeIn(finish);\n\t                            }\n\t                        }\n\t                        // if the tooltip is already open, we still need to trigger the method custom callback\n\t                        else if (self.Status === 'shown') {\n\t                                finish();\n\t                            }\n\t                    }\n\t                    // if the tooltip isn't already open, open that sucker up!\n\t                    else {\n\t\n\t                            self.Status = 'appearing';\n\t\n\t                            // the timer (if any) will start when the tooltip has fully appeared after its transition\n\t                            var extraTime = self.options.speed;\n\t\n\t                            // disable horizontal scrollbar to keep overflowing tooltips from jacking with it and then restore it to its previous value\n\t                            self.bodyOverflowX = $('body').css('overflow-x');\n\t                            $('body').css('overflow-x', 'hidden');\n\t\n\t                            // get some other settings related to building the tooltip\n\t                            var animation = 'tooltipster-' + self.options.animation,\n\t                                animationSpeed = '-webkit-transition-duration: ' + self.options.speed + 'ms; -webkit-animation-duration: ' + self.options.speed + 'ms; -moz-transition-duration: ' + self.options.speed + 'ms; -moz-animation-duration: ' + self.options.speed + 'ms; -o-transition-duration: ' + self.options.speed + 'ms; -o-animation-duration: ' + self.options.speed + 'ms; -ms-transition-duration: ' + self.options.speed + 'ms; -ms-animation-duration: ' + self.options.speed + 'ms; transition-duration: ' + self.options.speed + 'ms; animation-duration: ' + self.options.speed + 'ms;',\n\t                                minWidth = self.options.minWidth ? 'min-width:' + Math.round(self.options.minWidth) + 'px;' : '',\n\t                                maxWidth = self.options.maxWidth ? 'max-width:' + Math.round(self.options.maxWidth) + 'px;' : '',\n\t                                pointerEvents = self.options.interactive ? 'pointer-events: auto;' : '';\n\t\n\t                            // build the base of our tooltip\n\t                            self.$tooltip = $('<div class=\"tooltipster-base ' + self.options.theme + '\" style=\"' + minWidth + ' ' + maxWidth + ' ' + pointerEvents + ' ' + animationSpeed + '\"><div class=\"tooltipster-content\"></div></div>');\n\t\n\t                            // only add the animation class if the user has a browser that supports animations\n\t                            if (supportsTransitions()) self.$tooltip.addClass(animation);\n\t\n\t                            // insert the content\n\t                            self._content_insert();\n\t\n\t                            // attach\n\t                            self.$tooltip.appendTo('body');\n\t\n\t                            // do all the crazy calculations and positioning\n\t                            self.reposition();\n\t\n\t                            // call our custom callback since the content of the tooltip is now part of the DOM\n\t                            self.options.functionReady.call(self.$el, self.$el, self.$tooltip);\n\t\n\t                            // animate in the tooltip\n\t                            if (supportsTransitions()) {\n\t\n\t                                self.$tooltip.addClass(animation + '-show');\n\t\n\t                                if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);\n\t\n\t                                self.$tooltip.queue(finish);\n\t                            } else {\n\t                                self.$tooltip.css('display', 'none').fadeIn(self.options.speed, finish);\n\t                            }\n\t\n\t                            // will check if our tooltip origin is removed while the tooltip is shown\n\t                            self._interval_set();\n\t\n\t                            // reposition on scroll (otherwise position:fixed element's tooltips will move away form their origin) and on resize (in case position can/has to be changed)\n\t                            $(window).on('scroll.' + self.namespace + ' resize.' + self.namespace, function () {\n\t                                self.reposition();\n\t                            });\n\t\n\t                            // auto-close bindings\n\t                            if (self.options.autoClose) {\n\t\n\t                                // in case a listener is already bound for autoclosing (mouse or touch, hover or click), unbind it first\n\t                                $('body').off('.' + self.namespace);\n\t\n\t                                // here we'll have to set different sets of bindings for both touch and mouse\n\t                                if (self.options.trigger == 'hover') {\n\t\n\t                                    // if the user touches the body, hide\n\t                                    if (deviceHasTouchCapability) {\n\t                                        // timeout 0 : explanation below in click section\n\t                                        setTimeout(function () {\n\t                                            // we don't want to bind on click here because the initial touchstart event has not yet triggered its click event, which is thus about to happen\n\t                                            $('body').on('touchstart.' + self.namespace, function () {\n\t                                                self.hide();\n\t                                            });\n\t                                        }, 0);\n\t                                    }\n\t\n\t                                    // if we have to allow interaction\n\t                                    if (self.options.interactive) {\n\t\n\t                                        // touch events inside the tooltip must not close it\n\t                                        if (deviceHasTouchCapability) {\n\t                                            self.$tooltip.on('touchstart.' + self.namespace, function (event) {\n\t                                                event.stopPropagation();\n\t                                            });\n\t                                        }\n\t\n\t                                        // as for mouse interaction, we get rid of the tooltip only after the mouse has spent some time out of it\n\t                                        var tolerance = null;\n\t\n\t                                        self.$elProxy.add(self.$tooltip)\n\t                                        // hide after some time out of the proxy and the tooltip\n\t                                        .on('mouseleave.' + self.namespace + '-autoClose', function () {\n\t                                            clearTimeout(tolerance);\n\t                                            tolerance = setTimeout(function () {\n\t                                                self.hide();\n\t                                            }, self.options.interactiveTolerance);\n\t                                        })\n\t                                        // suspend timeout when the mouse is over the proxy or the tooltip\n\t                                        .on('mouseenter.' + self.namespace + '-autoClose', function () {\n\t                                            clearTimeout(tolerance);\n\t                                        });\n\t                                    }\n\t                                    // if this is a non-interactive tooltip, get rid of it if the mouse leaves\n\t                                    else {\n\t                                            self.$elProxy.on('mouseleave.' + self.namespace + '-autoClose', function () {\n\t                                                self.hide();\n\t                                            });\n\t                                        }\n\t\n\t                                    // close the tooltip when the proxy gets a click (common behavior of native tooltips)\n\t                                    if (self.options.hideOnClick) {\n\t\n\t                                        self.$elProxy.on('click.' + self.namespace + '-autoClose', function () {\n\t                                            self.hide();\n\t                                        });\n\t                                    }\n\t                                }\n\t                                // here we'll set the same bindings for both clicks and touch on the body to hide the tooltip\n\t                                else if (self.options.trigger == 'click') {\n\t\n\t                                        // use a timeout to prevent immediate closing if the method was called on a click event and if options.delay == 0 (because of bubbling)\n\t                                        setTimeout(function () {\n\t                                            $('body').on('click.' + self.namespace + ' touchstart.' + self.namespace, function () {\n\t                                                self.hide();\n\t                                            });\n\t                                        }, 0);\n\t\n\t                                        // if interactive, we'll stop the events that were emitted from inside the tooltip to stop autoClosing\n\t                                        if (self.options.interactive) {\n\t\n\t                                            // note : the touch events will just not be used if the plugin is not enabled on touch devices\n\t                                            self.$tooltip.on('click.' + self.namespace + ' touchstart.' + self.namespace, function (event) {\n\t                                                event.stopPropagation();\n\t                                            });\n\t                                        }\n\t                                    }\n\t                            }\n\t                        }\n\t\n\t                    // if we have a timer set, let the countdown begin\n\t                    if (self.options.timer > 0) {\n\t\n\t                        self.timerHide = setTimeout(function () {\n\t                            self.timerHide = null;\n\t                            self.hide();\n\t                        }, self.options.timer + extraTime);\n\t                    }\n\t                }\n\t            });\n\t        },\n\t\n\t        _interval_set: function _interval_set() {\n\t\n\t            var self = this;\n\t\n\t            self.checkInterval = setInterval(function () {\n\t\n\t                // if the tooltip and/or its interval should be stopped\n\t                if (\n\t                // if the origin has been removed\n\t                $('body').find(self.$el).length === 0\n\t                // if the elProxy has been removed\n\t                 || $('body').find(self.$elProxy).length === 0\n\t                // if the tooltip has been closed\n\t                 || self.Status == 'hidden'\n\t                // if the tooltip has somehow been removed\n\t                 || $('body').find(self.$tooltip).length === 0) {\n\t                    // remove the tooltip if it's still here\n\t                    if (self.Status == 'shown' || self.Status == 'appearing') self.hide();\n\t\n\t                    // clear this interval as it is no longer necessary\n\t                    self._interval_cancel();\n\t                }\n\t                // if everything is alright\n\t                else {\n\t                        // compare the former and current positions of the elProxy to reposition the tooltip if need be\n\t                        if (self.options.positionTracker) {\n\t\n\t                            var p = self._repositionInfo(self.$elProxy),\n\t                                identical = false;\n\t\n\t                            // compare size first (a change requires repositioning too)\n\t                            if (areEqual(p.dimension, self.elProxyPosition.dimension)) {\n\t\n\t                                // for elements with a fixed position, we track the top and left properties (relative to window)\n\t                                if (self.$elProxy.css('position') === 'fixed') {\n\t                                    if (areEqual(p.position, self.elProxyPosition.position)) identical = true;\n\t                                }\n\t                                // otherwise, track total offset (relative to document)\n\t                                else {\n\t                                        if (areEqual(p.offset, self.elProxyPosition.offset)) identical = true;\n\t                                    }\n\t                            }\n\t\n\t                            if (!identical) {\n\t                                self.reposition();\n\t                                self.options.positionTrackerCallback.call(self, self.$el);\n\t                            }\n\t                        }\n\t                    }\n\t            }, 200);\n\t        },\n\t\n\t        _interval_cancel: function _interval_cancel() {\n\t            clearInterval(this.checkInterval);\n\t            // clean delete\n\t            this.checkInterval = null;\n\t        },\n\t\n\t        _content_set: function _content_set(content) {\n\t            // clone if asked. Cloning the object makes sure that each instance has its own version of the content (in case a same object were provided for several instances)\n\t            // reminder : typeof null === object\n\t            if ((typeof content === 'undefined' ? 'undefined' : (0, _typeof3.default)(content)) === 'object' && content !== null && this.options.contentCloning) {\n\t                content = content.clone(true);\n\t            }\n\t            this.Content = content;\n\t        },\n\t\n\t        _content_insert: function _content_insert() {\n\t\n\t            var self = this,\n\t                $d = this.$tooltip.find('.tooltipster-content');\n\t\n\t            if (typeof self.Content === 'string' && !self.options.contentAsHTML) {\n\t                $d.text(self.Content);\n\t            } else {\n\t                $d.empty().append(self.Content);\n\t            }\n\t        },\n\t\n\t        _update: function _update(content) {\n\t\n\t            var self = this;\n\t\n\t            // change the content\n\t            self._content_set(content);\n\t\n\t            if (self.Content !== null) {\n\t\n\t                // update the tooltip if it is open\n\t                if (self.Status !== 'hidden') {\n\t\n\t                    // reset the content in the tooltip\n\t                    self._content_insert();\n\t\n\t                    // reposition and resize the tooltip\n\t                    self.reposition();\n\t\n\t                    // if we want to play a little animation showing the content changed\n\t                    if (self.options.updateAnimation) {\n\t\n\t                        if (supportsTransitions()) {\n\t\n\t                            self.$tooltip.css({\n\t                                'width': '',\n\t                                '-webkit-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n\t                                '-moz-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n\t                                '-o-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n\t                                '-ms-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n\t                                'transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms'\n\t                            }).addClass('tooltipster-content-changing');\n\t\n\t                            // reset the CSS transitions and finish the change animation\n\t                            setTimeout(function () {\n\t\n\t                                if (self.Status != 'hidden') {\n\t\n\t                                    self.$tooltip.removeClass('tooltipster-content-changing');\n\t\n\t                                    // after the changing animation has completed, reset the CSS transitions\n\t                                    setTimeout(function () {\n\t\n\t                                        if (self.Status !== 'hidden') {\n\t                                            self.$tooltip.css({\n\t                                                '-webkit-transition': self.options.speed + 'ms',\n\t                                                '-moz-transition': self.options.speed + 'ms',\n\t                                                '-o-transition': self.options.speed + 'ms',\n\t                                                '-ms-transition': self.options.speed + 'ms',\n\t                                                'transition': self.options.speed + 'ms'\n\t                                            });\n\t                                        }\n\t                                    }, self.options.speed);\n\t                                }\n\t                            }, self.options.speed);\n\t                        } else {\n\t                            self.$tooltip.fadeTo(self.options.speed, 0.5, function () {\n\t                                if (self.Status != 'hidden') {\n\t                                    self.$tooltip.fadeTo(self.options.speed, 1);\n\t                                }\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            } else {\n\t                self.hide();\n\t            }\n\t        },\n\t\n\t        _repositionInfo: function _repositionInfo($el) {\n\t            return {\n\t                dimension: {\n\t                    height: $el.outerHeight(false),\n\t                    width: $el.outerWidth(false)\n\t                },\n\t                offset: $el.offset(),\n\t                position: {\n\t                    left: parseInt($el.css('left')),\n\t                    top: parseInt($el.css('top'))\n\t                }\n\t            };\n\t        },\n\t\n\t        hide: function hide(callback) {\n\t\n\t            var self = this;\n\t\n\t            // save the method custom callback and cancel any show method custom callbacks\n\t            if (callback) self.callbacks.hide.push(callback);\n\t            self.callbacks.show = [];\n\t\n\t            // get rid of any appearance timeout\n\t            clearTimeout(self.timerShow);\n\t            self.timerShow = null;\n\t            clearTimeout(self.timerHide);\n\t            self.timerHide = null;\n\t\n\t            var finishCallbacks = function finishCallbacks() {\n\t                // trigger any hide method custom callbacks and reset them\n\t                $.each(self.callbacks.hide, function (i, c) {\n\t                    c.call(self.$el);\n\t                });\n\t                self.callbacks.hide = [];\n\t            };\n\t\n\t            // hide\n\t            if (self.Status == 'shown' || self.Status == 'appearing') {\n\t\n\t                self.Status = 'disappearing';\n\t\n\t                var finish = function finish() {\n\t\n\t                    self.Status = 'hidden';\n\t\n\t                    // detach our content object first, so the next jQuery's remove() call does not unbind its event handlers\n\t                    if ((0, _typeof3.default)(self.Content) == 'object' && self.Content !== null) {\n\t                        self.Content.detach();\n\t                    }\n\t\n\t                    self.$tooltip.remove();\n\t                    self.$tooltip = null;\n\t\n\t                    // unbind orientationchange, scroll and resize listeners\n\t                    $(window).off('.' + self.namespace);\n\t\n\t                    $('body')\n\t                    // unbind any auto-closing click/touch listeners\n\t                    .off('.' + self.namespace).css('overflow-x', self.bodyOverflowX);\n\t\n\t                    // unbind any auto-closing click/touch listeners\n\t                    $('body').off('.' + self.namespace);\n\t\n\t                    // unbind any auto-closing hover listeners\n\t                    self.$elProxy.off('.' + self.namespace + '-autoClose');\n\t\n\t                    // call our constructor custom callback function\n\t                    self.options.functionAfter.call(self.$el, self.$el);\n\t\n\t                    // call our method custom callbacks functions\n\t                    finishCallbacks();\n\t                };\n\t\n\t                if (supportsTransitions()) {\n\t\n\t                    self.$tooltip.clearQueue().removeClass('tooltipster-' + self.options.animation + '-show')\n\t                    // for transitions only\n\t                    .addClass('tooltipster-dying');\n\t\n\t                    if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);\n\t\n\t                    self.$tooltip.queue(finish);\n\t                } else {\n\t                    self.$tooltip.stop().fadeOut(self.options.speed, finish);\n\t                }\n\t            }\n\t            // if the tooltip is already hidden, we still need to trigger the method custom callback\n\t            else if (self.Status == 'hidden') {\n\t                    finishCallbacks();\n\t                }\n\t\n\t            return self;\n\t        },\n\t\n\t        // the public show() method is actually an alias for the private showNow() method\n\t        show: function show(callback) {\n\t            this._showNow(callback);\n\t            return this;\n\t        },\n\t\n\t        // 'update' is deprecated in favor of 'content' but is kept for backward compatibility\n\t        update: function update(c) {\n\t            return this.content(c);\n\t        },\n\t        content: function content(c) {\n\t            // getter method\n\t            if (typeof c === 'undefined') {\n\t                return this.Content;\n\t            }\n\t            // setter method\n\t            else {\n\t                    this._update(c);\n\t                    return this;\n\t                }\n\t        },\n\t\n\t        reposition: function reposition() {\n\t\n\t            var self = this;\n\t\n\t            // in case the tooltip has been removed from DOM manually\n\t            if ($('body').find(self.$tooltip).length !== 0) {\n\t\n\t                // a function to detect if the tooltip is going off the screen horizontally. If so, reposition the crap out of it!\n\t\n\t                var dontGoOffScreenX = function dontGoOffScreenX() {\n\t\n\t                    var windowLeft = $(window).scrollLeft();\n\t\n\t                    // if the tooltip goes off the left side of the screen, line it up with the left side of the window\n\t                    if (myLeft - windowLeft < 0) {\n\t                        arrowReposition = myLeft - windowLeft;\n\t                        myLeft = windowLeft;\n\t                    }\n\t\n\t                    // if the tooltip goes off the right of the screen, line it up with the right side of the window\n\t                    if (myLeft + tooltipWidth - windowLeft > windowWidth) {\n\t                        arrowReposition = myLeft - (windowWidth + windowLeft - tooltipWidth);\n\t                        myLeft = windowWidth + windowLeft - tooltipWidth;\n\t                    }\n\t                };\n\t\n\t                // a function to detect if the tooltip is going off the screen vertically. If so, switch to the opposite!\n\t\n\t\n\t                var dontGoOffScreenY = function dontGoOffScreenY(switchTo, switchFrom) {\n\t                    // if it goes off the top off the page\n\t                    if (proxy.offset.top - $(window).scrollTop() - tooltipHeight - offsetY - 12 < 0 && switchFrom.indexOf('top') > -1) {\n\t                        practicalPosition = switchTo;\n\t                    }\n\t\n\t                    // if it goes off the bottom of the page\n\t                    if (proxy.offset.top + proxy.dimension.height + tooltipHeight + 12 + offsetY > $(window).scrollTop() + $(window).height() && switchFrom.indexOf('bottom') > -1) {\n\t                        practicalPosition = switchTo;\n\t                        myTop = proxy.offset.top - tooltipHeight - offsetY - 12;\n\t                    }\n\t                };\n\t\n\t                // reset width\n\t                self.$tooltip.css('width', '');\n\t\n\t                // find variables to determine placement\n\t                self.elProxyPosition = self._repositionInfo(self.$elProxy);\n\t                var arrowReposition = null,\n\t                    windowWidth = $(window).width(),\n\t\n\t                // shorthand\n\t                proxy = self.elProxyPosition,\n\t                    tooltipWidth = self.$tooltip.outerWidth(false),\n\t                    tooltipInnerWidth = self.$tooltip.innerWidth() + 1,\n\t                    // this +1 stops FireFox from sometimes forcing an additional text line\n\t                tooltipHeight = self.$tooltip.outerHeight(false);\n\t\n\t                // if this is an <area> tag inside a <map>, all hell breaks loose. Recalculate all the measurements based on coordinates\n\t                if (self.$elProxy.is('area')) {\n\t                    var areaShape = self.$elProxy.attr('shape'),\n\t                        mapName = self.$elProxy.parent().attr('name'),\n\t                        map = $('img[usemap=\"#' + mapName + '\"]'),\n\t                        mapOffsetLeft = map.offset().left,\n\t                        mapOffsetTop = map.offset().top,\n\t                        areaMeasurements = self.$elProxy.attr('coords') !== undefined ? self.$elProxy.attr('coords').split(',') : undefined;\n\t\n\t                    if (areaShape == 'circle') {\n\t                        var areaLeft = parseInt(areaMeasurements[0]),\n\t                            areaTop = parseInt(areaMeasurements[1]),\n\t                            areaWidth = parseInt(areaMeasurements[2]);\n\t                        proxy.dimension.height = areaWidth * 2;\n\t                        proxy.dimension.width = areaWidth * 2;\n\t                        proxy.offset.top = mapOffsetTop + areaTop - areaWidth;\n\t                        proxy.offset.left = mapOffsetLeft + areaLeft - areaWidth;\n\t                    } else if (areaShape == 'rect') {\n\t                        var areaLeft = parseInt(areaMeasurements[0]),\n\t                            areaTop = parseInt(areaMeasurements[1]),\n\t                            areaRight = parseInt(areaMeasurements[2]),\n\t                            areaBottom = parseInt(areaMeasurements[3]);\n\t                        proxy.dimension.height = areaBottom - areaTop;\n\t                        proxy.dimension.width = areaRight - areaLeft;\n\t                        proxy.offset.top = mapOffsetTop + areaTop;\n\t                        proxy.offset.left = mapOffsetLeft + areaLeft;\n\t                    } else if (areaShape == 'poly') {\n\t                        var areaXs = [],\n\t                            areaYs = [],\n\t                            areaSmallestX = 0,\n\t                            areaSmallestY = 0,\n\t                            areaGreatestX = 0,\n\t                            areaGreatestY = 0,\n\t                            arrayAlternate = 'even';\n\t\n\t                        for (var i = 0; i < areaMeasurements.length; i++) {\n\t                            var areaNumber = parseInt(areaMeasurements[i]);\n\t\n\t                            if (arrayAlternate == 'even') {\n\t                                if (areaNumber > areaGreatestX) {\n\t                                    areaGreatestX = areaNumber;\n\t                                    if (i === 0) {\n\t                                        areaSmallestX = areaGreatestX;\n\t                                    }\n\t                                }\n\t\n\t                                if (areaNumber < areaSmallestX) {\n\t                                    areaSmallestX = areaNumber;\n\t                                }\n\t\n\t                                arrayAlternate = 'odd';\n\t                            } else {\n\t                                if (areaNumber > areaGreatestY) {\n\t                                    areaGreatestY = areaNumber;\n\t                                    if (i == 1) {\n\t                                        areaSmallestY = areaGreatestY;\n\t                                    }\n\t                                }\n\t\n\t                                if (areaNumber < areaSmallestY) {\n\t                                    areaSmallestY = areaNumber;\n\t                                }\n\t\n\t                                arrayAlternate = 'even';\n\t                            }\n\t                        }\n\t\n\t                        proxy.dimension.height = areaGreatestY - areaSmallestY;\n\t                        proxy.dimension.width = areaGreatestX - areaSmallestX;\n\t                        proxy.offset.top = mapOffsetTop + areaSmallestY;\n\t                        proxy.offset.left = mapOffsetLeft + areaSmallestX;\n\t                    } else {\n\t                        proxy.dimension.height = map.outerHeight(false);\n\t                        proxy.dimension.width = map.outerWidth(false);\n\t                        proxy.offset.top = mapOffsetTop;\n\t                        proxy.offset.left = mapOffsetLeft;\n\t                    }\n\t                }\n\t\n\t                // our function and global vars for positioning our tooltip\n\t                var myLeft = 0,\n\t                    myLeftMirror = 0,\n\t                    myTop = 0,\n\t                    offsetY = parseInt(self.options.offsetY),\n\t                    offsetX = parseInt(self.options.offsetX),\n\t\n\t                // this is the arrow position that will eventually be used. It may differ from the position option if the tooltip cannot be displayed in this position\n\t                practicalPosition = self.options.position;\n\t\n\t                if (practicalPosition == 'top') {\n\t                    var leftDifference = proxy.offset.left + tooltipWidth - (proxy.offset.left + proxy.dimension.width);\n\t                    myLeft = proxy.offset.left + offsetX - leftDifference / 2;\n\t                    myTop = proxy.offset.top - tooltipHeight - offsetY - 12;\n\t                    dontGoOffScreenX();\n\t                    dontGoOffScreenY('bottom', 'top');\n\t                }\n\t\n\t                if (practicalPosition == 'top-left') {\n\t                    myLeft = proxy.offset.left + offsetX;\n\t                    myTop = proxy.offset.top - tooltipHeight - offsetY - 12;\n\t                    dontGoOffScreenX();\n\t                    dontGoOffScreenY('bottom-left', 'top-left');\n\t                }\n\t\n\t                if (practicalPosition == 'top-right') {\n\t                    myLeft = proxy.offset.left + proxy.dimension.width + offsetX - tooltipWidth;\n\t                    myTop = proxy.offset.top - tooltipHeight - offsetY - 12;\n\t                    dontGoOffScreenX();\n\t                    dontGoOffScreenY('bottom-right', 'top-right');\n\t                }\n\t\n\t                if (practicalPosition == 'bottom') {\n\t                    var leftDifference = proxy.offset.left + tooltipWidth - (proxy.offset.left + proxy.dimension.width);\n\t                    myLeft = proxy.offset.left - leftDifference / 2 + offsetX;\n\t                    myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12;\n\t                    dontGoOffScreenX();\n\t                    dontGoOffScreenY('top', 'bottom');\n\t                }\n\t\n\t                if (practicalPosition == 'bottom-left') {\n\t                    myLeft = proxy.offset.left + offsetX;\n\t                    myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12;\n\t                    dontGoOffScreenX();\n\t                    dontGoOffScreenY('top-left', 'bottom-left');\n\t                }\n\t\n\t                if (practicalPosition == 'bottom-right') {\n\t                    myLeft = proxy.offset.left + proxy.dimension.width + offsetX - tooltipWidth;\n\t                    myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12;\n\t                    dontGoOffScreenX();\n\t                    dontGoOffScreenY('top-right', 'bottom-right');\n\t                }\n\t\n\t                if (practicalPosition == 'left') {\n\t                    myLeft = proxy.offset.left - offsetX - tooltipWidth - 12;\n\t                    myLeftMirror = proxy.offset.left + offsetX + proxy.dimension.width + 12;\n\t                    var topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);\n\t                    myTop = proxy.offset.top - topDifference / 2 - offsetY;\n\t\n\t                    // if the tooltip goes off boths sides of the page\n\t                    if (myLeft < 0 && myLeftMirror + tooltipWidth > windowWidth) {\n\t                        var borderWidth = parseFloat(self.$tooltip.css('border-width')) * 2,\n\t                            newWidth = tooltipWidth + myLeft - borderWidth;\n\t                        self.$tooltip.css('width', newWidth + 'px');\n\t\n\t                        tooltipHeight = self.$tooltip.outerHeight(false);\n\t                        myLeft = proxy.offset.left - offsetX - newWidth - 12 - borderWidth;\n\t                        topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);\n\t                        myTop = proxy.offset.top - topDifference / 2 - offsetY;\n\t                    }\n\t\n\t                    // if it only goes off one side, flip it to the other side\n\t                    else if (myLeft < 0) {\n\t                            myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12;\n\t                            arrowReposition = 'left';\n\t                        }\n\t                }\n\t\n\t                if (practicalPosition == 'right') {\n\t                    myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12;\n\t                    myLeftMirror = proxy.offset.left - offsetX - tooltipWidth - 12;\n\t                    var topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);\n\t                    myTop = proxy.offset.top - topDifference / 2 - offsetY;\n\t\n\t                    // if the tooltip goes off boths sides of the page\n\t                    if (myLeft + tooltipWidth > windowWidth && myLeftMirror < 0) {\n\t                        var borderWidth = parseFloat(self.$tooltip.css('border-width')) * 2,\n\t                            newWidth = windowWidth - myLeft - borderWidth;\n\t                        self.$tooltip.css('width', newWidth + 'px');\n\t\n\t                        tooltipHeight = self.$tooltip.outerHeight(false);\n\t                        topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);\n\t                        myTop = proxy.offset.top - topDifference / 2 - offsetY;\n\t                    }\n\t\n\t                    // if it only goes off one side, flip it to the other side\n\t                    else if (myLeft + tooltipWidth > windowWidth) {\n\t                            myLeft = proxy.offset.left - offsetX - tooltipWidth - 12;\n\t                            arrowReposition = 'right';\n\t                        }\n\t                }\n\t\n\t                // if arrow is set true, style it and append it\n\t                if (self.options.arrow) {\n\t\n\t                    var arrowClass = 'tooltipster-arrow-' + practicalPosition;\n\t\n\t                    // set color of the arrow\n\t                    if (self.options.arrowColor.length < 1) {\n\t                        var arrowColor = self.$tooltip.css('background-color');\n\t                    } else {\n\t                        var arrowColor = self.options.arrowColor;\n\t                    }\n\t\n\t                    // if the tooltip was going off the page and had to re-adjust, we need to update the arrow's position\n\t                    if (!arrowReposition) {\n\t                        arrowReposition = '';\n\t                    } else if (arrowReposition == 'left') {\n\t                        arrowClass = 'tooltipster-arrow-right';\n\t                        arrowReposition = '';\n\t                    } else if (arrowReposition == 'right') {\n\t                        arrowClass = 'tooltipster-arrow-left';\n\t                        arrowReposition = '';\n\t                    } else {\n\t                        arrowReposition = 'left:' + Math.round(arrowReposition) + 'px;';\n\t                    }\n\t\n\t                    // building the logic to create the border around the arrow of the tooltip\n\t                    if (practicalPosition == 'top' || practicalPosition == 'top-left' || practicalPosition == 'top-right') {\n\t                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-bottom-width')),\n\t                            tooltipBorderColor = self.$tooltip.css('border-bottom-color');\n\t                    } else if (practicalPosition == 'bottom' || practicalPosition == 'bottom-left' || practicalPosition == 'bottom-right') {\n\t                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-top-width')),\n\t                            tooltipBorderColor = self.$tooltip.css('border-top-color');\n\t                    } else if (practicalPosition == 'left') {\n\t                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-right-width')),\n\t                            tooltipBorderColor = self.$tooltip.css('border-right-color');\n\t                    } else if (practicalPosition == 'right') {\n\t                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-left-width')),\n\t                            tooltipBorderColor = self.$tooltip.css('border-left-color');\n\t                    } else {\n\t                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-bottom-width')),\n\t                            tooltipBorderColor = self.$tooltip.css('border-bottom-color');\n\t                    }\n\t\n\t                    if (tooltipBorderWidth > 1) {\n\t                        tooltipBorderWidth++;\n\t                    }\n\t\n\t                    var arrowBorder = '';\n\t                    if (tooltipBorderWidth !== 0) {\n\t                        var arrowBorderSize = '',\n\t                            arrowBorderColor = 'border-color: ' + tooltipBorderColor + ';';\n\t                        if (arrowClass.indexOf('bottom') !== -1) {\n\t                            arrowBorderSize = 'margin-top: -' + Math.round(tooltipBorderWidth) + 'px;';\n\t                        } else if (arrowClass.indexOf('top') !== -1) {\n\t                            arrowBorderSize = 'margin-bottom: -' + Math.round(tooltipBorderWidth) + 'px;';\n\t                        } else if (arrowClass.indexOf('left') !== -1) {\n\t                            arrowBorderSize = 'margin-right: -' + Math.round(tooltipBorderWidth) + 'px;';\n\t                        } else if (arrowClass.indexOf('right') !== -1) {\n\t                            arrowBorderSize = 'margin-left: -' + Math.round(tooltipBorderWidth) + 'px;';\n\t                        }\n\t                        arrowBorder = '<span class=\"tooltipster-arrow-border\" style=\"' + arrowBorderSize + ' ' + arrowBorderColor + ';\"></span>';\n\t                    }\n\t\n\t                    // if the arrow already exists, remove and replace it\n\t                    self.$tooltip.find('.tooltipster-arrow').remove();\n\t\n\t                    // build out the arrow and append it\n\t                    var arrowConstruct = '<div class=\"' + arrowClass + ' tooltipster-arrow\" style=\"' + arrowReposition + '\">' + arrowBorder + '<span style=\"border-color:' + arrowColor + ';\"></span></div>';\n\t                    self.$tooltip.append(arrowConstruct);\n\t                }\n\t\n\t                // position the tooltip\n\t                self.$tooltip.css({ 'top': Math.round(myTop) + 'px', 'left': Math.round(myLeft) + 'px' });\n\t            }\n\t\n\t            return self;\n\t        },\n\t\n\t        enable: function enable() {\n\t            this.enabled = true;\n\t            return this;\n\t        },\n\t\n\t        disable: function disable() {\n\t            // hide first, in case the tooltip would not disappear on its own (autoClose false)\n\t            this.hide();\n\t            this.enabled = false;\n\t            return this;\n\t        },\n\t\n\t        destroy: function destroy() {\n\t\n\t            var self = this;\n\t\n\t            self.hide();\n\t\n\t            // remove the icon, if any\n\t            if (self.$el[0] !== self.$elProxy[0]) {\n\t                self.$elProxy.remove();\n\t            }\n\t\n\t            self.$el.removeData(self.namespace).off('.' + self.namespace);\n\t\n\t            var ns = self.$el.data('tooltipster-ns');\n\t\n\t            // if there are no more tooltips on this element\n\t            if (ns.length === 1) {\n\t\n\t                // optional restoration of a title attribute\n\t                var title = null;\n\t                if (self.options.restoration === 'previous') {\n\t                    title = self.$el.data('tooltipster-initialTitle');\n\t                } else if (self.options.restoration === 'current') {\n\t\n\t                    // old school technique to stringify when outerHTML is not supported\n\t                    title = typeof self.Content === 'string' ? self.Content : $('<div></div>').append(self.Content).html();\n\t                }\n\t\n\t                if (title) {\n\t                    self.$el.attr('title', title);\n\t                }\n\t\n\t                // final cleaning\n\t                self.$el.removeClass('tooltipstered').removeData('tooltipster-ns').removeData('tooltipster-initialTitle');\n\t            } else {\n\t                // remove the instance namespace from the list of namespaces of tooltips present on the element\n\t                ns = $.grep(ns, function (el, i) {\n\t                    return el !== self.namespace;\n\t                });\n\t                self.$el.data('tooltipster-ns', ns);\n\t            }\n\t\n\t            return self;\n\t        },\n\t\n\t        elementIcon: function elementIcon() {\n\t            return this.$el[0] !== this.$elProxy[0] ? this.$elProxy[0] : undefined;\n\t        },\n\t\n\t        elementTooltip: function elementTooltip() {\n\t            return this.$tooltip ? this.$tooltip[0] : undefined;\n\t        },\n\t\n\t        // public methods but for internal use only\n\t        // getter if val is ommitted, setter otherwise\n\t        option: function option(o, val) {\n\t            if (typeof val == 'undefined') return this.options[o];else {\n\t                this.options[o] = val;\n\t                return this;\n\t            }\n\t        },\n\t        status: function status() {\n\t            return this.Status;\n\t        }\n\t    };\n\t\n\t    $.fn[pluginName] = function () {\n\t\n\t        // for using in closures\n\t        var args = arguments;\n\t\n\t        // if we are not in the context of jQuery wrapped HTML element(s) :\n\t        // this happens when calling static methods in the form $.fn.tooltipster('methodName'), or when calling $(sel).tooltipster('methodName or options') where $(sel) does not match anything\n\t        if (this.length === 0) {\n\t\n\t            // if the first argument is a method name\n\t            if (typeof args[0] === 'string') {\n\t\n\t                var methodIsStatic = true;\n\t\n\t                // list static methods here (usable by calling $.fn.tooltipster('methodName');)\n\t                switch (args[0]) {\n\t\n\t                    case 'setDefaults':\n\t                        // change default options for all future instances\n\t                        $.extend(defaults, args[1]);\n\t                        break;\n\t\n\t                    default:\n\t                        methodIsStatic = false;\n\t                        break;\n\t                }\n\t\n\t                // $.fn.tooltipster('methodName') calls will return true\n\t                if (methodIsStatic) return true;\n\t                // $(sel).tooltipster('methodName') calls will return the list of objects event though it's empty because chaining should work on empty lists\n\t                else return this;\n\t            }\n\t            // the first argument is undefined or an object of options : we are initalizing but there is no element matched by selector\n\t            else {\n\t                    // still chainable : same as above\n\t                    return this;\n\t                }\n\t        }\n\t        // this happens when calling $(sel).tooltipster('methodName or options') where $(sel) matches one or more elements\n\t        else {\n\t\n\t                // method calls\n\t                if (typeof args[0] === 'string') {\n\t\n\t                    var v = '#*$~&';\n\t\n\t                    this.each(function () {\n\t\n\t                        // retrieve the namepaces of the tooltip(s) that exist on that element. We will interact with the first tooltip only.\n\t                        var ns = $(this).data('tooltipster-ns'),\n\t\n\t                        // self represents the instance of the first tooltipster plugin associated to the current HTML object of the loop\n\t                        self = ns ? $(this).data(ns[0]) : null;\n\t\n\t                        // if the current element holds a tooltipster instance\n\t                        if (self) {\n\t\n\t                            if (typeof self[args[0]] === 'function') {\n\t                                // note : args[1] and args[2] may not be defined\n\t                                var resp = self[args[0]](args[1], args[2]);\n\t                            } else {\n\t                                throw new Error('Unknown method .tooltipster(\"' + args[0] + '\")');\n\t                            }\n\t\n\t                            // if the function returned anything other than the instance itself (which implies chaining)\n\t                            if (resp !== self) {\n\t                                v = resp;\n\t                                // return false to stop .each iteration on the first element matched by the selector\n\t                                return false;\n\t                            }\n\t                        } else {\n\t                            throw new Error('You called Tooltipster\\'s \"' + args[0] + '\" method on an uninitialized element');\n\t                        }\n\t                    });\n\t\n\t                    return v !== '#*$~&' ? v : this;\n\t                }\n\t                // first argument is undefined or an object : the tooltip is initializing\n\t                else {\n\t\n\t                        var instances = [],\n\t\n\t                        // is there a defined value for the multiple option in the options object ?\n\t                        multipleIsSet = args[0] && typeof args[0].multiple !== 'undefined',\n\t\n\t                        // if the multiple option is set to true, or if it's not defined but set to true in the defaults\n\t                        multiple = multipleIsSet && args[0].multiple || !multipleIsSet && defaults.multiple,\n\t\n\t                        // same for debug\n\t                        debugIsSet = args[0] && typeof args[0].debug !== 'undefined',\n\t                            debug = debugIsSet && args[0].debug || !debugIsSet && defaults.debug;\n\t\n\t                        // initialize a tooltipster instance for each element if it doesn't already have one or if the multiple option is set, and attach the object to it\n\t                        this.each(function () {\n\t\n\t                            var go = false,\n\t                                ns = $(this).data('tooltipster-ns'),\n\t                                instance = null;\n\t\n\t                            if (!ns) {\n\t                                go = true;\n\t                            } else if (multiple) {\n\t                                go = true;\n\t                            } else if (debug) {\n\t                                console.log('Tooltipster: one or more tooltips are already attached to this element: ignoring. Use the \"multiple\" option to attach more tooltips.');\n\t                            }\n\t\n\t                            if (go) {\n\t                                instance = new Plugin(this, args[0]);\n\t\n\t                                // save the reference of the new instance\n\t                                if (!ns) ns = [];\n\t                                ns.push(instance.namespace);\n\t                                $(this).data('tooltipster-ns', ns);\n\t\n\t                                // save the instance itself\n\t                                $(this).data(instance.namespace, instance);\n\t                            }\n\t\n\t                            instances.push(instance);\n\t                        });\n\t\n\t                        if (multiple) return instances;else return this;\n\t                    }\n\t            }\n\t    };\n\t\n\t    // quick & dirty compare function (not bijective nor multidimensional)\n\t    function areEqual(a, b) {\n\t        var same = true;\n\t        $.each(a, function (i, el) {\n\t            if (typeof b[i] === 'undefined' || a[i] !== b[i]) {\n\t                same = false;\n\t                return false;\n\t            }\n\t        });\n\t        return same;\n\t    }\n\t\n\t    // detect if this device can trigger touch events\n\t    var deviceHasTouchCapability = !!('ontouchstart' in window);\n\t\n\t    // we'll assume the device has no mouse until we detect any mouse movement\n\t    var deviceHasMouse = false;\n\t    $('body').one('mousemove', function () {\n\t        deviceHasMouse = true;\n\t    });\n\t\n\t    function deviceIsPureTouch() {\n\t        return !deviceHasMouse && deviceHasTouchCapability;\n\t    }\n\t\n\t    // detecting support for CSS transitions\n\t    function supportsTransitions() {\n\t        var b = document.body || document.documentElement,\n\t            s = b.style,\n\t            p = 'transition';\n\t\n\t        if (typeof s[p] == 'string') {\n\t            return true;\n\t        }\n\t\n\t        v = ['Moz', 'Webkit', 'Khtml', 'O', 'ms'], p = p.charAt(0).toUpperCase() + p.substr(1);\n\t        for (var i = 0; i < v.length; i++) {\n\t            if (typeof s[v[i] + p] == 'string') {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t};\n\n/***/ },\n\n/***/ 77:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray2 = __webpack_require__(78);\n\t\n\tvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\t\n\tvar _jquery = __webpack_require__(1);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _nouislider = __webpack_require__(87);\n\t\n\tvar _nouislider2 = _interopRequireDefault(_nouislider);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function () {\n\t\n\t    var container = (0, _jquery2.default)('.calc');\n\t\n\t    if (!container.length) return;\n\t\n\t    var root = (0, _jquery2.default)('body');\n\t    var sliderContainer = container.find('.slider');\n\t    var slider = sliderContainer.find('.slider__base');\n\t    var sliderValue = sliderContainer.find('.slider__value')[0].firstChild;\n\t    var totalValue = container.find('.calc__result');\n\t    var stowage = container.find('input[name=\"stowage\"]');\n\t    var reserve = container.find('input[name=\"reserve\"]');\n\t\n\t    var initialValue = 24;\n\t    var CAPACITY = container.find('input[name=\"capacity\"]').val() || 1.75;\n\t\n\t    var _slider$data = slider.data();\n\t\n\t    var min = _slider$data.min;\n\t    var max = _slider$data.max;\n\t    var init = _slider$data.init;\n\t\n\t\n\t    var space = init || initialValue;\n\t    var timeout = null;\n\t\n\t    _nouislider2.default.create(slider[0], {\n\t        start: init || initialValue,\n\t        range: {\n\t            min: min || 0,\n\t            max: max || 100\n\t        }\n\t    });\n\t\n\t    calculate(1);\n\t\n\t    var handle = slider.find('.noUi-handle');\n\t\n\t    handle.on('mousedown', function () {\n\t        sliderContainer.addClass('is-active');\n\t\n\t        root.one('mouseup', function () {\n\t            sliderContainer.removeClass('is-active');\n\t        });\n\t    });\n\t\n\t    stowage.on('change', calculate);\n\t    reserve.on('change', calculate);\n\t\n\t    slider[0].noUiSlider.on('slide', function (valuesStr, handleIndex, valuesInt, what) {\n\t        var _valuesInt = (0, _slicedToArray3.default)(valuesInt, 1);\n\t\n\t        space = _valuesInt[0];\n\t\n\t        calculate();\n\t    });\n\t\n\t    function formatValue(space) {\n\t        return space.toFixed(1).replace('.', ',') + ' ';\n\t    }\n\t\n\t    function getPackAmount(space) {\n\t        return space * (+stowage.filter(':checked').val() || 1) * (+reserve.filter(':checked').val() || 1) / CAPACITY;\n\t    }\n\t\n\t    function highlight() {\n\t        totalValue.addClass('omg');\n\t        setTimeout(function () {\n\t            return totalValue.removeClass('omg');\n\t        }, 500);\n\t    }\n\t\n\t    function calculate(silent) {\n\t        sliderValue.textContent = formatValue(space);\n\t        totalValue.text(Math.ceil(getPackAmount(space)));\n\t\n\t        if (silent) return;\n\t        clearTimeout(timeout);\n\t        timeout = setTimeout(highlight, 200);\n\t    }\n\t})();\n\n/***/ },\n\n/***/ 87:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! nouislider - 8.3.0 - 2016-02-14 17:37:19 */\r\n\t\r\n\t(function (factory) {\r\n\t\r\n\t    if ( true ) {\r\n\t\r\n\t        // AMD. Register as an anonymous module.\r\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t    } else if ( typeof exports === 'object' ) {\r\n\t\r\n\t        // Node/CommonJS\r\n\t        module.exports = factory();\r\n\t\r\n\t    } else {\r\n\t\r\n\t        // Browser globals\r\n\t        window.noUiSlider = factory();\r\n\t    }\r\n\t\r\n\t}(function( ){\r\n\t\r\n\t\t'use strict';\r\n\t\r\n\t\r\n\t\t// Removes duplicates from an array.\r\n\t\tfunction unique(array) {\r\n\t\t\treturn array.filter(function(a){\r\n\t\t\t\treturn !this[a] ? this[a] = true : false;\r\n\t\t\t}, {});\r\n\t\t}\r\n\t\r\n\t\t// Round a value to the closest 'to'.\r\n\t\tfunction closest ( value, to ) {\r\n\t\t\treturn Math.round(value / to) * to;\r\n\t\t}\r\n\t\r\n\t\t// Current position of an element relative to the document.\r\n\t\tfunction offset ( elem ) {\r\n\t\r\n\t\tvar rect = elem.getBoundingClientRect(),\r\n\t\t\tdoc = elem.ownerDocument,\r\n\t\t\tdocElem = doc.documentElement,\r\n\t\t\tpageOffset = getPageOffset();\r\n\t\r\n\t\t\t// getBoundingClientRect contains left scroll in Chrome on Android.\r\n\t\t\t// I haven't found a feature detection that proves this. Worst case\r\n\t\t\t// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\r\n\t\t\tif ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {\r\n\t\t\t\tpageOffset.x = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\ttop: rect.top + pageOffset.y - docElem.clientTop,\r\n\t\t\t\tleft: rect.left + pageOffset.x - docElem.clientLeft\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\t// Checks whether a value is numerical.\r\n\t\tfunction isNumeric ( a ) {\r\n\t\t\treturn typeof a === 'number' && !isNaN( a ) && isFinite( a );\r\n\t\t}\r\n\t\r\n\t\t// Rounds a number to 7 supported decimals.\r\n\t\tfunction accurateNumber( number ) {\r\n\t\t\tvar p = Math.pow(10, 7);\r\n\t\t\treturn Number((Math.round(number*p)/p).toFixed(7));\r\n\t\t}\r\n\t\r\n\t\t// Sets a class and removes it after [duration] ms.\r\n\t\tfunction addClassFor ( element, className, duration ) {\r\n\t\t\taddClass(element, className);\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tremoveClass(element, className);\r\n\t\t\t}, duration);\r\n\t\t}\r\n\t\r\n\t\t// Limits a value to 0 - 100\r\n\t\tfunction limit ( a ) {\r\n\t\t\treturn Math.max(Math.min(a, 100), 0);\r\n\t\t}\r\n\t\r\n\t\t// Wraps a variable as an array, if it isn't one yet.\r\n\t\tfunction asArray ( a ) {\r\n\t\t\treturn Array.isArray(a) ? a : [a];\r\n\t\t}\r\n\t\r\n\t\t// Counts decimals\r\n\t\tfunction countDecimals ( numStr ) {\r\n\t\t\tvar pieces = numStr.split(\".\");\r\n\t\t\treturn pieces.length > 1 ? pieces[1].length : 0;\r\n\t\t}\r\n\t\r\n\t\t// http://youmightnotneedjquery.com/#add_class\r\n\t\tfunction addClass ( el, className ) {\r\n\t\t\tif ( el.classList ) {\r\n\t\t\t\tel.classList.add(className);\r\n\t\t\t} else {\r\n\t\t\t\tel.className += ' ' + className;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// http://youmightnotneedjquery.com/#remove_class\r\n\t\tfunction removeClass ( el, className ) {\r\n\t\t\tif ( el.classList ) {\r\n\t\t\t\tel.classList.remove(className);\r\n\t\t\t} else {\r\n\t\t\t\tel.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\r\n\t\tfunction hasClass ( el, className ) {\r\n\t\t\treturn el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\r\n\t\t}\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\r\n\t\tfunction getPageOffset ( ) {\r\n\t\r\n\t\t\tvar supportPageOffset = window.pageXOffset !== undefined,\r\n\t\t\t\tisCSS1Compat = ((document.compatMode || \"\") === \"CSS1Compat\"),\r\n\t\t\t\tx = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,\r\n\t\t\t\ty = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\t// Shorthand for stopPropagation so we don't have to create a dynamic method\r\n\t\tfunction stopPropagation ( e ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t\r\n\t\t// todo\r\n\t\tfunction addCssPrefix(cssPrefix) {\r\n\t\t\treturn function(className) {\r\n\t\t\t\treturn cssPrefix + className;\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar\r\n\t\t// Determine the events to bind. IE11 implements pointerEvents without\r\n\t\t// a prefix, which breaks compatibility with the IE10 implementation.\r\n\t\t/** @const */\r\n\t\tactions = window.navigator.pointerEnabled ? {\r\n\t\t\tstart: 'pointerdown',\r\n\t\t\tmove: 'pointermove',\r\n\t\t\tend: 'pointerup'\r\n\t\t} : window.navigator.msPointerEnabled ? {\r\n\t\t\tstart: 'MSPointerDown',\r\n\t\t\tmove: 'MSPointerMove',\r\n\t\t\tend: 'MSPointerUp'\r\n\t\t} : {\r\n\t\t\tstart: 'mousedown touchstart',\r\n\t\t\tmove: 'mousemove touchmove',\r\n\t\t\tend: 'mouseup touchend'\r\n\t\t},\r\n\t\tdefaultCssPrefix = 'noUi-';\r\n\t\r\n\t\r\n\t// Value calculation\r\n\t\r\n\t\t// Determine the size of a sub-range in relation to a full range.\r\n\t\tfunction subRangeRatio ( pa, pb ) {\r\n\t\t\treturn (100 / (pb - pa));\r\n\t\t}\r\n\t\r\n\t\t// (percentage) How many percent is this value of this range?\r\n\t\tfunction fromPercentage ( range, value ) {\r\n\t\t\treturn (value * 100) / ( range[1] - range[0] );\r\n\t\t}\r\n\t\r\n\t\t// (percentage) Where is this value on this range?\r\n\t\tfunction toPercentage ( range, value ) {\r\n\t\t\treturn fromPercentage( range, range[0] < 0 ?\r\n\t\t\t\tvalue + Math.abs(range[0]) :\r\n\t\t\t\t\tvalue - range[0] );\r\n\t\t}\r\n\t\r\n\t\t// (value) How much is this percentage on this range?\r\n\t\tfunction isPercentage ( range, value ) {\r\n\t\t\treturn ((value * ( range[1] - range[0] )) / 100) + range[0];\r\n\t\t}\r\n\t\r\n\t\r\n\t// Range conversion\r\n\t\r\n\t\tfunction getJ ( value, arr ) {\r\n\t\r\n\t\t\tvar j = 1;\r\n\t\r\n\t\t\twhile ( value >= arr[j] ){\r\n\t\t\t\tj += 1;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn j;\r\n\t\t}\r\n\t\r\n\t\t// (percentage) Input a value, find where, on a scale of 0-100, it applies.\r\n\t\tfunction toStepping ( xVal, xPct, value ) {\r\n\t\r\n\t\t\tif ( value >= xVal.slice(-1)[0] ){\r\n\t\t\t\treturn 100;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar j = getJ( value, xVal ), va, vb, pa, pb;\r\n\t\r\n\t\t\tva = xVal[j-1];\r\n\t\t\tvb = xVal[j];\r\n\t\t\tpa = xPct[j-1];\r\n\t\t\tpb = xPct[j];\r\n\t\r\n\t\t\treturn pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));\r\n\t\t}\r\n\t\r\n\t\t// (value) Input a percentage, find where it is on the specified range.\r\n\t\tfunction fromStepping ( xVal, xPct, value ) {\r\n\t\r\n\t\t\t// There is no range group that fits 100\r\n\t\t\tif ( value >= 100 ){\r\n\t\t\t\treturn xVal.slice(-1)[0];\r\n\t\t\t}\r\n\t\r\n\t\t\tvar j = getJ( value, xPct ), va, vb, pa, pb;\r\n\t\r\n\t\t\tva = xVal[j-1];\r\n\t\t\tvb = xVal[j];\r\n\t\t\tpa = xPct[j-1];\r\n\t\t\tpb = xPct[j];\r\n\t\r\n\t\t\treturn isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));\r\n\t\t}\r\n\t\r\n\t\t// (percentage) Get the step that applies at a certain value.\r\n\t\tfunction getStep ( xPct, xSteps, snap, value ) {\r\n\t\r\n\t\t\tif ( value === 100 ) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar j = getJ( value, xPct ), a, b;\r\n\t\r\n\t\t\t// If 'snap' is set, steps are used as fixed points on the slider.\r\n\t\t\tif ( snap ) {\r\n\t\r\n\t\t\t\ta = xPct[j-1];\r\n\t\t\t\tb = xPct[j];\r\n\t\r\n\t\t\t\t// Find the closest position, a or b.\r\n\t\t\t\tif ((value - a) > ((b-a)/2)){\r\n\t\t\t\t\treturn b;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( !xSteps[j-1] ){\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn xPct[j-1] + closest(\r\n\t\t\t\tvalue - xPct[j-1],\r\n\t\t\t\txSteps[j-1]\r\n\t\t\t);\r\n\t\t}\r\n\t\r\n\t\r\n\t// Entry parsing\r\n\t\r\n\t\tfunction handleEntryPoint ( index, value, that ) {\r\n\t\r\n\t\t\tvar percentage;\r\n\t\r\n\t\t\t// Wrap numerical input in an array.\r\n\t\t\tif ( typeof value === \"number\" ) {\r\n\t\t\t\tvalue = [value];\r\n\t\t\t}\r\n\t\r\n\t\t\t// Reject any invalid input, by testing whether value is an array.\r\n\t\t\tif ( Object.prototype.toString.call( value ) !== '[object Array]' ){\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'range' contains invalid value.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Covert min/max syntax to 0 and 100.\r\n\t\t\tif ( index === 'min' ) {\r\n\t\t\t\tpercentage = 0;\r\n\t\t\t} else if ( index === 'max' ) {\r\n\t\t\t\tpercentage = 100;\r\n\t\t\t} else {\r\n\t\t\t\tpercentage = parseFloat( index );\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check for correct input.\r\n\t\t\tif ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'range' value isn't numeric.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Store values.\r\n\t\t\tthat.xPct.push( percentage );\r\n\t\t\tthat.xVal.push( value[0] );\r\n\t\r\n\t\t\t// NaN will evaluate to false too, but to keep\r\n\t\t\t// logging clear, set step explicitly. Make sure\r\n\t\t\t// not to override the 'step' setting with false.\r\n\t\t\tif ( !percentage ) {\r\n\t\t\t\tif ( !isNaN( value[1] ) ) {\r\n\t\t\t\t\tthat.xSteps[0] = value[1];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthat.xSteps.push( isNaN(value[1]) ? false : value[1] );\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction handleStepPoint ( i, n, that ) {\r\n\t\r\n\t\t\t// Ignore 'false' stepping.\r\n\t\t\tif ( !n ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Factor to range ratio\r\n\t\t\tthat.xSteps[i] = fromPercentage([\r\n\t\t\t\t that.xVal[i]\r\n\t\t\t\t,that.xVal[i+1]\r\n\t\t\t], n) / subRangeRatio (\r\n\t\t\t\tthat.xPct[i],\r\n\t\t\t\tthat.xPct[i+1] );\r\n\t\t}\r\n\t\r\n\t\r\n\t// Interface\r\n\t\r\n\t\t// The interface to Spectrum handles all direction-based\r\n\t\t// conversions, so the above values are unaware.\r\n\t\r\n\t\tfunction Spectrum ( entry, snap, direction, singleStep ) {\r\n\t\r\n\t\t\tthis.xPct = [];\r\n\t\t\tthis.xVal = [];\r\n\t\t\tthis.xSteps = [ singleStep || false ];\r\n\t\t\tthis.xNumSteps = [ false ];\r\n\t\r\n\t\t\tthis.snap = snap;\r\n\t\t\tthis.direction = direction;\r\n\t\r\n\t\t\tvar index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];\r\n\t\r\n\t\t\t// Map the object keys to an array.\r\n\t\t\tfor ( index in entry ) {\r\n\t\t\t\tif ( entry.hasOwnProperty(index) ) {\r\n\t\t\t\t\tordered.push([entry[index], index]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Sort all entries by value (numeric sort).\r\n\t\t\tif ( ordered.length && typeof ordered[0][0] === \"object\" ) {\r\n\t\t\t\tordered.sort(function(a, b) { return a[0][0] - b[0][0]; });\r\n\t\t\t} else {\r\n\t\t\t\tordered.sort(function(a, b) { return a[0] - b[0]; });\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// Convert all entries to subranges.\r\n\t\t\tfor ( index = 0; index < ordered.length; index++ ) {\r\n\t\t\t\thandleEntryPoint(ordered[index][1], ordered[index][0], this);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Store the actual step values.\r\n\t\t\t// xSteps is sorted in the same order as xPct and xVal.\r\n\t\t\tthis.xNumSteps = this.xSteps.slice(0);\r\n\t\r\n\t\t\t// Convert all numeric steps to the percentage of the subrange they represent.\r\n\t\t\tfor ( index = 0; index < this.xNumSteps.length; index++ ) {\r\n\t\t\t\thandleStepPoint(index, this.xNumSteps[index], this);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tSpectrum.prototype.getMargin = function ( value ) {\r\n\t\t\treturn this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;\r\n\t\t};\r\n\t\r\n\t\tSpectrum.prototype.toStepping = function ( value ) {\r\n\t\r\n\t\t\tvalue = toStepping( this.xVal, this.xPct, value );\r\n\t\r\n\t\t\t// Invert the value if this is a right-to-left slider.\r\n\t\t\tif ( this.direction ) {\r\n\t\t\t\tvalue = 100 - value;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn value;\r\n\t\t};\r\n\t\r\n\t\tSpectrum.prototype.fromStepping = function ( value ) {\r\n\t\r\n\t\t\t// Invert the value if this is a right-to-left slider.\r\n\t\t\tif ( this.direction ) {\r\n\t\t\t\tvalue = 100 - value;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn accurateNumber(fromStepping( this.xVal, this.xPct, value ));\r\n\t\t};\r\n\t\r\n\t\tSpectrum.prototype.getStep = function ( value ) {\r\n\t\r\n\t\t\t// Find the proper step for rtl sliders by search in inverse direction.\r\n\t\t\t// Fixes issue #262.\r\n\t\t\tif ( this.direction ) {\r\n\t\t\t\tvalue = 100 - value;\r\n\t\t\t}\r\n\t\r\n\t\t\tvalue = getStep(this.xPct, this.xSteps, this.snap, value );\r\n\t\r\n\t\t\tif ( this.direction ) {\r\n\t\t\t\tvalue = 100 - value;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn value;\r\n\t\t};\r\n\t\r\n\t\tSpectrum.prototype.getApplicableStep = function ( value ) {\r\n\t\r\n\t\t\t// If the value is 100%, return the negative step twice.\r\n\t\t\tvar j = getJ(value, this.xPct), offset = value === 100 ? 2 : 1;\r\n\t\t\treturn [this.xNumSteps[j-2], this.xVal[j-offset], this.xNumSteps[j-offset]];\r\n\t\t};\r\n\t\r\n\t\t// Outside testing\r\n\t\tSpectrum.prototype.convert = function ( value ) {\r\n\t\t\treturn this.getStep(this.toStepping(value));\r\n\t\t};\r\n\t\r\n\t/*\tEvery input option is tested and parsed. This'll prevent\r\n\t\tendless validation in internal methods. These tests are\r\n\t\tstructured with an item for every option available. An\r\n\t\toption can be marked as required by setting the 'r' flag.\r\n\t\tThe testing function is provided with three arguments:\r\n\t\t\t- The provided value for the option;\r\n\t\t\t- A reference to the options object;\r\n\t\t\t- The name for the option;\r\n\t\r\n\t\tThe testing function returns false when an error is detected,\r\n\t\tor true when everything is OK. It can also modify the option\r\n\t\tobject, to make sure all values can be correctly looped elsewhere. */\r\n\t\r\n\t\tvar defaultFormatter = { 'to': function( value ){\r\n\t\t\treturn value !== undefined && value.toFixed(2);\r\n\t\t}, 'from': Number };\r\n\t\r\n\t\tfunction testStep ( parsed, entry ) {\r\n\t\r\n\t\t\tif ( !isNumeric( entry ) ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'step' is not numeric.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// The step option can still be used to set stepping\r\n\t\t\t// for linear sliders. Overwritten if set in 'range'.\r\n\t\t\tparsed.singleStep = entry;\r\n\t\t}\r\n\t\r\n\t\tfunction testRange ( parsed, entry ) {\r\n\t\r\n\t\t\t// Filter incorrect input.\r\n\t\t\tif ( typeof entry !== 'object' || Array.isArray(entry) ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'range' is not an object.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Catch missing start or end.\r\n\t\t\tif ( entry.min === undefined || entry.max === undefined ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Catch equal start or end.\r\n\t\t\tif ( entry.min === entry.max ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'range' 'min' and 'max' cannot be equal.\");\r\n\t\t\t}\r\n\t\r\n\t\t\tparsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);\r\n\t\t}\r\n\t\r\n\t\tfunction testStart ( parsed, entry ) {\r\n\t\r\n\t\t\tentry = asArray(entry);\r\n\t\r\n\t\t\t// Validate input. Values aren't tested, as the public .val method\r\n\t\t\t// will always provide a valid location.\r\n\t\t\tif ( !Array.isArray( entry ) || !entry.length || entry.length > 2 ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'start' option is incorrect.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Store the number of handles.\r\n\t\t\tparsed.handles = entry.length;\r\n\t\r\n\t\t\t// When the slider is initialized, the .val method will\r\n\t\t\t// be called with the start options.\r\n\t\t\tparsed.start = entry;\r\n\t\t}\r\n\t\r\n\t\tfunction testSnap ( parsed, entry ) {\r\n\t\r\n\t\t\t// Enforce 100% stepping within subranges.\r\n\t\t\tparsed.snap = entry;\r\n\t\r\n\t\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'snap' option must be a boolean.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testAnimate ( parsed, entry ) {\r\n\t\r\n\t\t\t// Enforce 100% stepping within subranges.\r\n\t\t\tparsed.animate = entry;\r\n\t\r\n\t\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'animate' option must be a boolean.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testConnect ( parsed, entry ) {\r\n\t\r\n\t\t\tif ( entry === 'lower' && parsed.handles === 1 ) {\r\n\t\t\t\tparsed.connect = 1;\r\n\t\t\t} else if ( entry === 'upper' && parsed.handles === 1 ) {\r\n\t\t\t\tparsed.connect = 2;\r\n\t\t\t} else if ( entry === true && parsed.handles === 2 ) {\r\n\t\t\t\tparsed.connect = 3;\r\n\t\t\t} else if ( entry === false ) {\r\n\t\t\t\tparsed.connect = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testOrientation ( parsed, entry ) {\r\n\t\r\n\t\t\t// Set orientation to an a numerical value for easy\r\n\t\t\t// array selection.\r\n\t\t\tswitch ( entry ){\r\n\t\t\t  case 'horizontal':\r\n\t\t\t\tparsed.ort = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t  case 'vertical':\r\n\t\t\t\tparsed.ort = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t  default:\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'orientation' option is invalid.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testMargin ( parsed, entry ) {\r\n\t\r\n\t\t\tif ( !isNumeric(entry) ){\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'margin' option must be numeric.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Issue #582\r\n\t\t\tif ( entry === 0 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tparsed.margin = parsed.spectrum.getMargin(entry);\r\n\t\r\n\t\t\tif ( !parsed.margin ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'margin' option is only supported on linear sliders.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testLimit ( parsed, entry ) {\r\n\t\r\n\t\t\tif ( !isNumeric(entry) ){\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'limit' option must be numeric.\");\r\n\t\t\t}\r\n\t\r\n\t\t\tparsed.limit = parsed.spectrum.getMargin(entry);\r\n\t\r\n\t\t\tif ( !parsed.limit ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'limit' option is only supported on linear sliders.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testDirection ( parsed, entry ) {\r\n\t\r\n\t\t\t// Set direction as a numerical value for easy parsing.\r\n\t\t\t// Invert connection for RTL sliders, so that the proper\r\n\t\t\t// handles get the connect/background classes.\r\n\t\t\tswitch ( entry ) {\r\n\t\t\t  case 'ltr':\r\n\t\t\t\tparsed.dir = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t  case 'rtl':\r\n\t\t\t\tparsed.dir = 1;\r\n\t\t\t\tparsed.connect = [0,2,1,3][parsed.connect];\r\n\t\t\t\tbreak;\r\n\t\t\t  default:\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'direction' option was not recognized.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testBehaviour ( parsed, entry ) {\r\n\t\r\n\t\t\t// Make sure the input is a string.\r\n\t\t\tif ( typeof entry !== 'string' ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check if the string contains any keywords.\r\n\t\t\t// None are required.\r\n\t\t\tvar tap = entry.indexOf('tap') >= 0,\r\n\t\t\t\tdrag = entry.indexOf('drag') >= 0,\r\n\t\t\t\tfixed = entry.indexOf('fixed') >= 0,\r\n\t\t\t\tsnap = entry.indexOf('snap') >= 0,\r\n\t\t\t\thover = entry.indexOf('hover') >= 0;\r\n\t\r\n\t\t\t// Fix #472\r\n\t\t\tif ( drag && !parsed.connect ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: 'drag' behaviour must be used with 'connect': true.\");\r\n\t\t\t}\r\n\t\r\n\t\t\tparsed.events = {\r\n\t\t\t\ttap: tap || snap,\r\n\t\t\t\tdrag: drag,\r\n\t\t\t\tfixed: fixed,\r\n\t\t\t\tsnap: snap,\r\n\t\t\t\thover: hover\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tfunction testTooltips ( parsed, entry ) {\r\n\t\r\n\t\t\tvar i;\r\n\t\r\n\t\t\tif ( entry === false ) {\r\n\t\t\t\treturn;\r\n\t\t\t} else if ( entry === true ) {\r\n\t\r\n\t\t\t\tparsed.tooltips = [];\r\n\t\r\n\t\t\t\tfor ( i = 0; i < parsed.handles; i++ ) {\r\n\t\t\t\t\tparsed.tooltips.push(true);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparsed.tooltips = asArray(entry);\r\n\t\r\n\t\t\t\tif ( parsed.tooltips.length !== parsed.handles ) {\r\n\t\t\t\t\tthrow new Error(\"noUiSlider: must pass a formatter for all handles.\");\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tparsed.tooltips.forEach(function(formatter){\r\n\t\t\t\t\tif ( typeof formatter !== 'boolean' && (typeof formatter !== 'object' || typeof formatter.to !== 'function') ) {\r\n\t\t\t\t\t\tthrow new Error(\"noUiSlider: 'tooltips' must be passed a formatter or 'false'.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction testFormat ( parsed, entry ) {\r\n\t\r\n\t\t\tparsed.format = entry;\r\n\t\r\n\t\t\t// Any object with a to and from method is supported.\r\n\t\t\tif ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\r\n\t\t\tthrow new Error( \"noUiSlider: 'format' requires 'to' and 'from' methods.\");\r\n\t\t}\r\n\t\r\n\t\tfunction testCssPrefix ( parsed, entry ) {\r\n\t\r\n\t\t\tif ( entry !== undefined && typeof entry !== 'string' ) {\r\n\t\t\t\tthrow new Error( \"noUiSlider: 'cssPrefix' must be a string.\");\r\n\t\t\t}\r\n\t\r\n\t\t\tparsed.cssPrefix = entry;\r\n\t\t}\r\n\t\r\n\t\t// Test all developer settings and parse to assumption-safe values.\r\n\t\tfunction testOptions ( options ) {\r\n\t\r\n\t\t\t// To prove a fix for #537, freeze options here.\r\n\t\t\t// If the object is modified, an error will be thrown.\r\n\t\t\t// Object.freeze(options);\r\n\t\r\n\t\t\tvar parsed = {\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\tanimate: true,\r\n\t\t\t\tformat: defaultFormatter\r\n\t\t\t}, tests;\r\n\t\r\n\t\t\t// Tests are executed in the order they are presented here.\r\n\t\t\ttests = {\r\n\t\t\t\t'step': { r: false, t: testStep },\r\n\t\t\t\t'start': { r: true, t: testStart },\r\n\t\t\t\t'connect': { r: true, t: testConnect },\r\n\t\t\t\t'direction': { r: true, t: testDirection },\r\n\t\t\t\t'snap': { r: false, t: testSnap },\r\n\t\t\t\t'animate': { r: false, t: testAnimate },\r\n\t\t\t\t'range': { r: true, t: testRange },\r\n\t\t\t\t'orientation': { r: false, t: testOrientation },\r\n\t\t\t\t'margin': { r: false, t: testMargin },\r\n\t\t\t\t'limit': { r: false, t: testLimit },\r\n\t\t\t\t'behaviour': { r: true, t: testBehaviour },\r\n\t\t\t\t'format': { r: false, t: testFormat },\r\n\t\t\t\t'tooltips': { r: false, t: testTooltips },\r\n\t\t\t\t'cssPrefix': { r: false, t: testCssPrefix }\r\n\t\t\t};\r\n\t\r\n\t\t\tvar defaults = {\r\n\t\t\t\t'connect': false,\r\n\t\t\t\t'direction': 'ltr',\r\n\t\t\t\t'behaviour': 'tap',\r\n\t\t\t\t'orientation': 'horizontal'\r\n\t\t\t};\r\n\t\r\n\t\t\t// Run all options through a testing mechanism to ensure correct\r\n\t\t\t// input. It should be noted that options might get modified to\r\n\t\t\t// be handled properly. E.g. wrapping integers in arrays.\r\n\t\t\tObject.keys(tests).forEach(function( name ){\r\n\t\r\n\t\t\t\t// If the option isn't set, but it is required, throw an error.\r\n\t\t\t\tif ( options[name] === undefined && defaults[name] === undefined ) {\r\n\t\r\n\t\t\t\t\tif ( tests[name].r ) {\r\n\t\t\t\t\t\tthrow new Error(\"noUiSlider: '\" + name + \"' is required.\");\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttests[name].t( parsed, options[name] === undefined ? defaults[name] : options[name] );\r\n\t\t\t});\r\n\t\r\n\t\t\t// Forward pips options\r\n\t\t\tparsed.pips = options.pips;\r\n\t\r\n\t\t\t// Pre-define the styles.\r\n\t\t\tparsed.style = parsed.ort ? 'top' : 'left';\r\n\t\r\n\t\t\treturn parsed;\r\n\t\t}\r\n\t\r\n\t\r\n\tfunction closure ( target, options ){\r\n\t\r\n\t\t// All variables local to 'closure' are prefixed with 'scope_'\r\n\t\tvar scope_Target = target,\r\n\t\t\tscope_Locations = [-1, -1],\r\n\t\t\tscope_Base,\r\n\t\t\tscope_Handles,\r\n\t\t\tscope_Spectrum = options.spectrum,\r\n\t\t\tscope_Values = [],\r\n\t\t\tscope_Events = {},\r\n\t\t\tscope_Self;\r\n\t\r\n\t  var cssClasses = [\r\n\t    /*  0 */  'target'\r\n\t    /*  1 */ ,'base'\r\n\t    /*  2 */ ,'origin'\r\n\t    /*  3 */ ,'handle'\r\n\t    /*  4 */ ,'horizontal'\r\n\t    /*  5 */ ,'vertical'\r\n\t    /*  6 */ ,'background'\r\n\t    /*  7 */ ,'connect'\r\n\t    /*  8 */ ,'ltr'\r\n\t    /*  9 */ ,'rtl'\r\n\t    /* 10 */ ,'draggable'\r\n\t    /* 11 */ ,''\r\n\t    /* 12 */ ,'state-drag'\r\n\t    /* 13 */ ,''\r\n\t    /* 14 */ ,'state-tap'\r\n\t    /* 15 */ ,'active'\r\n\t    /* 16 */ ,''\r\n\t    /* 17 */ ,'stacking'\r\n\t    /* 18 */ ,'tooltip'\r\n\t    /* 19 */ ,''\r\n\t    /* 20 */ ,'pips'\r\n\t    /* 21 */ ,'marker'\r\n\t    /* 22 */ ,'value'\r\n\t  ].map(addCssPrefix(options.cssPrefix || defaultCssPrefix));\r\n\t\r\n\t\r\n\t\t// Delimit proposed values for handle positions.\r\n\t\tfunction getPositions ( a, b, delimit ) {\r\n\t\r\n\t\t\t// Add movement to current position.\r\n\t\t\tvar c = a + b[0], d = a + b[1];\r\n\t\r\n\t\t\t// Only alter the other position on drag,\r\n\t\t\t// not on standard sliding.\r\n\t\t\tif ( delimit ) {\r\n\t\t\t\tif ( c < 0 ) {\r\n\t\t\t\t\td += Math.abs(c);\r\n\t\t\t\t}\r\n\t\t\t\tif ( d > 100 ) {\r\n\t\t\t\t\tc -= ( d - 100 );\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Limit values to 0 and 100.\r\n\t\t\t\treturn [limit(c), limit(d)];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn [c,d];\r\n\t\t}\r\n\t\r\n\t\t// Provide a clean event with standardized offset values.\r\n\t\tfunction fixEvent ( e, pageOffset ) {\r\n\t\r\n\t\t\t// Prevent scrolling and panning on touch events, while\r\n\t\t\t// attempting to slide. The tap event also depends on this.\r\n\t\t\te.preventDefault();\r\n\t\r\n\t\t\t// Filter the event to register the type, which can be\r\n\t\t\t// touch, mouse or pointer. Offset changes need to be\r\n\t\t\t// made on an event specific basis.\r\n\t\t\tvar touch = e.type.indexOf('touch') === 0,\r\n\t\t\t\tmouse = e.type.indexOf('mouse') === 0,\r\n\t\t\t\tpointer = e.type.indexOf('pointer') === 0,\r\n\t\t\t\tx,y, event = e;\r\n\t\r\n\t\t\t// IE10 implemented pointer events with a prefix;\r\n\t\t\tif ( e.type.indexOf('MSPointer') === 0 ) {\r\n\t\t\t\tpointer = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( touch ) {\r\n\t\t\t\t// noUiSlider supports one movement at a time,\r\n\t\t\t\t// so we can select the first 'changedTouch'.\r\n\t\t\t\tx = e.changedTouches[0].pageX;\r\n\t\t\t\ty = e.changedTouches[0].pageY;\r\n\t\t\t}\r\n\t\r\n\t\t\tpageOffset = pageOffset || getPageOffset();\r\n\t\r\n\t\t\tif ( mouse || pointer ) {\r\n\t\t\t\tx = e.clientX + pageOffset.x;\r\n\t\t\t\ty = e.clientY + pageOffset.y;\r\n\t\t\t}\r\n\t\r\n\t\t\tevent.pageOffset = pageOffset;\r\n\t\t\tevent.points = [x, y];\r\n\t\t\tevent.cursor = mouse || pointer; // Fix #435\r\n\t\r\n\t\t\treturn event;\r\n\t\t}\r\n\t\r\n\t\t// Append a handle to the base.\r\n\t\tfunction addHandle ( direction, index ) {\r\n\t\r\n\t\t\tvar origin = document.createElement('div'),\r\n\t\t\t\thandle = document.createElement('div'),\r\n\t\t\t\tadditions = [ '-lower', '-upper' ];\r\n\t\r\n\t\t\tif ( direction ) {\r\n\t\t\t\tadditions.reverse();\r\n\t\t\t}\r\n\t\r\n\t\t\taddClass(handle, cssClasses[3]);\r\n\t\t\taddClass(handle, cssClasses[3] + additions[index]);\r\n\t\r\n\t\t\taddClass(origin, cssClasses[2]);\r\n\t\t\torigin.appendChild(handle);\r\n\t\r\n\t\t\treturn origin;\r\n\t\t}\r\n\t\r\n\t\t// Add the proper connection classes.\r\n\t\tfunction addConnection ( connect, target, handles ) {\r\n\t\r\n\t\t\t// Apply the required connection classes to the elements\r\n\t\t\t// that need them. Some classes are made up for several\r\n\t\t\t// segments listed in the class list, to allow easy\r\n\t\t\t// renaming and provide a minor compression benefit.\r\n\t\t\tswitch ( connect ) {\r\n\t\t\t\tcase 1:\taddClass(target, cssClasses[7]);\r\n\t\t\t\t\t\taddClass(handles[0], cssClasses[6]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3: addClass(handles[1], cssClasses[6]);\r\n\t\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 2: addClass(handles[0], cssClasses[7]);\r\n\t\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 0: addClass(target, cssClasses[6]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Add handles to the slider base.\r\n\t\tfunction addHandles ( nrHandles, direction, base ) {\r\n\t\r\n\t\t\tvar index, handles = [];\r\n\t\r\n\t\t\t// Append handles.\r\n\t\t\tfor ( index = 0; index < nrHandles; index += 1 ) {\r\n\t\r\n\t\t\t\t// Keep a list of all added handles.\r\n\t\t\t\thandles.push( base.appendChild(addHandle( direction, index )) );\r\n\t\t\t}\r\n\t\r\n\t\t\treturn handles;\r\n\t\t}\r\n\t\r\n\t\t// Initialize a single slider.\r\n\t\tfunction addSlider ( direction, orientation, target ) {\r\n\t\r\n\t\t\t// Apply classes and data to the target.\r\n\t\t\taddClass(target, cssClasses[0]);\r\n\t\t\taddClass(target, cssClasses[8 + direction]);\r\n\t\t\taddClass(target, cssClasses[4 + orientation]);\r\n\t\r\n\t\t\tvar div = document.createElement('div');\r\n\t\t\taddClass(div, cssClasses[1]);\r\n\t\t\ttarget.appendChild(div);\r\n\t\t\treturn div;\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction addTooltip ( handle, index ) {\r\n\t\r\n\t\t\tif ( !options.tooltips[index] ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar element = document.createElement('div');\r\n\t\t\telement.className = cssClasses[18];\r\n\t\t\treturn handle.firstChild.appendChild(element);\r\n\t\t}\r\n\t\r\n\t\t// The tooltips option is a shorthand for using the 'update' event.\r\n\t\tfunction tooltips ( ) {\r\n\t\r\n\t\t\tif ( options.dir ) {\r\n\t\t\t\toptions.tooltips.reverse();\r\n\t\t\t}\r\n\t\r\n\t\t\t// Tooltips are added with options.tooltips in original order.\r\n\t\t\tvar tips = scope_Handles.map(addTooltip);\r\n\t\r\n\t\t\tif ( options.dir ) {\r\n\t\t\t\ttips.reverse();\r\n\t\t\t\toptions.tooltips.reverse();\r\n\t\t\t}\r\n\t\r\n\t\t\tbindEvent('update', function(f, o, r) {\r\n\t\t\t\tif ( tips[o] ) {\r\n\t\t\t\t\ttips[o].innerHTML = options.tooltips[o] === true ? f[o] : options.tooltips[o].to(r[o]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction getGroup ( mode, values, stepped ) {\r\n\t\r\n\t\t\t// Use the range.\r\n\t\t\tif ( mode === 'range' || mode === 'steps' ) {\r\n\t\t\t\treturn scope_Spectrum.xVal;\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( mode === 'count' ) {\r\n\t\r\n\t\t\t\t// Divide 0 - 100 in 'count' parts.\r\n\t\t\t\tvar spread = ( 100 / (values-1) ), v, i = 0;\r\n\t\t\t\tvalues = [];\r\n\t\r\n\t\t\t\t// List these parts and have them handled as 'positions'.\r\n\t\t\t\twhile ((v=i++*spread) <= 100 ) {\r\n\t\t\t\t\tvalues.push(v);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmode = 'positions';\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( mode === 'positions' ) {\r\n\t\r\n\t\t\t\t// Map all percentages to on-range values.\r\n\t\t\t\treturn values.map(function( value ){\r\n\t\t\t\t\treturn scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( mode === 'values' ) {\r\n\t\r\n\t\t\t\t// If the value must be stepped, it needs to be converted to a percentage first.\r\n\t\t\t\tif ( stepped ) {\r\n\t\r\n\t\t\t\t\treturn values.map(function( value ){\r\n\t\r\n\t\t\t\t\t\t// Convert to percentage, apply step, return to value.\r\n\t\t\t\t\t\treturn scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Otherwise, we can simply use the values.\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction generateSpread ( density, mode, group ) {\r\n\t\r\n\t\t\tfunction safeIncrement(value, increment) {\r\n\t\t\t\t// Avoid floating point variance by dropping the smallest decimal places.\r\n\t\t\t\treturn (value + increment).toFixed(7) / 1;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar originalSpectrumDirection = scope_Spectrum.direction,\r\n\t\t\t\tindexes = {},\r\n\t\t\t\tfirstInRange = scope_Spectrum.xVal[0],\r\n\t\t\t\tlastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],\r\n\t\t\t\tignoreFirst = false,\r\n\t\t\t\tignoreLast = false,\r\n\t\t\t\tprevPct = 0;\r\n\t\r\n\t\t\t// This function loops the spectrum in an ltr linear fashion,\r\n\t\t\t// while the toStepping method is direction aware. Trick it into\r\n\t\t\t// believing it is ltr.\r\n\t\t\tscope_Spectrum.direction = 0;\r\n\t\r\n\t\t\t// Create a copy of the group, sort it and filter away all duplicates.\r\n\t\t\tgroup = unique(group.slice().sort(function(a, b){ return a - b; }));\r\n\t\r\n\t\t\t// Make sure the range starts with the first element.\r\n\t\t\tif ( group[0] !== firstInRange ) {\r\n\t\t\t\tgroup.unshift(firstInRange);\r\n\t\t\t\tignoreFirst = true;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Likewise for the last one.\r\n\t\t\tif ( group[group.length - 1] !== lastInRange ) {\r\n\t\t\t\tgroup.push(lastInRange);\r\n\t\t\t\tignoreLast = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tgroup.forEach(function ( current, index ) {\r\n\t\r\n\t\t\t\t// Get the current step and the lower + upper positions.\r\n\t\t\t\tvar step, i, q,\r\n\t\t\t\t\tlow = current,\r\n\t\t\t\t\thigh = group[index+1],\r\n\t\t\t\t\tnewPct, pctDifference, pctPos, type,\r\n\t\t\t\t\tsteps, realSteps, stepsize;\r\n\t\r\n\t\t\t\t// When using 'steps' mode, use the provided steps.\r\n\t\t\t\t// Otherwise, we'll step on to the next subrange.\r\n\t\t\t\tif ( mode === 'steps' ) {\r\n\t\t\t\t\tstep = scope_Spectrum.xNumSteps[ index ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Default to a 'full' step.\r\n\t\t\t\tif ( !step ) {\r\n\t\t\t\t\tstep = high-low;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Low can be 0, so test for false. If high is undefined,\r\n\t\t\t\t// we are at the last subrange. Index 0 is already handled.\r\n\t\t\t\tif ( low === false || high === undefined ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Find all steps in the subrange.\r\n\t\t\t\tfor ( i = low; i <= high; i = safeIncrement(i, step) ) {\r\n\t\r\n\t\t\t\t\t// Get the percentage value for the current step,\r\n\t\t\t\t\t// calculate the size for the subrange.\r\n\t\t\t\t\tnewPct = scope_Spectrum.toStepping( i );\r\n\t\t\t\t\tpctDifference = newPct - prevPct;\r\n\t\r\n\t\t\t\t\tsteps = pctDifference / density;\r\n\t\t\t\t\trealSteps = Math.round(steps);\r\n\t\r\n\t\t\t\t\t// This ratio represents the ammount of percentage-space a point indicates.\r\n\t\t\t\t\t// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.\r\n\t\t\t\t\t// Round the percentage offset to an even number, then divide by two\r\n\t\t\t\t\t// to spread the offset on both sides of the range.\r\n\t\t\t\t\tstepsize = pctDifference/realSteps;\r\n\t\r\n\t\t\t\t\t// Divide all points evenly, adding the correct number to this subrange.\r\n\t\t\t\t\t// Run up to <= so that 100% gets a point, event if ignoreLast is set.\r\n\t\t\t\t\tfor ( q = 1; q <= realSteps; q += 1 ) {\r\n\t\r\n\t\t\t\t\t\t// The ratio between the rounded value and the actual size might be ~1% off.\r\n\t\t\t\t\t\t// Correct the percentage offset by the number of points\r\n\t\t\t\t\t\t// per subrange. density = 1 will result in 100 points on the\r\n\t\t\t\t\t\t// full range, 2 for 50, 4 for 25, etc.\r\n\t\t\t\t\t\tpctPos = prevPct + ( q * stepsize );\r\n\t\t\t\t\t\tindexes[pctPos.toFixed(5)] = ['x', 0];\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Determine the point type.\r\n\t\t\t\t\ttype = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );\r\n\t\r\n\t\t\t\t\t// Enforce the 'ignoreFirst' option by overwriting the type for 0.\r\n\t\t\t\t\tif ( !index && ignoreFirst ) {\r\n\t\t\t\t\t\ttype = 0;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( !(i === high && ignoreLast)) {\r\n\t\t\t\t\t\t// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\r\n\t\t\t\t\t\tindexes[newPct.toFixed(5)] = [i, type];\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Update the percentage count.\r\n\t\t\t\t\tprevPct = newPct;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t// Reset the spectrum.\r\n\t\t\tscope_Spectrum.direction = originalSpectrumDirection;\r\n\t\r\n\t\t\treturn indexes;\r\n\t\t}\r\n\t\r\n\t\tfunction addMarking ( spread, filterFunc, formatter ) {\r\n\t\r\n\t\t\tvar style = ['horizontal', 'vertical'][options.ort],\r\n\t\t\t\telement = document.createElement('div'),\r\n\t\t\t\tout = '';\r\n\t\r\n\t\t\taddClass(element, cssClasses[20]);\r\n\t\t\taddClass(element, cssClasses[20] + '-' + style);\r\n\t\r\n\t\t\tfunction getSize( type ){\r\n\t\t\t\treturn [ '-normal', '-large', '-sub' ][type];\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getTags( offset, source, values ) {\r\n\t\t\t\treturn 'class=\"' + source + ' ' +\r\n\t\t\t\t\tsource + '-' + style + ' ' +\r\n\t\t\t\t\tsource + getSize(values[1]) +\r\n\t\t\t\t\t'\" style=\"' + options.style + ': ' + offset + '%\"';\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction addSpread ( offset, values ){\r\n\t\r\n\t\t\t\tif ( scope_Spectrum.direction ) {\r\n\t\t\t\t\toffset = 100 - offset;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Apply the filter function, if it is set.\r\n\t\t\t\tvalues[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];\r\n\t\r\n\t\t\t\t// Add a marker for every point\r\n\t\t\t\tout += '<div ' + getTags(offset, cssClasses[21], values) + '></div>';\r\n\t\r\n\t\t\t\t// Values are only appended for points marked '1' or '2'.\r\n\t\t\t\tif ( values[1] ) {\r\n\t\t\t\t\tout += '<div '+getTags(offset, cssClasses[22], values)+'>' + formatter.to(values[0]) + '</div>';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Append all points.\r\n\t\t\tObject.keys(spread).forEach(function(a){\r\n\t\t\t\taddSpread(a, spread[a]);\r\n\t\t\t});\r\n\t\t\telement.innerHTML = out;\r\n\t\r\n\t\t\treturn element;\r\n\t\t}\r\n\t\r\n\t\tfunction pips ( grid ) {\r\n\t\r\n\t\tvar mode = grid.mode,\r\n\t\t\tdensity = grid.density || 1,\r\n\t\t\tfilter = grid.filter || false,\r\n\t\t\tvalues = grid.values || false,\r\n\t\t\tstepped = grid.stepped || false,\r\n\t\t\tgroup = getGroup( mode, values, stepped ),\r\n\t\t\tspread = generateSpread( density, mode, group ),\r\n\t\t\tformat = grid.format || {\r\n\t\t\t\tto: Math.round\r\n\t\t\t};\r\n\t\r\n\t\t\treturn scope_Target.appendChild(addMarking(\r\n\t\t\t\tspread,\r\n\t\t\t\tfilter,\r\n\t\t\t\tformat\r\n\t\t\t));\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Shorthand for base dimensions.\r\n\t\tfunction baseSize ( ) {\r\n\t\t\tvar rect = scope_Base.getBoundingClientRect(), alt = 'offset' + ['Width', 'Height'][options.ort];\r\n\t\t\treturn options.ort === 0 ? (rect.width||scope_Base[alt]) : (rect.height||scope_Base[alt]);\r\n\t\t}\r\n\t\r\n\t\t// External event handling\r\n\t\tfunction fireEvent ( event, handleNumber, tap ) {\r\n\t\r\n\t\t\tif ( handleNumber !== undefined && options.handles !== 1 ) {\r\n\t\t\t\thandleNumber = Math.abs(handleNumber - options.dir);\r\n\t\t\t}\r\n\t\r\n\t\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\r\n\t\r\n\t\t\t\tvar eventType = targetEvent.split('.')[0];\r\n\t\r\n\t\t\t\tif ( event === eventType ) {\r\n\t\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\r\n\t\r\n\t\t\t\t\t\tcallback.call(\r\n\t\t\t\t\t\t\t// Use the slider public API as the scope ('this')\r\n\t\t\t\t\t\t\tscope_Self,\r\n\t\t\t\t\t\t\t// Return values as array, so arg_1[arg_2] is always valid.\r\n\t\t\t\t\t\t\tasArray(valueGet()),\r\n\t\t\t\t\t\t\t// Handle index, 0 or 1\r\n\t\t\t\t\t\t\thandleNumber,\r\n\t\t\t\t\t\t\t// Unformatted slider values\r\n\t\t\t\t\t\t\tasArray(inSliderOrder(Array.prototype.slice.call(scope_Values))),\r\n\t\t\t\t\t\t\t// Event is fired by tap, true or false\r\n\t\t\t\t\t\t\ttap || false,\r\n\t\t\t\t\t\t\t// Left offset of the handle, in relation to the slider\r\n\t\t\t\t\t\t\tscope_Locations\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\t// Returns the input array, respecting the slider direction configuration.\r\n\t\tfunction inSliderOrder ( values ) {\r\n\t\r\n\t\t\t// If only one handle is used, return a single value.\r\n\t\t\tif ( values.length === 1 ){\r\n\t\t\t\treturn values[0];\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( options.dir ) {\r\n\t\t\t\treturn values.reverse();\r\n\t\t\t}\r\n\t\r\n\t\t\treturn values;\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handler for attaching events trough a proxy.\r\n\t\tfunction attach ( events, element, callback, data ) {\r\n\t\r\n\t\t\t// This function can be used to 'filter' events to the slider.\r\n\t\t\t// element is a node, not a nodeList\r\n\t\r\n\t\t\tvar method = function ( e ){\r\n\t\r\n\t\t\t\tif ( scope_Target.hasAttribute('disabled') ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Stop if an active 'tap' transition is taking place.\r\n\t\t\t\tif ( hasClass(scope_Target, cssClasses[14]) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\te = fixEvent(e, data.pageOffset);\r\n\t\r\n\t\t\t\t// Ignore right or middle clicks on start #454\r\n\t\t\t\tif ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ignore right or middle clicks on start #454\r\n\t\t\t\tif ( data.hover && e.buttons ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\te.calcPoint = e.points[ options.ort ];\r\n\t\r\n\t\t\t\t// Call the event handler with the event [ and additional data ].\r\n\t\t\t\tcallback ( e, data );\r\n\t\r\n\t\t\t}, methods = [];\r\n\t\r\n\t\t\t// Bind a closure on the target for every event type.\r\n\t\t\tevents.split(' ').forEach(function( eventName ){\r\n\t\t\t\telement.addEventListener(eventName, method, false);\r\n\t\t\t\tmethods.push([eventName, method]);\r\n\t\t\t});\r\n\t\r\n\t\t\treturn methods;\r\n\t\t}\r\n\t\r\n\t\t// Handle movement on document for handle and range drag.\r\n\t\tfunction move ( event, data ) {\r\n\t\r\n\t\t\t// Fix #498\r\n\t\t\t// Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\r\n\t\t\t// https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\r\n\t\t\t// IE9 has .buttons and .which zero on mousemove.\r\n\t\t\t// Firefox breaks the spec MDN defines.\r\n\t\t\tif ( navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0 ) {\r\n\t\t\t\treturn end(event, data);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar handles = data.handles || scope_Handles, positions, state = false,\r\n\t\t\t\tproposal = ((event.calcPoint - data.start) * 100) / data.baseSize,\r\n\t\t\t\thandleNumber = handles[0] === scope_Handles[0] ? 0 : 1, i;\r\n\t\r\n\t\t\t// Calculate relative positions for the handles.\r\n\t\t\tpositions = getPositions( proposal, data.positions, handles.length > 1);\r\n\t\r\n\t\t\tstate = setHandle ( handles[0], positions[handleNumber], handles.length === 1 );\r\n\t\r\n\t\t\tif ( handles.length > 1 ) {\r\n\t\r\n\t\t\t\tstate = setHandle ( handles[1], positions[handleNumber?0:1], false ) || state;\r\n\t\r\n\t\t\t\tif ( state ) {\r\n\t\t\t\t\t// fire for both handles\r\n\t\t\t\t\tfor ( i = 0; i < data.handles.length; i++ ) {\r\n\t\t\t\t\t\tfireEvent('slide', i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if ( state ) {\r\n\t\t\t\t// Fire for a single handle\r\n\t\t\t\tfireEvent('slide', handleNumber);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Unbind move events on document, call callbacks.\r\n\t\tfunction end ( event, data ) {\r\n\t\r\n\t\t\t// The handle is no longer active, so remove the class.\r\n\t\t\tvar active = scope_Base.querySelector( '.' + cssClasses[15] ),\r\n\t\t\t\thandleNumber = data.handles[0] === scope_Handles[0] ? 0 : 1;\r\n\t\r\n\t\t\tif ( active !== null ) {\r\n\t\t\t\tremoveClass(active, cssClasses[15]);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Remove cursor styles and text-selection events bound to the body.\r\n\t\t\tif ( event.cursor ) {\r\n\t\t\t\tdocument.body.style.cursor = '';\r\n\t\t\t\tdocument.body.removeEventListener('selectstart', document.body.noUiListener);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar d = document.documentElement;\r\n\t\r\n\t\t\t// Unbind the move and end events, which are added on 'start'.\r\n\t\t\td.noUiListeners.forEach(function( c ) {\r\n\t\t\t\td.removeEventListener(c[0], c[1]);\r\n\t\t\t});\r\n\t\r\n\t\t\t// Remove dragging class.\r\n\t\t\tremoveClass(scope_Target, cssClasses[12]);\r\n\t\r\n\t\t\t// Fire the change and set events.\r\n\t\t\tfireEvent('set', handleNumber);\r\n\t\t\tfireEvent('change', handleNumber);\r\n\t\r\n\t\t\t// If this is a standard handle movement, fire the end event.\r\n\t\t\tif ( data.handleNumber !== undefined ) {\r\n\t\t\t\tfireEvent('end', data.handleNumber);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Fire 'end' when a mouse or pen leaves the document.\r\n\t\tfunction documentLeave ( event, data ) {\r\n\t\t\tif ( event.type === \"mouseout\" && event.target.nodeName === \"HTML\" && event.relatedTarget === null ){\r\n\t\t\t\tend ( event, data );\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Bind move events on document.\r\n\t\tfunction start ( event, data ) {\r\n\t\r\n\t\t\tvar d = document.documentElement;\r\n\t\r\n\t\t\t// Mark the handle as 'active' so it can be styled.\r\n\t\t\tif ( data.handles.length === 1 ) {\r\n\t\t\t\taddClass(data.handles[0].children[0], cssClasses[15]);\r\n\t\r\n\t\t\t\t// Support 'disabled' handles\r\n\t\t\t\tif ( data.handles[0].hasAttribute('disabled') ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Fix #551, where a handle gets selected instead of dragged.\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\t// A drag should never propagate up to the 'tap' event.\r\n\t\t\tevent.stopPropagation();\r\n\t\r\n\t\t\t// Attach the move and end events.\r\n\t\t\tvar moveEvent = attach(actions.move, d, move, {\r\n\t\t\t\tstart: event.calcPoint,\r\n\t\t\t\tbaseSize: baseSize(),\r\n\t\t\t\tpageOffset: event.pageOffset,\r\n\t\t\t\thandles: data.handles,\r\n\t\t\t\thandleNumber: data.handleNumber,\r\n\t\t\t\tbuttonsProperty: event.buttons,\r\n\t\t\t\tpositions: [\r\n\t\t\t\t\tscope_Locations[0],\r\n\t\t\t\t\tscope_Locations[scope_Handles.length - 1]\r\n\t\t\t\t]\r\n\t\t\t}), endEvent = attach(actions.end, d, end, {\r\n\t\t\t\thandles: data.handles,\r\n\t\t\t\thandleNumber: data.handleNumber\r\n\t\t\t});\r\n\t\r\n\t\t\tvar outEvent = attach(\"mouseout\", d, documentLeave, {\r\n\t\t\t\thandles: data.handles,\r\n\t\t\t\thandleNumber: data.handleNumber\r\n\t\t\t});\r\n\t\r\n\t\t\td.noUiListeners = moveEvent.concat(endEvent, outEvent);\r\n\t\r\n\t\t\t// Text selection isn't an issue on touch devices,\r\n\t\t\t// so adding cursor styles can be skipped.\r\n\t\t\tif ( event.cursor ) {\r\n\t\r\n\t\t\t\t// Prevent the 'I' cursor and extend the range-drag cursor.\r\n\t\t\t\tdocument.body.style.cursor = getComputedStyle(event.target).cursor;\r\n\t\r\n\t\t\t\t// Mark the target with a dragging state.\r\n\t\t\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\t\t\taddClass(scope_Target, cssClasses[12]);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar f = function(){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdocument.body.noUiListener = f;\r\n\t\r\n\t\t\t\t// Prevent text selection when dragging the handles.\r\n\t\t\t\tdocument.body.addEventListener('selectstart', f, false);\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( data.handleNumber !== undefined ) {\r\n\t\t\t\tfireEvent('start', data.handleNumber);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Move closest handle to tapped location.\r\n\t\tfunction tap ( event ) {\r\n\t\r\n\t\t\tvar location = event.calcPoint, total = 0, handleNumber, to;\r\n\t\r\n\t\t\t// The tap event shouldn't propagate up and cause 'edge' to run.\r\n\t\t\tevent.stopPropagation();\r\n\t\r\n\t\t\t// Add up the handle offsets.\r\n\t\t\tscope_Handles.forEach(function(a){\r\n\t\t\t\ttotal += offset(a)[ options.style ];\r\n\t\t\t});\r\n\t\r\n\t\t\t// Find the handle closest to the tapped position.\r\n\t\t\thandleNumber = ( location < total/2 || scope_Handles.length === 1 ) ? 0 : 1;\r\n\t\t\t\r\n\t\t\t// Check if handler is not disablet if yes set number to the next handler\r\n\t\t\tif (scope_Handles[handleNumber].hasAttribute('disabled')) {\r\n\t\t\t\thandleNumber = handleNumber ? 0 : 1;\r\n\t\t\t}\r\n\t\r\n\t\t\tlocation -= offset(scope_Base)[ options.style ];\r\n\t\r\n\t\t\t// Calculate the new position.\r\n\t\t\tto = ( location * 100 ) / baseSize();\r\n\t\r\n\t\t\tif ( !options.events.snap ) {\r\n\t\t\t\t// Flag the slider as it is now in a transitional state.\r\n\t\t\t\t// Transition takes 300 ms, so re-enable the slider afterwards.\r\n\t\t\t\taddClassFor( scope_Target, cssClasses[14], 300 );\r\n\t\t\t}\r\n\t\r\n\t\t\t// Support 'disabled' handles\r\n\t\t\tif ( scope_Handles[handleNumber].hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Find the closest handle and calculate the tapped point.\r\n\t\t\t// The set handle to the new position.\r\n\t\t\tsetHandle( scope_Handles[handleNumber], to );\r\n\t\r\n\t\t\tfireEvent('slide', handleNumber, true);\r\n\t\t\tfireEvent('set', handleNumber, true);\r\n\t\t\tfireEvent('change', handleNumber, true);\r\n\t\r\n\t\t\tif ( options.events.snap ) {\r\n\t\t\t\tstart(event, { handles: [scope_Handles[handleNumber]] });\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Fires a 'hover' event for a hovered mouse/pen position.\r\n\t\tfunction hover ( event ) {\r\n\t\r\n\t\t\tvar location = event.calcPoint - offset(scope_Base)[ options.style ],\r\n\t\t\t\tto = scope_Spectrum.getStep(( location * 100 ) / baseSize()),\r\n\t\t\t\tvalue = scope_Spectrum.fromStepping( to );\r\n\t\r\n\t\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\r\n\t\t\t\tif ( 'hover' === targetEvent.split('.')[0] ) {\r\n\t\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\r\n\t\t\t\t\t\tcallback.call( scope_Self, value );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\t// Attach events to several slider parts.\r\n\t\tfunction events ( behaviour ) {\r\n\t\r\n\t\t\tvar i, drag;\r\n\t\r\n\t\t\t// Attach the standard drag event to the handles.\r\n\t\t\tif ( !behaviour.fixed ) {\r\n\t\r\n\t\t\t\tfor ( i = 0; i < scope_Handles.length; i += 1 ) {\r\n\t\r\n\t\t\t\t\t// These events are only bound to the visual handle\r\n\t\t\t\t\t// element, not the 'real' origin element.\r\n\t\t\t\t\tattach ( actions.start, scope_Handles[i].children[0], start, {\r\n\t\t\t\t\t\thandles: [ scope_Handles[i] ],\r\n\t\t\t\t\t\thandleNumber: i\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Attach the tap event to the slider base.\r\n\t\t\tif ( behaviour.tap ) {\r\n\t\r\n\t\t\t\tattach ( actions.start, scope_Base, tap, {\r\n\t\t\t\t\thandles: scope_Handles\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\r\n\t\t\t// Fire hover events\r\n\t\t\tif ( behaviour.hover ) {\r\n\t\t\t\tattach ( actions.move, scope_Base, hover, { hover: true } );\r\n\t\t\t\tfor ( i = 0; i < scope_Handles.length; i += 1 ) {\r\n\t\t\t\t\t['mousemove MSPointerMove pointermove'].forEach(function( eventName ){\r\n\t\t\t\t\t\tscope_Handles[i].children[0].addEventListener(eventName, stopPropagation, false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Make the range draggable.\r\n\t\t\tif ( behaviour.drag ){\r\n\t\r\n\t\t\t\tdrag = [scope_Base.querySelector( '.' + cssClasses[7] )];\r\n\t\t\t\taddClass(drag[0], cssClasses[10]);\r\n\t\r\n\t\t\t\t// When the range is fixed, the entire range can\r\n\t\t\t\t// be dragged by the handles. The handle in the first\r\n\t\t\t\t// origin will propagate the start event upward,\r\n\t\t\t\t// but it needs to be bound manually on the other.\r\n\t\t\t\tif ( behaviour.fixed ) {\r\n\t\t\t\t\tdrag.push(scope_Handles[(drag[0] === scope_Handles[0] ? 1 : 0)].children[0]);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdrag.forEach(function( element ) {\r\n\t\t\t\t\tattach ( actions.start, element, start, {\r\n\t\t\t\t\t\thandles: scope_Handles\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Test suggested values and apply margin, step.\r\n\t\tfunction setHandle ( handle, to, noLimitOption ) {\r\n\t\r\n\t\t\tvar trigger = handle !== scope_Handles[0] ? 1 : 0,\r\n\t\t\t\tlowerMargin = scope_Locations[0] + options.margin,\r\n\t\t\t\tupperMargin = scope_Locations[1] - options.margin,\r\n\t\t\t\tlowerLimit = scope_Locations[0] + options.limit,\r\n\t\t\t\tupperLimit = scope_Locations[1] - options.limit;\r\n\t\r\n\t\t\t// For sliders with multiple handles,\r\n\t\t\t// limit movement to the other handle.\r\n\t\t\t// Apply the margin option by adding it to the handle positions.\r\n\t\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\t\tto = trigger ? Math.max( to, lowerMargin ) : Math.min( to, upperMargin );\r\n\t\t\t}\r\n\t\r\n\t\t\t// The limit option has the opposite effect, limiting handles to a\r\n\t\t\t// maximum distance from another. Limit must be > 0, as otherwise\r\n\t\t\t// handles would be unmoveable. 'noLimitOption' is set to 'false'\r\n\t\t\t// for the .val() method, except for pass 4/4.\r\n\t\t\tif ( noLimitOption !== false && options.limit && scope_Handles.length > 1 ) {\r\n\t\t\t\tto = trigger ? Math.min ( to, lowerLimit ) : Math.max( to, upperLimit );\r\n\t\t\t}\r\n\t\r\n\t\t\t// Handle the step option.\r\n\t\t\tto = scope_Spectrum.getStep( to );\r\n\t\r\n\t\t\t// Limit to 0/100 for .val input, trim anything beyond 7 digits, as\r\n\t\t\t// JavaScript has some issues in its floating point implementation.\r\n\t\t\tto = limit(parseFloat(to.toFixed(7)));\r\n\t\r\n\t\t\t// Return false if handle can't move\r\n\t\t\tif ( to === scope_Locations[trigger] ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Set the handle to the new position.\r\n\t\t\t// Use requestAnimationFrame for efficient painting.\r\n\t\t\t// No significant effect in Chrome, Edge sees dramatic\r\n\t\t\t// performace improvements.\r\n\t\t\tif ( window.requestAnimationFrame ) {\r\n\t\t\t\twindow.requestAnimationFrame(function(){\r\n\t\t\t\t\thandle.style[options.style] = to + '%';\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\thandle.style[options.style] = to + '%';\r\n\t\t\t}\r\n\t\r\n\t\t\t// Force proper handle stacking\r\n\t\t\tif ( !handle.previousSibling ) {\r\n\t\t\t\tremoveClass(handle, cssClasses[17]);\r\n\t\t\t\tif ( to > 50 ) {\r\n\t\t\t\t\taddClass(handle, cssClasses[17]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Update locations.\r\n\t\t\tscope_Locations[trigger] = to;\r\n\t\r\n\t\t\t// Convert the value to the slider stepping/range.\r\n\t\t\tscope_Values[trigger] = scope_Spectrum.fromStepping( to );\r\n\t\r\n\t\t\tfireEvent('update', trigger);\r\n\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\r\n\t\t// Loop values from value method and apply them.\r\n\t\tfunction setValues ( count, values ) {\r\n\t\r\n\t\t\tvar i, trigger, to;\r\n\t\r\n\t\t\t// With the limit option, we'll need another limiting pass.\r\n\t\t\tif ( options.limit ) {\r\n\t\t\t\tcount += 1;\r\n\t\t\t}\r\n\t\r\n\t\t\t// If there are multiple handles to be set run the setting\r\n\t\t\t// mechanism twice for the first handle, to make sure it\r\n\t\t\t// can be bounced of the second one properly.\r\n\t\t\tfor ( i = 0; i < count; i += 1 ) {\r\n\t\r\n\t\t\t\ttrigger = i%2;\r\n\t\r\n\t\t\t\t// Get the current argument from the array.\r\n\t\t\t\tto = values[trigger];\r\n\t\r\n\t\t\t\t// Setting with null indicates an 'ignore'.\r\n\t\t\t\t// Inputting 'false' is invalid.\r\n\t\t\t\tif ( to !== null && to !== false ) {\r\n\t\r\n\t\t\t\t\t// If a formatted number was passed, attemt to decode it.\r\n\t\t\t\t\tif ( typeof to === 'number' ) {\r\n\t\t\t\t\t\tto = String(to);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tto = options.format.from( to );\r\n\t\r\n\t\t\t\t\t// Request an update for all links if the value was invalid.\r\n\t\t\t\t\t// Do so too if setting the handle fails.\r\n\t\t\t\t\tif ( to === false || isNaN(to) || setHandle( scope_Handles[trigger], scope_Spectrum.toStepping( to ), i === (3 - options.dir) ) === false ) {\r\n\t\t\t\t\t\tfireEvent('update', trigger);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Set the slider value.\r\n\t\tfunction valueSet ( input ) {\r\n\t\r\n\t\t\tvar count, values = asArray( input ), i;\r\n\t\r\n\t\t\t// The RTL settings is implemented by reversing the front-end,\r\n\t\t\t// internal mechanisms are the same.\r\n\t\t\tif ( options.dir && options.handles > 1 ) {\r\n\t\t\t\tvalues.reverse();\r\n\t\t\t}\r\n\t\r\n\t\t\t// Animation is optional.\r\n\t\t\t// Make sure the initial values where set before using animated placement.\r\n\t\t\tif ( options.animate && scope_Locations[0] !== -1 ) {\r\n\t\t\t\taddClassFor( scope_Target, cssClasses[14], 300 );\r\n\t\t\t}\r\n\t\r\n\t\t\t// Determine how often to set the handles.\r\n\t\t\tcount = scope_Handles.length > 1 ? 3 : 1;\r\n\t\r\n\t\t\tif ( values.length === 1 ) {\r\n\t\t\t\tcount = 1;\r\n\t\t\t}\r\n\t\r\n\t\t\tsetValues ( count, values );\r\n\t\r\n\t\t\t// Fire the 'set' event for both handles.\r\n\t\t\tfor ( i = 0; i < scope_Handles.length; i++ ) {\r\n\t\r\n\t\t\t\t// Fire the event only for handles that received a new value, as per #579\r\n\t\t\t\tif ( values[i] !== null ) {\r\n\t\t\t\t\tfireEvent('set', i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Get the slider value.\r\n\t\tfunction valueGet ( ) {\r\n\t\r\n\t\t\tvar i, retour = [];\r\n\t\r\n\t\t\t// Get the value from all handles.\r\n\t\t\tfor ( i = 0; i < options.handles; i += 1 ){\r\n\t\t\t\tretour[i] = options.format.to( scope_Values[i] );\r\n\t\t\t}\r\n\t\r\n\t\t\treturn inSliderOrder( retour );\r\n\t\t}\r\n\t\r\n\t\t// Removes classes from the root and empties it.\r\n\t\tfunction destroy ( ) {\r\n\t\r\n\t\t\tcssClasses.forEach(function(cls){\r\n\t\t\t\tif ( !cls ) { return; } // Ignore empty classes\r\n\t\t\t\tremoveClass(scope_Target, cls);\r\n\t\t\t});\r\n\t\r\n\t\t\twhile (scope_Target.firstChild) {\r\n\t\t\t\tscope_Target.removeChild(scope_Target.firstChild);\r\n\t\t\t}\r\n\t\r\n\t\t\tdelete scope_Target.noUiSlider;\r\n\t\t}\r\n\t\r\n\t\t// Get the current step size for the slider.\r\n\t\tfunction getCurrentStep ( ) {\r\n\t\r\n\t\t\t// Check all locations, map them to their stepping point.\r\n\t\t\t// Get the step point, then find it in the input list.\r\n\t\t\tvar retour = scope_Locations.map(function( location, index ){\r\n\t\r\n\t\t\t\tvar step = scope_Spectrum.getApplicableStep( location ),\r\n\t\r\n\t\t\t\t\t// As per #391, the comparison for the decrement step can have some rounding issues.\r\n\t\t\t\t\t// Round the value to the precision used in the step.\r\n\t\t\t\t\tstepDecimals = countDecimals(String(step[2])),\r\n\t\r\n\t\t\t\t\t// Get the current numeric value\r\n\t\t\t\t\tvalue = scope_Values[index],\r\n\t\r\n\t\t\t\t\t// To move the slider 'one step up', the current step value needs to be added.\r\n\t\t\t\t\t// Use null if we are at the maximum slider value.\r\n\t\t\t\t\tincrement = location === 100 ? null : step[2],\r\n\t\r\n\t\t\t\t\t// Going 'one step down' might put the slider in a different sub-range, so we\r\n\t\t\t\t\t// need to switch between the current or the previous step.\r\n\t\t\t\t\tprev = Number((value - step[2]).toFixed(stepDecimals)),\r\n\t\r\n\t\t\t\t\t// If the value fits the step, return the current step value. Otherwise, use the\r\n\t\t\t\t\t// previous step. Return null if the slider is at its minimum value.\r\n\t\t\t\t\tdecrement = location === 0 ? null : (prev >= step[1]) ? step[2] : (step[0] || false);\r\n\t\r\n\t\t\t\treturn [decrement, increment];\r\n\t\t\t});\r\n\t\r\n\t\t\t// Return values in the proper order.\r\n\t\t\treturn inSliderOrder( retour );\r\n\t\t}\r\n\t\r\n\t\t// Attach an event to this slider, possibly including a namespace\r\n\t\tfunction bindEvent ( namespacedEvent, callback ) {\r\n\t\t\tscope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\r\n\t\t\tscope_Events[namespacedEvent].push(callback);\r\n\t\r\n\t\t\t// If the event bound is 'update,' fire it immediately for all handles.\r\n\t\t\tif ( namespacedEvent.split('.')[0] === 'update' ) {\r\n\t\t\t\tscope_Handles.forEach(function(a, index){\r\n\t\t\t\t\tfireEvent('update', index);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Undo attachment of event\r\n\t\tfunction removeEvent ( namespacedEvent ) {\r\n\t\r\n\t\t\tvar event = namespacedEvent.split('.')[0],\r\n\t\t\t\tnamespace = namespacedEvent.substring(event.length);\r\n\t\r\n\t\t\tObject.keys(scope_Events).forEach(function( bind ){\r\n\t\r\n\t\t\t\tvar tEvent = bind.split('.')[0],\r\n\t\t\t\t\ttNamespace = bind.substring(tEvent.length);\r\n\t\r\n\t\t\t\tif ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {\r\n\t\t\t\t\tdelete scope_Events[bind];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\t// Updateable: margin, limit, step, range, animate, snap\r\n\t\tfunction updateOptions ( optionsToUpdate ) {\r\n\t\r\n\t\t\tvar v = valueGet(), i, newOptions = testOptions({\r\n\t\t\t\tstart: [0, 0],\r\n\t\t\t\tmargin: optionsToUpdate.margin,\r\n\t\t\t\tlimit: optionsToUpdate.limit,\r\n\t\t\t\tstep: optionsToUpdate.step,\r\n\t\t\t\trange: optionsToUpdate.range,\r\n\t\t\t\tanimate: optionsToUpdate.animate,\r\n\t\t\t\tsnap: optionsToUpdate.snap === undefined ? options.snap : optionsToUpdate.snap\r\n\t\t\t});\r\n\t\r\n\t\t\t['margin', 'limit', 'step', 'range', 'animate'].forEach(function(name){\r\n\t\t\t\tif ( optionsToUpdate[name] !== undefined ) {\r\n\t\t\t\t\toptions[name] = optionsToUpdate[name];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t// Save current spectrum direction as testOptions in testRange call\r\n\t\t\t// doesn't rely on current direction\r\n\t\t\tnewOptions.spectrum.direction = scope_Spectrum.direction;\r\n\t\t\tscope_Spectrum = newOptions.spectrum;\r\n\t\r\n\t\t\t// Invalidate the current positioning so valueSet forces an update.\r\n\t\t\tscope_Locations = [-1, -1];\r\n\t\t\tvalueSet(v);\r\n\t\r\n\t\t\tfor ( i = 0; i < scope_Handles.length; i++ ) {\r\n\t\t\t\tfireEvent('update', i);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Throw an error if the slider was already initialized.\r\n\t\tif ( scope_Target.noUiSlider ) {\r\n\t\t\tthrow new Error('Slider was already initialized.');\r\n\t\t}\r\n\t\r\n\t\t// Create the base element, initialise HTML and set classes.\r\n\t\t// Add handles and links.\r\n\t\tscope_Base = addSlider( options.dir, options.ort, scope_Target );\r\n\t\tscope_Handles = addHandles( options.handles, options.dir, scope_Base );\r\n\t\r\n\t\t// Set the connect classes.\r\n\t\taddConnection ( options.connect, scope_Target, scope_Handles );\r\n\t\r\n\t\tif ( options.pips ) {\r\n\t\t\tpips(options.pips);\r\n\t\t}\r\n\t\r\n\t\tif ( options.tooltips ) {\r\n\t\t\ttooltips();\r\n\t\t}\r\n\t\r\n\t\tscope_Self = {\r\n\t\t\tdestroy: destroy,\r\n\t\t\tsteps: getCurrentStep,\r\n\t\t\ton: bindEvent,\r\n\t\t\toff: removeEvent,\r\n\t\t\tget: valueGet,\r\n\t\t\tset: valueSet,\r\n\t\t\tupdateOptions: updateOptions,\r\n\t\t\toptions: options, // Issue #600\r\n\t\t\ttarget: scope_Target, // Issue #597\r\n\t\t\tpips: pips // Issue #594\r\n\t\t};\r\n\t\r\n\t\t// Attach user events.\r\n\t\tevents( options.events );\r\n\t\r\n\t\treturn scope_Self;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t\t// Run the standard initializer\r\n\t\tfunction initialize ( target, originalOptions ) {\r\n\t\r\n\t\t\tif ( !target.nodeName ) {\r\n\t\t\t\tthrow new Error('noUiSlider.create requires a single element.');\r\n\t\t\t}\r\n\t\r\n\t\t\t// Test the options and create the slider environment;\r\n\t\t\tvar options = testOptions( originalOptions, target ),\r\n\t\t\t\tslider = closure( target, options );\r\n\t\r\n\t\t\t// Use the public value method to set the start values.\r\n\t\t\tslider.set(options.start);\r\n\t\r\n\t\t\ttarget.noUiSlider = slider;\r\n\t\t\treturn slider;\r\n\t\t}\r\n\t\r\n\t\t// Use an object instead of a function for future expansibility;\r\n\t\treturn {\r\n\t\t\tcreate: initialize\r\n\t\t};\r\n\t\r\n\t}));\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** common-page.js\n **/","/*global TweenMax*/\nimport $ from 'jquery';\nimport 'svgxuse';\nimport 'gsap';\nimport 'slick-carousel';\nimport 'magnific-popup';\nimport initTooltipster from './lib/tooltipster';\nimport ScrollMagic from 'scrollmagic';\n\nimport './modules/menu';\nimport './modules/calculator';\n//import './modules/footer-map';\n\nimport initSelectPlugin from './plugins/select';\nimport navColorChange from './plugins/nav-color-change';\nimport Gallery from './classes/gallery';\n\ninitSelectPlugin($);\ninitTooltipster($, window, window.document);\nnavColorChange();\n$('.select').select();\n$('.js-tooltip').tooltipster();\n\n(() => {\n\n    const fancy = $('.js-fancy');\n    if (!fancy.length) return;\n\n    fancy.magnificPopup({\n        type: 'image',\n        closeOnContentClick: true,\n        closeBtnInside: false,\n        fixedContentPos: true,\n        mainClass: 'mfp-no-margins mfp-with-zoom',\n        image: {\n            verticalFit: true\n        },\n        zoom: {\n            enabled: true,\n            duration: 300\n        }\n    });\n\n})();\n\n(() => {\n\n    /**\n     * Parallax for logotype on red background\n     */\n\n    const redLine = $('.v-line');\n\n    if (!redLine.length) return;\n\n    const controller    = new ScrollMagic.Controller({ container: 'body' });\n    const logotype      = redLine.find('.logotype-full');\n    const duration      = redLine.outerHeight();\n    const factor        = 0.7;\n\n    new ScrollMagic.Scene({\n        duration,\n        triggerElement: redLine[0],\n        triggerHook: 'onLeave'\n    }).on('progress', (e) => {\n\n        TweenMax.set(logotype, {\n            y: duration * e.progress * factor\n        });\n\n    }).addTo(controller);\n\n})();\n\n(() => {\n\n    /**\n     * Topare slider for catalog item page\n     */\n\n    const toparea = $('.toparea');\n    if (!toparea.length) return;\n\n    const topareaGallery = new Gallery(toparea.find('.toparea-gallery'));\n    const navButtons = toparea.find('.select-buttons-group').find('.btn');\n    const title = toparea.find('.toparea__subtitle');\n    const previews = $('body').find('.preview');\n\n    navButtons.on('click', function(e) {\n        e.preventDefault();\n        topareaGallery.slickApiCall('slickGoTo', navButtons.index(this));\n    });\n    title.text(navButtons.eq(0).text());\n    previews.hide();\n    previews.eq(0).show();\n\n    topareaGallery.getElement().on('beforeChange', (e, slick, current, next) => {\n        const clicked = navButtons.eq(next);\n        previews.hide();\n        previews.eq(next).show();\n\n        navButtons.filter('.is-selected').removeClass('is-selected');\n        clicked.addClass('is-selected');\n\n        title.fadeOut(400, () => {\n            title.text(clicked.data('text') || clicked.text());\n            title.fadeIn(400);\n        });\n    });\n\n})();\n\n$('html').removeClass('no-js');\n\n\n\n/** WEBPACK FOOTER **\n ** ./common-page.js\n **/","/*! Magnific Popup - v1.1.0 - 2016-02-20\n* http://dimsemenov.com/plugins/magnific-popup/\n* Copyright (c) 2016 Dmitry Semenov; */\n;(function (factory) { \nif (typeof define === 'function' && define.amd) { \n // AMD. Register as an anonymous module. \n define(['jquery'], factory); \n } else if (typeof exports === 'object') { \n // Node/CommonJS \n factory(require('jquery')); \n } else { \n // Browser globals \n factory(window.jQuery || window.Zepto); \n } \n }(function($) { \n\n/*>>core*/\n/**\n * \n * Magnific Popup Core JS file\n * \n */\n\n\n/**\n * Private static constants\n */\nvar CLOSE_EVENT = 'Close',\n\tBEFORE_CLOSE_EVENT = 'BeforeClose',\n\tAFTER_CLOSE_EVENT = 'AfterClose',\n\tBEFORE_APPEND_EVENT = 'BeforeAppend',\n\tMARKUP_PARSE_EVENT = 'MarkupParse',\n\tOPEN_EVENT = 'Open',\n\tCHANGE_EVENT = 'Change',\n\tNS = 'mfp',\n\tEVENT_NS = '.' + NS,\n\tREADY_CLASS = 'mfp-ready',\n\tREMOVING_CLASS = 'mfp-removing',\n\tPREVENT_CLOSE_CLASS = 'mfp-prevent-close';\n\n\n/**\n * Private vars \n */\n/*jshint -W079 */\nvar mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'\n\tMagnificPopup = function(){},\n\t_isJQ = !!(window.jQuery),\n\t_prevStatus,\n\t_window = $(window),\n\t_document,\n\t_prevContentType,\n\t_wrapClasses,\n\t_currPopupType;\n\n\n/**\n * Private functions\n */\nvar _mfpOn = function(name, f) {\n\t\tmfp.ev.on(NS + name + EVENT_NS, f);\n\t},\n\t_getEl = function(className, appendTo, html, raw) {\n\t\tvar el = document.createElement('div');\n\t\tel.className = 'mfp-'+className;\n\t\tif(html) {\n\t\t\tel.innerHTML = html;\n\t\t}\n\t\tif(!raw) {\n\t\t\tel = $(el);\n\t\t\tif(appendTo) {\n\t\t\t\tel.appendTo(appendTo);\n\t\t\t}\n\t\t} else if(appendTo) {\n\t\t\tappendTo.appendChild(el);\n\t\t}\n\t\treturn el;\n\t},\n\t_mfpTrigger = function(e, data) {\n\t\tmfp.ev.triggerHandler(NS + e, data);\n\n\t\tif(mfp.st.callbacks) {\n\t\t\t// converts \"mfpEventName\" to \"eventName\" callback and triggers it if it's present\n\t\t\te = e.charAt(0).toLowerCase() + e.slice(1);\n\t\t\tif(mfp.st.callbacks[e]) {\n\t\t\t\tmfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);\n\t\t\t}\n\t\t}\n\t},\n\t_getCloseBtn = function(type) {\n\t\tif(type !== _currPopupType || !mfp.currTemplate.closeBtn) {\n\t\t\tmfp.currTemplate.closeBtn = $( mfp.st.closeMarkup.replace('%title%', mfp.st.tClose ) );\n\t\t\t_currPopupType = type;\n\t\t}\n\t\treturn mfp.currTemplate.closeBtn;\n\t},\n\t// Initialize Magnific Popup only when called at least once\n\t_checkInstance = function() {\n\t\tif(!$.magnificPopup.instance) {\n\t\t\t/*jshint -W020 */\n\t\t\tmfp = new MagnificPopup();\n\t\t\tmfp.init();\n\t\t\t$.magnificPopup.instance = mfp;\n\t\t}\n\t},\n\t// CSS transition detection, http://stackoverflow.com/questions/7264899/detect-css-transitions-using-javascript-and-without-modernizr\n\tsupportsTransitions = function() {\n\t\tvar s = document.createElement('p').style, // 's' for style. better to create an element if body yet to exist\n\t\t\tv = ['ms','O','Moz','Webkit']; // 'v' for vendor\n\n\t\tif( s['transition'] !== undefined ) {\n\t\t\treturn true; \n\t\t}\n\t\t\t\n\t\twhile( v.length ) {\n\t\t\tif( v.pop() + 'Transition' in s ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn false;\n\t};\n\n\n\n/**\n * Public functions\n */\nMagnificPopup.prototype = {\n\n\tconstructor: MagnificPopup,\n\n\t/**\n\t * Initializes Magnific Popup plugin. \n\t * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed\n\t */\n\tinit: function() {\n\t\tvar appVersion = navigator.appVersion;\n\t\tmfp.isLowIE = mfp.isIE8 = document.all && !document.addEventListener;\n\t\tmfp.isAndroid = (/android/gi).test(appVersion);\n\t\tmfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);\n\t\tmfp.supportsTransition = supportsTransitions();\n\n\t\t// We disable fixed positioned lightbox on devices that don't handle it nicely.\n\t\t// If you know a better way of detecting this - let me know.\n\t\tmfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent) );\n\t\t_document = $(document);\n\n\t\tmfp.popupsCache = {};\n\t},\n\n\t/**\n\t * Opens popup\n\t * @param  data [description]\n\t */\n\topen: function(data) {\n\n\t\tvar i;\n\n\t\tif(data.isObj === false) { \n\t\t\t// convert jQuery collection to array to avoid conflicts later\n\t\t\tmfp.items = data.items.toArray();\n\n\t\t\tmfp.index = 0;\n\t\t\tvar items = data.items,\n\t\t\t\titem;\n\t\t\tfor(i = 0; i < items.length; i++) {\n\t\t\t\titem = items[i];\n\t\t\t\tif(item.parsed) {\n\t\t\t\t\titem = item.el[0];\n\t\t\t\t}\n\t\t\t\tif(item === data.el[0]) {\n\t\t\t\t\tmfp.index = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmfp.items = $.isArray(data.items) ? data.items : [data.items];\n\t\t\tmfp.index = data.index || 0;\n\t\t}\n\n\t\t// if popup is already opened - we just update the content\n\t\tif(mfp.isOpen) {\n\t\t\tmfp.updateItemHTML();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmfp.types = []; \n\t\t_wrapClasses = '';\n\t\tif(data.mainEl && data.mainEl.length) {\n\t\t\tmfp.ev = data.mainEl.eq(0);\n\t\t} else {\n\t\t\tmfp.ev = _document;\n\t\t}\n\n\t\tif(data.key) {\n\t\t\tif(!mfp.popupsCache[data.key]) {\n\t\t\t\tmfp.popupsCache[data.key] = {};\n\t\t\t}\n\t\t\tmfp.currTemplate = mfp.popupsCache[data.key];\n\t\t} else {\n\t\t\tmfp.currTemplate = {};\n\t\t}\n\n\n\n\t\tmfp.st = $.extend(true, {}, $.magnificPopup.defaults, data ); \n\t\tmfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;\n\n\t\tif(mfp.st.modal) {\n\t\t\tmfp.st.closeOnContentClick = false;\n\t\t\tmfp.st.closeOnBgClick = false;\n\t\t\tmfp.st.showCloseBtn = false;\n\t\t\tmfp.st.enableEscapeKey = false;\n\t\t}\n\t\t\n\n\t\t// Building markup\n\t\t// main containers are created only once\n\t\tif(!mfp.bgOverlay) {\n\n\t\t\t// Dark overlay\n\t\t\tmfp.bgOverlay = _getEl('bg').on('click'+EVENT_NS, function() {\n\t\t\t\tmfp.close();\n\t\t\t});\n\n\t\t\tmfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click'+EVENT_NS, function(e) {\n\t\t\t\tif(mfp._checkIfClose(e.target)) {\n\t\t\t\t\tmfp.close();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmfp.container = _getEl('container', mfp.wrap);\n\t\t}\n\n\t\tmfp.contentContainer = _getEl('content');\n\t\tif(mfp.st.preloader) {\n\t\t\tmfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);\n\t\t}\n\n\n\t\t// Initializing modules\n\t\tvar modules = $.magnificPopup.modules;\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar n = modules[i];\n\t\t\tn = n.charAt(0).toUpperCase() + n.slice(1);\n\t\t\tmfp['init'+n].call(mfp);\n\t\t}\n\t\t_mfpTrigger('BeforeOpen');\n\n\n\t\tif(mfp.st.showCloseBtn) {\n\t\t\t// Close button\n\t\t\tif(!mfp.st.closeBtnInside) {\n\t\t\t\tmfp.wrap.append( _getCloseBtn() );\n\t\t\t} else {\n\t\t\t\t_mfpOn(MARKUP_PARSE_EVENT, function(e, template, values, item) {\n\t\t\t\t\tvalues.close_replaceWith = _getCloseBtn(item.type);\n\t\t\t\t});\n\t\t\t\t_wrapClasses += ' mfp-close-btn-in';\n\t\t\t}\n\t\t}\n\n\t\tif(mfp.st.alignTop) {\n\t\t\t_wrapClasses += ' mfp-align-top';\n\t\t}\n\n\t\n\n\t\tif(mfp.fixedContentPos) {\n\t\t\tmfp.wrap.css({\n\t\t\t\toverflow: mfp.st.overflowY,\n\t\t\t\toverflowX: 'hidden',\n\t\t\t\toverflowY: mfp.st.overflowY\n\t\t\t});\n\t\t} else {\n\t\t\tmfp.wrap.css({ \n\t\t\t\ttop: _window.scrollTop(),\n\t\t\t\tposition: 'absolute'\n\t\t\t});\n\t\t}\n\t\tif( mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos) ) {\n\t\t\tmfp.bgOverlay.css({\n\t\t\t\theight: _document.height(),\n\t\t\t\tposition: 'absolute'\n\t\t\t});\n\t\t}\n\n\t\t\n\n\t\tif(mfp.st.enableEscapeKey) {\n\t\t\t// Close on ESC key\n\t\t\t_document.on('keyup' + EVENT_NS, function(e) {\n\t\t\t\tif(e.keyCode === 27) {\n\t\t\t\t\tmfp.close();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_window.on('resize' + EVENT_NS, function() {\n\t\t\tmfp.updateSize();\n\t\t});\n\n\n\t\tif(!mfp.st.closeOnContentClick) {\n\t\t\t_wrapClasses += ' mfp-auto-cursor';\n\t\t}\n\t\t\n\t\tif(_wrapClasses)\n\t\t\tmfp.wrap.addClass(_wrapClasses);\n\n\n\t\t// this triggers recalculation of layout, so we get it once to not to trigger twice\n\t\tvar windowHeight = mfp.wH = _window.height();\n\n\t\t\n\t\tvar windowStyles = {};\n\n\t\tif( mfp.fixedContentPos ) {\n            if(mfp._hasScrollBar(windowHeight)){\n                var s = mfp._getScrollbarSize();\n                if(s) {\n                    windowStyles.marginRight = s;\n                }\n            }\n        }\n\n\t\tif(mfp.fixedContentPos) {\n\t\t\tif(!mfp.isIE7) {\n\t\t\t\twindowStyles.overflow = 'hidden';\n\t\t\t} else {\n\t\t\t\t// ie7 double-scroll bug\n\t\t\t\t$('body, html').css('overflow', 'hidden');\n\t\t\t}\n\t\t}\n\n\t\t\n\t\t\n\t\tvar classesToadd = mfp.st.mainClass;\n\t\tif(mfp.isIE7) {\n\t\t\tclassesToadd += ' mfp-ie7';\n\t\t}\n\t\tif(classesToadd) {\n\t\t\tmfp._addClassToMFP( classesToadd );\n\t\t}\n\n\t\t// add content\n\t\tmfp.updateItemHTML();\n\n\t\t_mfpTrigger('BuildControls');\n\n\t\t// remove scrollbar, add margin e.t.c\n\t\t$('html').css(windowStyles);\n\t\t\n\t\t// add everything to DOM\n\t\tmfp.bgOverlay.add(mfp.wrap).prependTo( mfp.st.prependTo || $(document.body) );\n\n\t\t// Save last focused element\n\t\tmfp._lastFocusedEl = document.activeElement;\n\t\t\n\t\t// Wait for next cycle to allow CSS transition\n\t\tsetTimeout(function() {\n\t\t\t\n\t\t\tif(mfp.content) {\n\t\t\t\tmfp._addClassToMFP(READY_CLASS);\n\t\t\t\tmfp._setFocus();\n\t\t\t} else {\n\t\t\t\t// if content is not defined (not loaded e.t.c) we add class only for BG\n\t\t\t\tmfp.bgOverlay.addClass(READY_CLASS);\n\t\t\t}\n\t\t\t\n\t\t\t// Trap the focus in popup\n\t\t\t_document.on('focusin' + EVENT_NS, mfp._onFocusIn);\n\n\t\t}, 16);\n\n\t\tmfp.isOpen = true;\n\t\tmfp.updateSize(windowHeight);\n\t\t_mfpTrigger(OPEN_EVENT);\n\n\t\treturn data;\n\t},\n\n\t/**\n\t * Closes the popup\n\t */\n\tclose: function() {\n\t\tif(!mfp.isOpen) return;\n\t\t_mfpTrigger(BEFORE_CLOSE_EVENT);\n\n\t\tmfp.isOpen = false;\n\t\t// for CSS3 animation\n\t\tif(mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition )  {\n\t\t\tmfp._addClassToMFP(REMOVING_CLASS);\n\t\t\tsetTimeout(function() {\n\t\t\t\tmfp._close();\n\t\t\t}, mfp.st.removalDelay);\n\t\t} else {\n\t\t\tmfp._close();\n\t\t}\n\t},\n\n\t/**\n\t * Helper for close() function\n\t */\n\t_close: function() {\n\t\t_mfpTrigger(CLOSE_EVENT);\n\n\t\tvar classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';\n\n\t\tmfp.bgOverlay.detach();\n\t\tmfp.wrap.detach();\n\t\tmfp.container.empty();\n\n\t\tif(mfp.st.mainClass) {\n\t\t\tclassesToRemove += mfp.st.mainClass + ' ';\n\t\t}\n\n\t\tmfp._removeClassFromMFP(classesToRemove);\n\n\t\tif(mfp.fixedContentPos) {\n\t\t\tvar windowStyles = {marginRight: ''};\n\t\t\tif(mfp.isIE7) {\n\t\t\t\t$('body, html').css('overflow', '');\n\t\t\t} else {\n\t\t\t\twindowStyles.overflow = '';\n\t\t\t}\n\t\t\t$('html').css(windowStyles);\n\t\t}\n\t\t\n\t\t_document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);\n\t\tmfp.ev.off(EVENT_NS);\n\n\t\t// clean up DOM elements that aren't removed\n\t\tmfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');\n\t\tmfp.bgOverlay.attr('class', 'mfp-bg');\n\t\tmfp.container.attr('class', 'mfp-container');\n\n\t\t// remove close button from target element\n\t\tif(mfp.st.showCloseBtn &&\n\t\t(!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true)) {\n\t\t\tif(mfp.currTemplate.closeBtn)\n\t\t\t\tmfp.currTemplate.closeBtn.detach();\n\t\t}\n\n\n\t\tif(mfp.st.autoFocusLast && mfp._lastFocusedEl) {\n\t\t\t$(mfp._lastFocusedEl).focus(); // put tab focus back\n\t\t}\n\t\tmfp.currItem = null;\t\n\t\tmfp.content = null;\n\t\tmfp.currTemplate = null;\n\t\tmfp.prevHeight = 0;\n\n\t\t_mfpTrigger(AFTER_CLOSE_EVENT);\n\t},\n\t\n\tupdateSize: function(winHeight) {\n\n\t\tif(mfp.isIOS) {\n\t\t\t// fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2\n\t\t\tvar zoomLevel = document.documentElement.clientWidth / window.innerWidth;\n\t\t\tvar height = window.innerHeight * zoomLevel;\n\t\t\tmfp.wrap.css('height', height);\n\t\t\tmfp.wH = height;\n\t\t} else {\n\t\t\tmfp.wH = winHeight || _window.height();\n\t\t}\n\t\t// Fixes #84: popup incorrectly positioned with position:relative on body\n\t\tif(!mfp.fixedContentPos) {\n\t\t\tmfp.wrap.css('height', mfp.wH);\n\t\t}\n\n\t\t_mfpTrigger('Resize');\n\n\t},\n\n\t/**\n\t * Set content of popup based on current index\n\t */\n\tupdateItemHTML: function() {\n\t\tvar item = mfp.items[mfp.index];\n\n\t\t// Detach and perform modifications\n\t\tmfp.contentContainer.detach();\n\n\t\tif(mfp.content)\n\t\t\tmfp.content.detach();\n\n\t\tif(!item.parsed) {\n\t\t\titem = mfp.parseEl( mfp.index );\n\t\t}\n\n\t\tvar type = item.type;\n\n\t\t_mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);\n\t\t// BeforeChange event works like so:\n\t\t// _mfpOn('BeforeChange', function(e, prevType, newType) { });\n\n\t\tmfp.currItem = item;\n\n\t\tif(!mfp.currTemplate[type]) {\n\t\t\tvar markup = mfp.st[type] ? mfp.st[type].markup : false;\n\n\t\t\t// allows to modify markup\n\t\t\t_mfpTrigger('FirstMarkupParse', markup);\n\n\t\t\tif(markup) {\n\t\t\t\tmfp.currTemplate[type] = $(markup);\n\t\t\t} else {\n\t\t\t\t// if there is no markup found we just define that template is parsed\n\t\t\t\tmfp.currTemplate[type] = true;\n\t\t\t}\n\t\t}\n\n\t\tif(_prevContentType && _prevContentType !== item.type) {\n\t\t\tmfp.container.removeClass('mfp-'+_prevContentType+'-holder');\n\t\t}\n\n\t\tvar newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);\n\t\tmfp.appendContent(newContent, type);\n\n\t\titem.preloaded = true;\n\n\t\t_mfpTrigger(CHANGE_EVENT, item);\n\t\t_prevContentType = item.type;\n\n\t\t// Append container back after its content changed\n\t\tmfp.container.prepend(mfp.contentContainer);\n\n\t\t_mfpTrigger('AfterChange');\n\t},\n\n\n\t/**\n\t * Set HTML content of popup\n\t */\n\tappendContent: function(newContent, type) {\n\t\tmfp.content = newContent;\n\n\t\tif(newContent) {\n\t\t\tif(mfp.st.showCloseBtn && mfp.st.closeBtnInside &&\n\t\t\t\tmfp.currTemplate[type] === true) {\n\t\t\t\t// if there is no markup, we just append close button element inside\n\t\t\t\tif(!mfp.content.find('.mfp-close').length) {\n\t\t\t\t\tmfp.content.append(_getCloseBtn());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmfp.content = newContent;\n\t\t\t}\n\t\t} else {\n\t\t\tmfp.content = '';\n\t\t}\n\n\t\t_mfpTrigger(BEFORE_APPEND_EVENT);\n\t\tmfp.container.addClass('mfp-'+type+'-holder');\n\n\t\tmfp.contentContainer.append(mfp.content);\n\t},\n\n\n\t/**\n\t * Creates Magnific Popup data object based on given data\n\t * @param  {int} index Index of item to parse\n\t */\n\tparseEl: function(index) {\n\t\tvar item = mfp.items[index],\n\t\t\ttype;\n\n\t\tif(item.tagName) {\n\t\t\titem = { el: $(item) };\n\t\t} else {\n\t\t\ttype = item.type;\n\t\t\titem = { data: item, src: item.src };\n\t\t}\n\n\t\tif(item.el) {\n\t\t\tvar types = mfp.types;\n\n\t\t\t// check for 'mfp-TYPE' class\n\t\t\tfor(var i = 0; i < types.length; i++) {\n\t\t\t\tif( item.el.hasClass('mfp-'+types[i]) ) {\n\t\t\t\t\ttype = types[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titem.src = item.el.attr('data-mfp-src');\n\t\t\tif(!item.src) {\n\t\t\t\titem.src = item.el.attr('href');\n\t\t\t}\n\t\t}\n\n\t\titem.type = type || mfp.st.type || 'inline';\n\t\titem.index = index;\n\t\titem.parsed = true;\n\t\tmfp.items[index] = item;\n\t\t_mfpTrigger('ElementParse', item);\n\n\t\treturn mfp.items[index];\n\t},\n\n\n\t/**\n\t * Initializes single popup or a group of popups\n\t */\n\taddGroup: function(el, options) {\n\t\tvar eHandler = function(e) {\n\t\t\te.mfpEl = this;\n\t\t\tmfp._openClick(e, el, options);\n\t\t};\n\n\t\tif(!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tvar eName = 'click.magnificPopup';\n\t\toptions.mainEl = el;\n\n\t\tif(options.items) {\n\t\t\toptions.isObj = true;\n\t\t\tel.off(eName).on(eName, eHandler);\n\t\t} else {\n\t\t\toptions.isObj = false;\n\t\t\tif(options.delegate) {\n\t\t\t\tel.off(eName).on(eName, options.delegate , eHandler);\n\t\t\t} else {\n\t\t\t\toptions.items = el;\n\t\t\t\tel.off(eName).on(eName, eHandler);\n\t\t\t}\n\t\t}\n\t},\n\t_openClick: function(e, el, options) {\n\t\tvar midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;\n\n\n\t\tif(!midClick && ( e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;\n\n\t\tif(disableOn) {\n\t\t\tif($.isFunction(disableOn)) {\n\t\t\t\tif( !disableOn.call(mfp) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else { // else it's number\n\t\t\t\tif( _window.width() < disableOn ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(e.type) {\n\t\t\te.preventDefault();\n\n\t\t\t// This will prevent popup from closing if element is inside and popup is already opened\n\t\t\tif(mfp.isOpen) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}\n\n\t\toptions.el = $(e.mfpEl);\n\t\tif(options.delegate) {\n\t\t\toptions.items = el.find(options.delegate);\n\t\t}\n\t\tmfp.open(options);\n\t},\n\n\n\t/**\n\t * Updates text on preloader\n\t */\n\tupdateStatus: function(status, text) {\n\n\t\tif(mfp.preloader) {\n\t\t\tif(_prevStatus !== status) {\n\t\t\t\tmfp.container.removeClass('mfp-s-'+_prevStatus);\n\t\t\t}\n\n\t\t\tif(!text && status === 'loading') {\n\t\t\t\ttext = mfp.st.tLoading;\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tstatus: status,\n\t\t\t\ttext: text\n\t\t\t};\n\t\t\t// allows to modify status\n\t\t\t_mfpTrigger('UpdateStatus', data);\n\n\t\t\tstatus = data.status;\n\t\t\ttext = data.text;\n\n\t\t\tmfp.preloader.html(text);\n\n\t\t\tmfp.preloader.find('a').on('click', function(e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t});\n\n\t\t\tmfp.container.addClass('mfp-s-'+status);\n\t\t\t_prevStatus = status;\n\t\t}\n\t},\n\n\n\t/*\n\t\t\"Private\" helpers that aren't private at all\n\t */\n\t// Check to close popup or not\n\t// \"target\" is an element that was clicked\n\t_checkIfClose: function(target) {\n\n\t\tif($(target).hasClass(PREVENT_CLOSE_CLASS)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar closeOnContent = mfp.st.closeOnContentClick;\n\t\tvar closeOnBg = mfp.st.closeOnBgClick;\n\n\t\tif(closeOnContent && closeOnBg) {\n\t\t\treturn true;\n\t\t} else {\n\n\t\t\t// We close the popup if click is on close button or on preloader. Or if there is no content.\n\t\t\tif(!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0]) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// if click is outside the content\n\t\t\tif(  (target !== mfp.content[0] && !$.contains(mfp.content[0], target))  ) {\n\t\t\t\tif(closeOnBg) {\n\t\t\t\t\t// last check, if the clicked element is in DOM, (in case it's removed onclick)\n\t\t\t\t\tif( $.contains(document, target) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(closeOnContent) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t},\n\t_addClassToMFP: function(cName) {\n\t\tmfp.bgOverlay.addClass(cName);\n\t\tmfp.wrap.addClass(cName);\n\t},\n\t_removeClassFromMFP: function(cName) {\n\t\tthis.bgOverlay.removeClass(cName);\n\t\tmfp.wrap.removeClass(cName);\n\t},\n\t_hasScrollBar: function(winHeight) {\n\t\treturn (  (mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()) );\n\t},\n\t_setFocus: function() {\n\t\t(mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();\n\t},\n\t_onFocusIn: function(e) {\n\t\tif( e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target) ) {\n\t\t\tmfp._setFocus();\n\t\t\treturn false;\n\t\t}\n\t},\n\t_parseMarkup: function(template, values, item) {\n\t\tvar arr;\n\t\tif(item.data) {\n\t\t\tvalues = $.extend(item.data, values);\n\t\t}\n\t\t_mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item] );\n\n\t\t$.each(values, function(key, value) {\n\t\t\tif(value === undefined || value === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tarr = key.split('_');\n\t\t\tif(arr.length > 1) {\n\t\t\t\tvar el = template.find(EVENT_NS + '-'+arr[0]);\n\n\t\t\t\tif(el.length > 0) {\n\t\t\t\t\tvar attr = arr[1];\n\t\t\t\t\tif(attr === 'replaceWith') {\n\t\t\t\t\t\tif(el[0] !== value[0]) {\n\t\t\t\t\t\t\tel.replaceWith(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(attr === 'img') {\n\t\t\t\t\t\tif(el.is('img')) {\n\t\t\t\t\t\t\tel.attr('src', value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.replaceWith( $('<img>').attr('src', value).attr('class', el.attr('class')) );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.attr(arr[1], value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttemplate.find(EVENT_NS + '-'+key).html(value);\n\t\t\t}\n\t\t});\n\t},\n\n\t_getScrollbarSize: function() {\n\t\t// thx David\n\t\tif(mfp.scrollbarSize === undefined) {\n\t\t\tvar scrollDiv = document.createElement(\"div\");\n\t\t\tscrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\n\t\t\tdocument.body.appendChild(scrollDiv);\n\t\t\tmfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\t\t\tdocument.body.removeChild(scrollDiv);\n\t\t}\n\t\treturn mfp.scrollbarSize;\n\t}\n\n}; /* MagnificPopup core prototype end */\n\n\n\n\n/**\n * Public static functions\n */\n$.magnificPopup = {\n\tinstance: null,\n\tproto: MagnificPopup.prototype,\n\tmodules: [],\n\n\topen: function(options, index) {\n\t\t_checkInstance();\n\n\t\tif(!options) {\n\t\t\toptions = {};\n\t\t} else {\n\t\t\toptions = $.extend(true, {}, options);\n\t\t}\n\n\t\toptions.isObj = true;\n\t\toptions.index = index || 0;\n\t\treturn this.instance.open(options);\n\t},\n\n\tclose: function() {\n\t\treturn $.magnificPopup.instance && $.magnificPopup.instance.close();\n\t},\n\n\tregisterModule: function(name, module) {\n\t\tif(module.options) {\n\t\t\t$.magnificPopup.defaults[name] = module.options;\n\t\t}\n\t\t$.extend(this.proto, module.proto);\n\t\tthis.modules.push(name);\n\t},\n\n\tdefaults: {\n\n\t\t// Info about options is in docs:\n\t\t// http://dimsemenov.com/plugins/magnific-popup/documentation.html#options\n\n\t\tdisableOn: 0,\n\n\t\tkey: null,\n\n\t\tmidClick: false,\n\n\t\tmainClass: '',\n\n\t\tpreloader: true,\n\n\t\tfocus: '', // CSS selector of input to focus after popup is opened\n\n\t\tcloseOnContentClick: false,\n\n\t\tcloseOnBgClick: true,\n\n\t\tcloseBtnInside: true,\n\n\t\tshowCloseBtn: true,\n\n\t\tenableEscapeKey: true,\n\n\t\tmodal: false,\n\n\t\talignTop: false,\n\n\t\tremovalDelay: 0,\n\n\t\tprependTo: null,\n\n\t\tfixedContentPos: 'auto',\n\n\t\tfixedBgPos: 'auto',\n\n\t\toverflowY: 'auto',\n\n\t\tcloseMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\">&#215;</button>',\n\n\t\ttClose: 'Close (Esc)',\n\n\t\ttLoading: 'Loading...',\n\n\t\tautoFocusLast: true\n\n\t}\n};\n\n\n\n$.fn.magnificPopup = function(options) {\n\t_checkInstance();\n\n\tvar jqEl = $(this);\n\n\t// We call some API method of first param is a string\n\tif (typeof options === \"string\" ) {\n\n\t\tif(options === 'open') {\n\t\t\tvar items,\n\t\t\t\titemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,\n\t\t\t\tindex = parseInt(arguments[1], 10) || 0;\n\n\t\t\tif(itemOpts.items) {\n\t\t\t\titems = itemOpts.items[index];\n\t\t\t} else {\n\t\t\t\titems = jqEl;\n\t\t\t\tif(itemOpts.delegate) {\n\t\t\t\t\titems = items.find(itemOpts.delegate);\n\t\t\t\t}\n\t\t\t\titems = items.eq( index );\n\t\t\t}\n\t\t\tmfp._openClick({mfpEl:items}, jqEl, itemOpts);\n\t\t} else {\n\t\t\tif(mfp.isOpen)\n\t\t\t\tmfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\n\t} else {\n\t\t// clone options obj\n\t\toptions = $.extend(true, {}, options);\n\n\t\t/*\n\t\t * As Zepto doesn't support .data() method for objects\n\t\t * and it works only in normal browsers\n\t\t * we assign \"options\" object directly to the DOM element. FTW!\n\t\t */\n\t\tif(_isJQ) {\n\t\t\tjqEl.data('magnificPopup', options);\n\t\t} else {\n\t\t\tjqEl[0].magnificPopup = options;\n\t\t}\n\n\t\tmfp.addGroup(jqEl, options);\n\n\t}\n\treturn jqEl;\n};\n\n/*>>core*/\n\n/*>>inline*/\n\nvar INLINE_NS = 'inline',\n\t_hiddenClass,\n\t_inlinePlaceholder,\n\t_lastInlineElement,\n\t_putInlineElementsBack = function() {\n\t\tif(_lastInlineElement) {\n\t\t\t_inlinePlaceholder.after( _lastInlineElement.addClass(_hiddenClass) ).detach();\n\t\t\t_lastInlineElement = null;\n\t\t}\n\t};\n\n$.magnificPopup.registerModule(INLINE_NS, {\n\toptions: {\n\t\thiddenClass: 'hide', // will be appended with `mfp-` prefix\n\t\tmarkup: '',\n\t\ttNotFound: 'Content not found'\n\t},\n\tproto: {\n\n\t\tinitInline: function() {\n\t\t\tmfp.types.push(INLINE_NS);\n\n\t\t\t_mfpOn(CLOSE_EVENT+'.'+INLINE_NS, function() {\n\t\t\t\t_putInlineElementsBack();\n\t\t\t});\n\t\t},\n\n\t\tgetInline: function(item, template) {\n\n\t\t\t_putInlineElementsBack();\n\n\t\t\tif(item.src) {\n\t\t\t\tvar inlineSt = mfp.st.inline,\n\t\t\t\t\tel = $(item.src);\n\n\t\t\t\tif(el.length) {\n\n\t\t\t\t\t// If target element has parent - we replace it with placeholder and put it back after popup is closed\n\t\t\t\t\tvar parent = el[0].parentNode;\n\t\t\t\t\tif(parent && parent.tagName) {\n\t\t\t\t\t\tif(!_inlinePlaceholder) {\n\t\t\t\t\t\t\t_hiddenClass = inlineSt.hiddenClass;\n\t\t\t\t\t\t\t_inlinePlaceholder = _getEl(_hiddenClass);\n\t\t\t\t\t\t\t_hiddenClass = 'mfp-'+_hiddenClass;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// replace target inline element with placeholder\n\t\t\t\t\t\t_lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);\n\t\t\t\t\t}\n\n\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t} else {\n\t\t\t\t\tmfp.updateStatus('error', inlineSt.tNotFound);\n\t\t\t\t\tel = $('<div>');\n\t\t\t\t}\n\n\t\t\t\titem.inlineElement = el;\n\t\t\t\treturn el;\n\t\t\t}\n\n\t\t\tmfp.updateStatus('ready');\n\t\t\tmfp._parseMarkup(template, {}, item);\n\t\t\treturn template;\n\t\t}\n\t}\n});\n\n/*>>inline*/\n\n/*>>ajax*/\nvar AJAX_NS = 'ajax',\n\t_ajaxCur,\n\t_removeAjaxCursor = function() {\n\t\tif(_ajaxCur) {\n\t\t\t$(document.body).removeClass(_ajaxCur);\n\t\t}\n\t},\n\t_destroyAjaxRequest = function() {\n\t\t_removeAjaxCursor();\n\t\tif(mfp.req) {\n\t\t\tmfp.req.abort();\n\t\t}\n\t};\n\n$.magnificPopup.registerModule(AJAX_NS, {\n\n\toptions: {\n\t\tsettings: null,\n\t\tcursor: 'mfp-ajax-cur',\n\t\ttError: '<a href=\"%url%\">The content</a> could not be loaded.'\n\t},\n\n\tproto: {\n\t\tinitAjax: function() {\n\t\t\tmfp.types.push(AJAX_NS);\n\t\t\t_ajaxCur = mfp.st.ajax.cursor;\n\n\t\t\t_mfpOn(CLOSE_EVENT+'.'+AJAX_NS, _destroyAjaxRequest);\n\t\t\t_mfpOn('BeforeChange.' + AJAX_NS, _destroyAjaxRequest);\n\t\t},\n\t\tgetAjax: function(item) {\n\n\t\t\tif(_ajaxCur) {\n\t\t\t\t$(document.body).addClass(_ajaxCur);\n\t\t\t}\n\n\t\t\tmfp.updateStatus('loading');\n\n\t\t\tvar opts = $.extend({\n\t\t\t\turl: item.src,\n\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\n\t\t\t\t\tvar temp = {\n\t\t\t\t\t\tdata:data,\n\t\t\t\t\t\txhr:jqXHR\n\t\t\t\t\t};\n\n\t\t\t\t\t_mfpTrigger('ParseAjax', temp);\n\n\t\t\t\t\tmfp.appendContent( $(temp.data), AJAX_NS );\n\n\t\t\t\t\titem.finished = true;\n\n\t\t\t\t\t_removeAjaxCursor();\n\n\t\t\t\t\tmfp._setFocus();\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tmfp.wrap.addClass(READY_CLASS);\n\t\t\t\t\t}, 16);\n\n\t\t\t\t\tmfp.updateStatus('ready');\n\n\t\t\t\t\t_mfpTrigger('AjaxContentAdded');\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\t_removeAjaxCursor();\n\t\t\t\t\titem.finished = item.loadError = true;\n\t\t\t\t\tmfp.updateStatus('error', mfp.st.ajax.tError.replace('%url%', item.src));\n\t\t\t\t}\n\t\t\t}, mfp.st.ajax.settings);\n\n\t\t\tmfp.req = $.ajax(opts);\n\n\t\t\treturn '';\n\t\t}\n\t}\n});\n\n/*>>ajax*/\n\n/*>>image*/\nvar _imgInterval,\n\t_getTitle = function(item) {\n\t\tif(item.data && item.data.title !== undefined)\n\t\t\treturn item.data.title;\n\n\t\tvar src = mfp.st.image.titleSrc;\n\n\t\tif(src) {\n\t\t\tif($.isFunction(src)) {\n\t\t\t\treturn src.call(mfp, item);\n\t\t\t} else if(item.el) {\n\t\t\t\treturn item.el.attr(src) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n$.magnificPopup.registerModule('image', {\n\n\toptions: {\n\t\tmarkup: '<div class=\"mfp-figure\">'+\n\t\t\t\t\t'<div class=\"mfp-close\"></div>'+\n\t\t\t\t\t'<figure>'+\n\t\t\t\t\t\t'<div class=\"mfp-img\"></div>'+\n\t\t\t\t\t\t'<figcaption>'+\n\t\t\t\t\t\t\t'<div class=\"mfp-bottom-bar\">'+\n\t\t\t\t\t\t\t\t'<div class=\"mfp-title\"></div>'+\n\t\t\t\t\t\t\t\t'<div class=\"mfp-counter\"></div>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t'</figcaption>'+\n\t\t\t\t\t'</figure>'+\n\t\t\t\t'</div>',\n\t\tcursor: 'mfp-zoom-out-cur',\n\t\ttitleSrc: 'title',\n\t\tverticalFit: true,\n\t\ttError: '<a href=\"%url%\">The image</a> could not be loaded.'\n\t},\n\n\tproto: {\n\t\tinitImage: function() {\n\t\t\tvar imgSt = mfp.st.image,\n\t\t\t\tns = '.image';\n\n\t\t\tmfp.types.push('image');\n\n\t\t\t_mfpOn(OPEN_EVENT+ns, function() {\n\t\t\t\tif(mfp.currItem.type === 'image' && imgSt.cursor) {\n\t\t\t\t\t$(document.body).addClass(imgSt.cursor);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\tif(imgSt.cursor) {\n\t\t\t\t\t$(document.body).removeClass(imgSt.cursor);\n\t\t\t\t}\n\t\t\t\t_window.off('resize' + EVENT_NS);\n\t\t\t});\n\n\t\t\t_mfpOn('Resize'+ns, mfp.resizeImage);\n\t\t\tif(mfp.isLowIE) {\n\t\t\t\t_mfpOn('AfterChange', mfp.resizeImage);\n\t\t\t}\n\t\t},\n\t\tresizeImage: function() {\n\t\t\tvar item = mfp.currItem;\n\t\t\tif(!item || !item.img) return;\n\n\t\t\tif(mfp.st.image.verticalFit) {\n\t\t\t\tvar decr = 0;\n\t\t\t\t// fix box-sizing in ie7/8\n\t\t\t\tif(mfp.isLowIE) {\n\t\t\t\t\tdecr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'),10);\n\t\t\t\t}\n\t\t\t\titem.img.css('max-height', mfp.wH-decr);\n\t\t\t}\n\t\t},\n\t\t_onImageHasSize: function(item) {\n\t\t\tif(item.img) {\n\n\t\t\t\titem.hasSize = true;\n\n\t\t\t\tif(_imgInterval) {\n\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t}\n\n\t\t\t\titem.isCheckingImgSize = false;\n\n\t\t\t\t_mfpTrigger('ImageHasSize', item);\n\n\t\t\t\tif(item.imgHidden) {\n\t\t\t\t\tif(mfp.content)\n\t\t\t\t\t\tmfp.content.removeClass('mfp-loading');\n\n\t\t\t\t\titem.imgHidden = false;\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Function that loops until the image has size to display elements that rely on it asap\n\t\t */\n\t\tfindImageSize: function(item) {\n\n\t\t\tvar counter = 0,\n\t\t\t\timg = item.img[0],\n\t\t\t\tmfpSetInterval = function(delay) {\n\n\t\t\t\t\tif(_imgInterval) {\n\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t}\n\t\t\t\t\t// decelerating interval that checks for size of an image\n\t\t\t\t\t_imgInterval = setInterval(function() {\n\t\t\t\t\t\tif(img.naturalWidth > 0) {\n\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(counter > 200) {\n\t\t\t\t\t\t\tclearInterval(_imgInterval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\tif(counter === 3) {\n\t\t\t\t\t\t\tmfpSetInterval(10);\n\t\t\t\t\t\t} else if(counter === 40) {\n\t\t\t\t\t\t\tmfpSetInterval(50);\n\t\t\t\t\t\t} else if(counter === 100) {\n\t\t\t\t\t\t\tmfpSetInterval(500);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, delay);\n\t\t\t\t};\n\n\t\t\tmfpSetInterval(1);\n\t\t},\n\n\t\tgetImage: function(item, template) {\n\n\t\t\tvar guard = 0,\n\n\t\t\t\t// image load complete handler\n\t\t\t\tonLoadComplete = function() {\n\t\t\t\t\tif(item) {\n\t\t\t\t\t\tif (item.img[0].complete) {\n\t\t\t\t\t\t\titem.img.off('.mfploader');\n\n\t\t\t\t\t\t\tif(item === mfp.currItem){\n\t\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\n\t\t\t\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\t\titem.loaded = true;\n\n\t\t\t\t\t\t\t_mfpTrigger('ImageLoadComplete');\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if image complete check fails 200 times (20 sec), we assume that there was an error.\n\t\t\t\t\t\t\tguard++;\n\t\t\t\t\t\t\tif(guard < 200) {\n\t\t\t\t\t\t\t\tsetTimeout(onLoadComplete,100);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tonLoadError();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// image error handler\n\t\t\t\tonLoadError = function() {\n\t\t\t\t\tif(item) {\n\t\t\t\t\t\titem.img.off('.mfploader');\n\t\t\t\t\t\tif(item === mfp.currItem){\n\t\t\t\t\t\t\tmfp._onImageHasSize(item);\n\t\t\t\t\t\t\tmfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\t\titem.loaded = true;\n\t\t\t\t\t\titem.loadError = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\timgSt = mfp.st.image;\n\n\n\t\t\tvar el = template.find('.mfp-img');\n\t\t\tif(el.length) {\n\t\t\t\tvar img = document.createElement('img');\n\t\t\t\timg.className = 'mfp-img';\n\t\t\t\tif(item.el && item.el.find('img').length) {\n\t\t\t\t\timg.alt = item.el.find('img').attr('alt');\n\t\t\t\t}\n\t\t\t\titem.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);\n\t\t\t\timg.src = item.src;\n\n\t\t\t\t// without clone() \"error\" event is not firing when IMG is replaced by new IMG\n\t\t\t\t// TODO: find a way to avoid such cloning\n\t\t\t\tif(el.is('img')) {\n\t\t\t\t\titem.img = item.img.clone();\n\t\t\t\t}\n\n\t\t\t\timg = item.img[0];\n\t\t\t\tif(img.naturalWidth > 0) {\n\t\t\t\t\titem.hasSize = true;\n\t\t\t\t} else if(!img.width) {\n\t\t\t\t\titem.hasSize = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmfp._parseMarkup(template, {\n\t\t\t\ttitle: _getTitle(item),\n\t\t\t\timg_replaceWith: item.img\n\t\t\t}, item);\n\n\t\t\tmfp.resizeImage();\n\n\t\t\tif(item.hasSize) {\n\t\t\t\tif(_imgInterval) clearInterval(_imgInterval);\n\n\t\t\t\tif(item.loadError) {\n\t\t\t\t\ttemplate.addClass('mfp-loading');\n\t\t\t\t\tmfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );\n\t\t\t\t} else {\n\t\t\t\t\ttemplate.removeClass('mfp-loading');\n\t\t\t\t\tmfp.updateStatus('ready');\n\t\t\t\t}\n\t\t\t\treturn template;\n\t\t\t}\n\n\t\t\tmfp.updateStatus('loading');\n\t\t\titem.loading = true;\n\n\t\t\tif(!item.hasSize) {\n\t\t\t\titem.imgHidden = true;\n\t\t\t\ttemplate.addClass('mfp-loading');\n\t\t\t\tmfp.findImageSize(item);\n\t\t\t}\n\n\t\t\treturn template;\n\t\t}\n\t}\n});\n\n/*>>image*/\n\n/*>>zoom*/\nvar hasMozTransform,\n\tgetHasMozTransform = function() {\n\t\tif(hasMozTransform === undefined) {\n\t\t\thasMozTransform = document.createElement('p').style.MozTransform !== undefined;\n\t\t}\n\t\treturn hasMozTransform;\n\t};\n\n$.magnificPopup.registerModule('zoom', {\n\n\toptions: {\n\t\tenabled: false,\n\t\teasing: 'ease-in-out',\n\t\tduration: 300,\n\t\topener: function(element) {\n\t\t\treturn element.is('img') ? element : element.find('img');\n\t\t}\n\t},\n\n\tproto: {\n\n\t\tinitZoom: function() {\n\t\t\tvar zoomSt = mfp.st.zoom,\n\t\t\t\tns = '.zoom',\n\t\t\t\timage;\n\n\t\t\tif(!zoomSt.enabled || !mfp.supportsTransition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar duration = zoomSt.duration,\n\t\t\t\tgetElToAnimate = function(image) {\n\t\t\t\t\tvar newImg = image.clone().removeAttr('style').removeAttr('class').addClass('mfp-animated-image'),\n\t\t\t\t\t\ttransition = 'all '+(zoomSt.duration/1000)+'s ' + zoomSt.easing,\n\t\t\t\t\t\tcssObj = {\n\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\tzIndex: 9999,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t'-webkit-backface-visibility': 'hidden'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tt = 'transition';\n\n\t\t\t\t\tcssObj['-webkit-'+t] = cssObj['-moz-'+t] = cssObj['-o-'+t] = cssObj[t] = transition;\n\n\t\t\t\t\tnewImg.css(cssObj);\n\t\t\t\t\treturn newImg;\n\t\t\t\t},\n\t\t\t\tshowMainContent = function() {\n\t\t\t\t\tmfp.content.css('visibility', 'visible');\n\t\t\t\t},\n\t\t\t\topenTimeout,\n\t\t\t\tanimatedImg;\n\n\t\t\t_mfpOn('BuildControls'+ns, function() {\n\t\t\t\tif(mfp._allowZoom()) {\n\n\t\t\t\t\tclearTimeout(openTimeout);\n\t\t\t\t\tmfp.content.css('visibility', 'hidden');\n\n\t\t\t\t\t// Basically, all code below does is clones existing image, puts in on top of the current one and animated it\n\n\t\t\t\t\timage = mfp._getItemToZoom();\n\n\t\t\t\t\tif(!image) {\n\t\t\t\t\t\tshowMainContent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tanimatedImg = getElToAnimate(image);\n\n\t\t\t\t\tanimatedImg.css( mfp._getOffset() );\n\n\t\t\t\t\tmfp.wrap.append(animatedImg);\n\n\t\t\t\t\topenTimeout = setTimeout(function() {\n\t\t\t\t\t\tanimatedImg.css( mfp._getOffset( true ) );\n\t\t\t\t\t\topenTimeout = setTimeout(function() {\n\n\t\t\t\t\t\t\tshowMainContent();\n\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tanimatedImg.remove();\n\t\t\t\t\t\t\t\timage = animatedImg = null;\n\t\t\t\t\t\t\t\t_mfpTrigger('ZoomAnimationEnded');\n\t\t\t\t\t\t\t}, 16); // avoid blink when switching images\n\n\t\t\t\t\t\t}, duration); // this timeout equals animation duration\n\n\t\t\t\t\t}, 16); // by adding this timeout we avoid short glitch at the beginning of animation\n\n\n\t\t\t\t\t// Lots of timeouts...\n\t\t\t\t}\n\t\t\t});\n\t\t\t_mfpOn(BEFORE_CLOSE_EVENT+ns, function() {\n\t\t\t\tif(mfp._allowZoom()) {\n\n\t\t\t\t\tclearTimeout(openTimeout);\n\n\t\t\t\t\tmfp.st.removalDelay = duration;\n\n\t\t\t\t\tif(!image) {\n\t\t\t\t\t\timage = mfp._getItemToZoom();\n\t\t\t\t\t\tif(!image) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimatedImg = getElToAnimate(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tanimatedImg.css( mfp._getOffset(true) );\n\t\t\t\t\tmfp.wrap.append(animatedImg);\n\t\t\t\t\tmfp.content.css('visibility', 'hidden');\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tanimatedImg.css( mfp._getOffset() );\n\t\t\t\t\t}, 16);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\tif(mfp._allowZoom()) {\n\t\t\t\t\tshowMainContent();\n\t\t\t\t\tif(animatedImg) {\n\t\t\t\t\t\tanimatedImg.remove();\n\t\t\t\t\t}\n\t\t\t\t\timage = null;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_allowZoom: function() {\n\t\t\treturn mfp.currItem.type === 'image';\n\t\t},\n\n\t\t_getItemToZoom: function() {\n\t\t\tif(mfp.currItem.hasSize) {\n\t\t\t\treturn mfp.currItem.img;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t// Get element postion relative to viewport\n\t\t_getOffset: function(isLarge) {\n\t\t\tvar el;\n\t\t\tif(isLarge) {\n\t\t\t\tel = mfp.currItem.img;\n\t\t\t} else {\n\t\t\t\tel = mfp.st.zoom.opener(mfp.currItem.el || mfp.currItem);\n\t\t\t}\n\n\t\t\tvar offset = el.offset();\n\t\t\tvar paddingTop = parseInt(el.css('padding-top'),10);\n\t\t\tvar paddingBottom = parseInt(el.css('padding-bottom'),10);\n\t\t\toffset.top -= ( $(window).scrollTop() - paddingTop );\n\n\n\t\t\t/*\n\n\t\t\tAnimating left + top + width/height looks glitchy in Firefox, but perfect in Chrome. And vice-versa.\n\n\t\t\t */\n\t\t\tvar obj = {\n\t\t\t\twidth: el.width(),\n\t\t\t\t// fix Zepto height+padding issue\n\t\t\t\theight: (_isJQ ? el.innerHeight() : el[0].offsetHeight) - paddingBottom - paddingTop\n\t\t\t};\n\n\t\t\t// I hate to do this, but there is no another option\n\t\t\tif( getHasMozTransform() ) {\n\t\t\t\tobj['-moz-transform'] = obj['transform'] = 'translate(' + offset.left + 'px,' + offset.top + 'px)';\n\t\t\t} else {\n\t\t\t\tobj.left = offset.left;\n\t\t\t\tobj.top = offset.top;\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\n\t}\n});\n\n\n\n/*>>zoom*/\n\n/*>>iframe*/\n\nvar IFRAME_NS = 'iframe',\n\t_emptyPage = '//about:blank',\n\n\t_fixIframeBugs = function(isShowing) {\n\t\tif(mfp.currTemplate[IFRAME_NS]) {\n\t\t\tvar el = mfp.currTemplate[IFRAME_NS].find('iframe');\n\t\t\tif(el.length) {\n\t\t\t\t// reset src after the popup is closed to avoid \"video keeps playing after popup is closed\" bug\n\t\t\t\tif(!isShowing) {\n\t\t\t\t\tel[0].src = _emptyPage;\n\t\t\t\t}\n\n\t\t\t\t// IE8 black screen bug fix\n\t\t\t\tif(mfp.isIE8) {\n\t\t\t\t\tel.css('display', isShowing ? 'block' : 'none');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n$.magnificPopup.registerModule(IFRAME_NS, {\n\n\toptions: {\n\t\tmarkup: '<div class=\"mfp-iframe-scaler\">'+\n\t\t\t\t\t'<div class=\"mfp-close\"></div>'+\n\t\t\t\t\t'<iframe class=\"mfp-iframe\" src=\"//about:blank\" frameborder=\"0\" allowfullscreen></iframe>'+\n\t\t\t\t'</div>',\n\n\t\tsrcAction: 'iframe_src',\n\n\t\t// we don't care and support only one default type of URL by default\n\t\tpatterns: {\n\t\t\tyoutube: {\n\t\t\t\tindex: 'youtube.com',\n\t\t\t\tid: 'v=',\n\t\t\t\tsrc: '//www.youtube.com/embed/%id%?autoplay=1'\n\t\t\t},\n\t\t\tvimeo: {\n\t\t\t\tindex: 'vimeo.com/',\n\t\t\t\tid: '/',\n\t\t\t\tsrc: '//player.vimeo.com/video/%id%?autoplay=1'\n\t\t\t},\n\t\t\tgmaps: {\n\t\t\t\tindex: '//maps.google.',\n\t\t\t\tsrc: '%id%&output=embed'\n\t\t\t}\n\t\t}\n\t},\n\n\tproto: {\n\t\tinitIframe: function() {\n\t\t\tmfp.types.push(IFRAME_NS);\n\n\t\t\t_mfpOn('BeforeChange', function(e, prevType, newType) {\n\t\t\t\tif(prevType !== newType) {\n\t\t\t\t\tif(prevType === IFRAME_NS) {\n\t\t\t\t\t\t_fixIframeBugs(); // iframe if removed\n\t\t\t\t\t} else if(newType === IFRAME_NS) {\n\t\t\t\t\t\t_fixIframeBugs(true); // iframe is showing\n\t\t\t\t\t}\n\t\t\t\t}// else {\n\t\t\t\t\t// iframe source is switched, don't do anything\n\t\t\t\t//}\n\t\t\t});\n\n\t\t\t_mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function() {\n\t\t\t\t_fixIframeBugs();\n\t\t\t});\n\t\t},\n\n\t\tgetIframe: function(item, template) {\n\t\t\tvar embedSrc = item.src;\n\t\t\tvar iframeSt = mfp.st.iframe;\n\n\t\t\t$.each(iframeSt.patterns, function() {\n\t\t\t\tif(embedSrc.indexOf( this.index ) > -1) {\n\t\t\t\t\tif(this.id) {\n\t\t\t\t\t\tif(typeof this.id === 'string') {\n\t\t\t\t\t\t\tembedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id)+this.id.length, embedSrc.length);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tembedSrc = this.id.call( this, embedSrc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tembedSrc = this.src.replace('%id%', embedSrc );\n\t\t\t\t\treturn false; // break;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar dataObj = {};\n\t\t\tif(iframeSt.srcAction) {\n\t\t\t\tdataObj[iframeSt.srcAction] = embedSrc;\n\t\t\t}\n\t\t\tmfp._parseMarkup(template, dataObj, item);\n\n\t\t\tmfp.updateStatus('ready');\n\n\t\t\treturn template;\n\t\t}\n\t}\n});\n\n\n\n/*>>iframe*/\n\n/*>>gallery*/\n/**\n * Get looped index depending on number of slides\n */\nvar _getLoopedId = function(index) {\n\t\tvar numSlides = mfp.items.length;\n\t\tif(index > numSlides - 1) {\n\t\t\treturn index - numSlides;\n\t\t} else  if(index < 0) {\n\t\t\treturn numSlides + index;\n\t\t}\n\t\treturn index;\n\t},\n\t_replaceCurrTotal = function(text, curr, total) {\n\t\treturn text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);\n\t};\n\n$.magnificPopup.registerModule('gallery', {\n\n\toptions: {\n\t\tenabled: false,\n\t\tarrowMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-arrow mfp-arrow-%dir%\"></button>',\n\t\tpreload: [0,2],\n\t\tnavigateByImgClick: true,\n\t\tarrows: true,\n\n\t\ttPrev: 'Previous (Left arrow key)',\n\t\ttNext: 'Next (Right arrow key)',\n\t\ttCounter: '%curr% of %total%'\n\t},\n\n\tproto: {\n\t\tinitGallery: function() {\n\n\t\t\tvar gSt = mfp.st.gallery,\n\t\t\t\tns = '.mfp-gallery';\n\n\t\t\tmfp.direction = true; // true - next, false - prev\n\n\t\t\tif(!gSt || !gSt.enabled ) return false;\n\n\t\t\t_wrapClasses += ' mfp-gallery';\n\n\t\t\t_mfpOn(OPEN_EVENT+ns, function() {\n\n\t\t\t\tif(gSt.navigateByImgClick) {\n\t\t\t\t\tmfp.wrap.on('click'+ns, '.mfp-img', function() {\n\t\t\t\t\t\tif(mfp.items.length > 1) {\n\t\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t_document.on('keydown'+ns, function(e) {\n\t\t\t\t\tif (e.keyCode === 37) {\n\t\t\t\t\t\tmfp.prev();\n\t\t\t\t\t} else if (e.keyCode === 39) {\n\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t_mfpOn('UpdateStatus'+ns, function(e, data) {\n\t\t\t\tif(data.text) {\n\t\t\t\t\tdata.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_mfpOn(MARKUP_PARSE_EVENT+ns, function(e, element, values, item) {\n\t\t\t\tvar l = mfp.items.length;\n\t\t\t\tvalues.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';\n\t\t\t});\n\n\t\t\t_mfpOn('BuildControls' + ns, function() {\n\t\t\t\tif(mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {\n\t\t\t\t\tvar markup = gSt.arrowMarkup,\n\t\t\t\t\t\tarrowLeft = mfp.arrowLeft = $( markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, 'left') ).addClass(PREVENT_CLOSE_CLASS),\n\t\t\t\t\t\tarrowRight = mfp.arrowRight = $( markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, 'right') ).addClass(PREVENT_CLOSE_CLASS);\n\n\t\t\t\t\tarrowLeft.click(function() {\n\t\t\t\t\t\tmfp.prev();\n\t\t\t\t\t});\n\t\t\t\t\tarrowRight.click(function() {\n\t\t\t\t\t\tmfp.next();\n\t\t\t\t\t});\n\n\t\t\t\t\tmfp.container.append(arrowLeft.add(arrowRight));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_mfpOn(CHANGE_EVENT+ns, function() {\n\t\t\t\tif(mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);\n\n\t\t\t\tmfp._preloadTimeout = setTimeout(function() {\n\t\t\t\t\tmfp.preloadNearbyImages();\n\t\t\t\t\tmfp._preloadTimeout = null;\n\t\t\t\t}, 16);\n\t\t\t});\n\n\n\t\t\t_mfpOn(CLOSE_EVENT+ns, function() {\n\t\t\t\t_document.off(ns);\n\t\t\t\tmfp.wrap.off('click'+ns);\n\t\t\t\tmfp.arrowRight = mfp.arrowLeft = null;\n\t\t\t});\n\n\t\t},\n\t\tnext: function() {\n\t\t\tmfp.direction = true;\n\t\t\tmfp.index = _getLoopedId(mfp.index + 1);\n\t\t\tmfp.updateItemHTML();\n\t\t},\n\t\tprev: function() {\n\t\t\tmfp.direction = false;\n\t\t\tmfp.index = _getLoopedId(mfp.index - 1);\n\t\t\tmfp.updateItemHTML();\n\t\t},\n\t\tgoTo: function(newIndex) {\n\t\t\tmfp.direction = (newIndex >= mfp.index);\n\t\t\tmfp.index = newIndex;\n\t\t\tmfp.updateItemHTML();\n\t\t},\n\t\tpreloadNearbyImages: function() {\n\t\t\tvar p = mfp.st.gallery.preload,\n\t\t\t\tpreloadBefore = Math.min(p[0], mfp.items.length),\n\t\t\t\tpreloadAfter = Math.min(p[1], mfp.items.length),\n\t\t\t\ti;\n\n\t\t\tfor(i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {\n\t\t\t\tmfp._preloadItem(mfp.index+i);\n\t\t\t}\n\t\t\tfor(i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {\n\t\t\t\tmfp._preloadItem(mfp.index-i);\n\t\t\t}\n\t\t},\n\t\t_preloadItem: function(index) {\n\t\t\tindex = _getLoopedId(index);\n\n\t\t\tif(mfp.items[index].preloaded) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = mfp.items[index];\n\t\t\tif(!item.parsed) {\n\t\t\t\titem = mfp.parseEl( index );\n\t\t\t}\n\n\t\t\t_mfpTrigger('LazyLoad', item);\n\n\t\t\tif(item.type === 'image') {\n\t\t\t\titem.img = $('<img class=\"mfp-img\" />').on('load.mfploader', function() {\n\t\t\t\t\titem.hasSize = true;\n\t\t\t\t}).on('error.mfploader', function() {\n\t\t\t\t\titem.hasSize = true;\n\t\t\t\t\titem.loadError = true;\n\t\t\t\t\t_mfpTrigger('LazyLoadError', item);\n\t\t\t\t}).attr('src', item.src);\n\t\t\t}\n\n\n\t\t\titem.preloaded = true;\n\t\t}\n\t}\n});\n\n/*>>gallery*/\n\n/*>>retina*/\n\nvar RETINA_NS = 'retina';\n\n$.magnificPopup.registerModule(RETINA_NS, {\n\toptions: {\n\t\treplaceSrc: function(item) {\n\t\t\treturn item.src.replace(/\\.\\w+$/, function(m) { return '@2x' + m; });\n\t\t},\n\t\tratio: 1 // Function or number.  Set to 1 to disable.\n\t},\n\tproto: {\n\t\tinitRetina: function() {\n\t\t\tif(window.devicePixelRatio > 1) {\n\n\t\t\t\tvar st = mfp.st.retina,\n\t\t\t\t\tratio = st.ratio;\n\n\t\t\t\tratio = !isNaN(ratio) ? ratio : ratio();\n\n\t\t\t\tif(ratio > 1) {\n\t\t\t\t\t_mfpOn('ImageHasSize' + '.' + RETINA_NS, function(e, item) {\n\t\t\t\t\t\titem.img.css({\n\t\t\t\t\t\t\t'max-width': item.img[0].naturalWidth / ratio,\n\t\t\t\t\t\t\t'width': '100%'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t_mfpOn('ElementParse' + '.' + RETINA_NS, function(e, item) {\n\t\t\t\t\t\titem.src = st.replaceSrc(item, ratio);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n});\n\n/*>>retina*/\n _checkInstance(); }));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/buschidos/work/git/result/~/magnific-popup/dist/jquery.magnific-popup.js\n ** module id = 6\n ** module chunks = 0\n **/","/*\n\n Tooltipster 3.3.0 | 2014-11-08\n A rockin' custom tooltip jQuery plugin\n\n Developed by Caleb Jacob under the MIT license http://opensource.org/licenses/MIT\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n */\n\nmodule.exports = function initTooltipster($, window, document) {\n\n    var pluginName = \"tooltipster\",\n        defaults = {\n            animation: 'fade',\n            arrow: true,\n            arrowColor: '',\n            autoClose: true,\n            content: null,\n            contentAsHTML: false,\n            contentCloning: true,\n            debug: true,\n            delay: 200,\n            minWidth: 0,\n            maxWidth: null,\n            functionInit: function(origin, content) {},\n            functionBefore: function(origin, continueTooltip) {\n                continueTooltip();\n            },\n            functionReady: function(origin, tooltip) {},\n            functionAfter: function(origin) {},\n            hideOnClick: false,\n            icon: '(?)',\n            iconCloning: true,\n            iconDesktop: false,\n            iconTouch: false,\n            iconTheme: 'tooltipster-icon',\n            interactive: false,\n            interactiveTolerance: 350,\n            multiple: false,\n            offsetX: 0,\n            offsetY: 0,\n            onlyOne: false,\n            position: 'top',\n            positionTracker: false,\n            positionTrackerCallback: function(origin){\n                // the default tracker callback will close the tooltip when the trigger is\n                // 'hover' (see https://github.com/iamceege/tooltipster/pull/253)\n                if(this.option('trigger') == 'hover' && this.option('autoClose')) {\n                    this.hide();\n                }\n            },\n            restoration: 'current',\n            speed: 350,\n            timer: 0,\n            theme: 'tooltipster-default',\n            touchDevices: true,\n            trigger: 'hover',\n            updateAnimation: true\n        };\n\n    function Plugin(element, options) {\n\n        // list of instance variables\n\n        this.bodyOverflowX;\n        // stack of custom callbacks provided as parameters to API methods\n        this.callbacks = {\n            hide: [],\n            show: []\n        };\n        this.checkInterval = null;\n        // this will be the user content shown in the tooltip. A capital \"C\" is used because there is also a method called content()\n        this.Content;\n        // this is the original element which is being applied the tooltipster plugin\n        this.$el = $(element);\n        // this will be the element which triggers the appearance of the tooltip on hover/click/custom events.\n        // it will be the same as this.$el if icons are not used (see in the options), otherwise it will correspond to the created icon\n        this.$elProxy;\n        this.elProxyPosition;\n        this.enabled = true;\n        this.options = $.extend({}, defaults, options);\n        this.mouseIsOverProxy = false;\n        // a unique namespace per instance, for easy selective unbinding\n        this.namespace = 'tooltipster-'+ Math.round(Math.random()*100000);\n        // Status (capital S) can be either : appearing, shown, disappearing, hidden\n        this.Status = 'hidden';\n        this.timerHide = null;\n        this.timerShow = null;\n        // this will be the tooltip element (jQuery wrapped HTML element)\n        this.$tooltip;\n\n        // for backward compatibility\n        this.options.iconTheme = this.options.iconTheme.replace('.', '');\n        this.options.theme = this.options.theme.replace('.', '');\n\n        // launch\n\n        this._init();\n    }\n\n    Plugin.prototype = {\n\n        _init: function() {\n\n            var self = this;\n\n            // disable the plugin on old browsers (including IE7 and lower)\n            if (document.querySelector) {\n\n                // note : the content is null (empty) by default and can stay that way if the plugin remains initialized but not fed any content. The tooltip will just not appear.\n\n                // let's save the initial value of the title attribute for later restoration if need be.\n                var initialTitle = null;\n                // it will already have been saved in case of multiple tooltips\n                if (self.$el.data('tooltipster-initialTitle') === undefined) {\n\n                    initialTitle = self.$el.attr('title');\n\n                    // we do not want initialTitle to have the value \"undefined\" because of how jQuery's .data() method works\n                    if (initialTitle === undefined) initialTitle = null;\n\n                    self.$el.data('tooltipster-initialTitle', initialTitle);\n                }\n\n                // if content is provided in the options, its has precedence over the title attribute.\n                // Note : an empty string is considered content, only 'null' represents the absence of content.\n                // Also, an existing title=\"\" attribute will result in an empty string content\n                if (self.options.content !== null){\n                    self._content_set(self.options.content);\n                }\n                else {\n                    self._content_set(initialTitle);\n                }\n\n                var c = self.options.functionInit.call(self.$el, self.$el, self.Content);\n                if(typeof c !== 'undefined') self._content_set(c);\n\n                self.$el\n                    // strip the title off of the element to prevent the default tooltips from popping up\n                    .removeAttr('title')\n                    // to be able to find all instances on the page later (upon window events in particular)\n                    .addClass('tooltipstered');\n\n                // detect if we're changing the tooltip origin to an icon\n                // note about this condition : if the device has touch capability and self.options.iconTouch is false, you'll have no icons event though you may consider your device as a desktop if it also has a mouse. Not sure why someone would have this use case though.\n                if ((!deviceHasTouchCapability && self.options.iconDesktop) || (deviceHasTouchCapability && self.options.iconTouch)) {\n\n                    // TODO : the tooltip should be automatically be given an absolute position to be near the origin. Otherwise, when the origin is floating or what, it's going to be nowhere near it and disturb the position flow of the page elements. It will imply that the icon also detects when its origin moves, to follow it : not trivial.\n                    // Until it's done, the icon feature does not really make sense since the user still has most of the work to do by himself\n\n                    // if the icon provided is in the form of a string\n                    if(typeof self.options.icon === 'string'){\n                        // wrap it in a span with the icon class\n                        self.$elProxy = $('<span class=\"'+ self.options.iconTheme +'\"></span>');\n                        self.$elProxy.text(self.options.icon);\n                    }\n                    // if it is an object (sensible choice)\n                    else {\n                        // (deep) clone the object if iconCloning == true, to make sure every instance has its own proxy. We use the icon without wrapping, no need to. We do not give it a class either, as the user will undoubtedly style the object on his own and since our css properties may conflict with his own\n                        if (self.options.iconCloning) self.$elProxy = self.options.icon.clone(true);\n                        else self.$elProxy = self.options.icon;\n                    }\n\n                    self.$elProxy.insertAfter(self.$el);\n                }\n                else {\n                    self.$elProxy = self.$el;\n                }\n\n                // for 'click' and 'hover' triggers : bind on events to open the tooltip. Closing is now handled in _showNow() because of its bindings.\n                // Notes about touch events :\n                // - mouseenter, mouseleave and clicks happen even on pure touch devices because they are emulated. deviceIsPureTouch() is a simple attempt to detect them.\n                // - on hybrid devices, we do not prevent touch gesture from opening tooltips. It would be too complex to differentiate real mouse events from emulated ones.\n                // - we check deviceIsPureTouch() at each event rather than prior to binding because the situation may change during browsing\n                if (self.options.trigger == 'hover') {\n\n                    // these binding are for mouse interaction only\n                    self.$elProxy\n                        .on('mouseenter.'+ self.namespace, function() {\n                            if (!deviceIsPureTouch() || self.options.touchDevices) {\n                                self.mouseIsOverProxy = true;\n                                self._show();\n                            }\n                        })\n                        .on('mouseleave.'+ self.namespace, function() {\n                            if (!deviceIsPureTouch() || self.options.touchDevices) {\n                                self.mouseIsOverProxy = false;\n                            }\n                        });\n\n                    // for touch interaction only\n                    if (deviceHasTouchCapability && self.options.touchDevices) {\n\n                        // for touch devices, we immediately display the tooltip because we cannot rely on mouseleave to handle the delay\n                        self.$elProxy.on('touchstart.'+ self.namespace, function() {\n                            self._showNow();\n                        });\n                    }\n                }\n                else if (self.options.trigger == 'click') {\n\n                    // note : for touch devices, we do not bind on touchstart, we only rely on the emulated clicks (triggered by taps)\n                    self.$elProxy.on('click.'+ self.namespace, function() {\n                        if (!deviceIsPureTouch() || self.options.touchDevices) {\n                            self._show();\n                        }\n                    });\n                }\n            }\n        },\n\n        // this function will schedule the opening of the tooltip after the delay, if there is one\n        _show: function() {\n\n            var self = this;\n\n            if (self.Status != 'shown' && self.Status != 'appearing') {\n\n                if (self.options.delay) {\n                    self.timerShow = setTimeout(function(){\n\n                        // for hover trigger, we check if the mouse is still over the proxy, otherwise we do not show anything\n                        if (self.options.trigger == 'click' || (self.options.trigger == 'hover' && self.mouseIsOverProxy)) {\n                            self._showNow();\n                        }\n                    }, self.options.delay);\n                }\n                else self._showNow();\n            }\n        },\n\n        // this function will open the tooltip right away\n        _showNow: function(callback) {\n\n            var self = this;\n\n            // call our constructor custom function before continuing\n            self.options.functionBefore.call(self.$el, self.$el, function() {\n\n                // continue only if the tooltip is enabled and has any content\n                if (self.enabled && self.Content !== null) {\n\n                    // save the method callback and cancel hide method callbacks\n                    if (callback) self.callbacks.show.push(callback);\n                    self.callbacks.hide = [];\n\n                    //get rid of any appearance timer\n                    clearTimeout(self.timerShow);\n                    self.timerShow = null;\n                    clearTimeout(self.timerHide);\n                    self.timerHide = null;\n\n                    // if we only want one tooltip open at a time, close all auto-closing tooltips currently open and not already disappearing\n                    if (self.options.onlyOne) {\n                        $('.tooltipstered').not(self.$el).each(function(i,el) {\n\n                            var $el = $(el),\n                                nss = $el.data('tooltipster-ns');\n\n                            // iterate on all tooltips of the element\n                            $.each(nss, function(i, ns){\n                                var instance = $el.data(ns),\n                                    // we have to use the public methods here\n                                    s = instance.status(),\n                                    ac = instance.option('autoClose');\n\n                                if (s !== 'hidden' && s !== 'disappearing' && ac) {\n                                    instance.hide();\n                                }\n                            });\n                        });\n                    }\n\n                    var finish = function() {\n                        self.Status = 'shown';\n\n                        // trigger any show method custom callbacks and reset them\n                        $.each(self.callbacks.show, function(i,c) { c.call(self.$el); });\n                        self.callbacks.show = [];\n                    };\n\n                    // if this origin already has its tooltip open\n                    if (self.Status !== 'hidden') {\n\n                        // the timer (if any) will start (or restart) right now\n                        var extraTime = 0;\n\n                        // if it was disappearing, cancel that\n                        if (self.Status === 'disappearing') {\n\n                            self.Status = 'appearing';\n\n                            if (supportsTransitions()) {\n\n                                self.$tooltip\n                                    .clearQueue()\n                                    .removeClass('tooltipster-dying')\n                                    .addClass('tooltipster-'+ self.options.animation +'-show');\n\n                                if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);\n\n                                self.$tooltip.queue(finish);\n                            }\n                            else {\n                                // in case the tooltip was currently fading out, bring it back to life\n                                self.$tooltip\n                                    .stop()\n                                    .fadeIn(finish);\n                            }\n                        }\n                        // if the tooltip is already open, we still need to trigger the method custom callback\n                        else if(self.Status === 'shown') {\n                            finish();\n                        }\n                    }\n                    // if the tooltip isn't already open, open that sucker up!\n                    else {\n\n                        self.Status = 'appearing';\n\n                        // the timer (if any) will start when the tooltip has fully appeared after its transition\n                        var extraTime = self.options.speed;\n\n                        // disable horizontal scrollbar to keep overflowing tooltips from jacking with it and then restore it to its previous value\n                        self.bodyOverflowX = $('body').css('overflow-x');\n                        $('body').css('overflow-x', 'hidden');\n\n                        // get some other settings related to building the tooltip\n                        var animation = 'tooltipster-' + self.options.animation,\n                            animationSpeed = '-webkit-transition-duration: '+ self.options.speed +'ms; -webkit-animation-duration: '+ self.options.speed +'ms; -moz-transition-duration: '+ self.options.speed +'ms; -moz-animation-duration: '+ self.options.speed +'ms; -o-transition-duration: '+ self.options.speed +'ms; -o-animation-duration: '+ self.options.speed +'ms; -ms-transition-duration: '+ self.options.speed +'ms; -ms-animation-duration: '+ self.options.speed +'ms; transition-duration: '+ self.options.speed +'ms; animation-duration: '+ self.options.speed +'ms;',\n                            minWidth = self.options.minWidth ? 'min-width:'+ Math.round(self.options.minWidth) +'px;' : '',\n                            maxWidth = self.options.maxWidth ? 'max-width:'+ Math.round(self.options.maxWidth) +'px;' : '',\n                            pointerEvents = self.options.interactive ? 'pointer-events: auto;' : '';\n\n                        // build the base of our tooltip\n                        self.$tooltip = $('<div class=\"tooltipster-base '+ self.options.theme +'\" style=\"'+ minWidth +' '+ maxWidth +' '+ pointerEvents +' '+ animationSpeed +'\"><div class=\"tooltipster-content\"></div></div>');\n\n                        // only add the animation class if the user has a browser that supports animations\n                        if (supportsTransitions()) self.$tooltip.addClass(animation);\n\n                        // insert the content\n                        self._content_insert();\n\n                        // attach\n                        self.$tooltip.appendTo('body');\n\n                        // do all the crazy calculations and positioning\n                        self.reposition();\n\n                        // call our custom callback since the content of the tooltip is now part of the DOM\n                        self.options.functionReady.call(self.$el, self.$el, self.$tooltip);\n\n                        // animate in the tooltip\n                        if (supportsTransitions()) {\n\n                            self.$tooltip.addClass(animation + '-show');\n\n                            if(self.options.speed > 0) self.$tooltip.delay(self.options.speed);\n\n                            self.$tooltip.queue(finish);\n                        }\n                        else {\n                            self.$tooltip.css('display', 'none').fadeIn(self.options.speed, finish);\n                        }\n\n                        // will check if our tooltip origin is removed while the tooltip is shown\n                        self._interval_set();\n\n                        // reposition on scroll (otherwise position:fixed element's tooltips will move away form their origin) and on resize (in case position can/has to be changed)\n                        $(window).on('scroll.'+ self.namespace +' resize.'+ self.namespace, function() {\n                            self.reposition();\n                        });\n\n                        // auto-close bindings\n                        if (self.options.autoClose) {\n\n                            // in case a listener is already bound for autoclosing (mouse or touch, hover or click), unbind it first\n                            $('body').off('.'+ self.namespace);\n\n                            // here we'll have to set different sets of bindings for both touch and mouse\n                            if (self.options.trigger == 'hover') {\n\n                                // if the user touches the body, hide\n                                if (deviceHasTouchCapability) {\n                                    // timeout 0 : explanation below in click section\n                                    setTimeout(function() {\n                                        // we don't want to bind on click here because the initial touchstart event has not yet triggered its click event, which is thus about to happen\n                                        $('body').on('touchstart.'+ self.namespace, function() {\n                                            self.hide();\n                                        });\n                                    }, 0);\n                                }\n\n                                // if we have to allow interaction\n                                if (self.options.interactive) {\n\n                                    // touch events inside the tooltip must not close it\n                                    if (deviceHasTouchCapability) {\n                                        self.$tooltip.on('touchstart.'+ self.namespace, function(event) {\n                                            event.stopPropagation();\n                                        });\n                                    }\n\n                                    // as for mouse interaction, we get rid of the tooltip only after the mouse has spent some time out of it\n                                    var tolerance = null;\n\n                                    self.$elProxy.add(self.$tooltip)\n                                        // hide after some time out of the proxy and the tooltip\n                                        .on('mouseleave.'+ self.namespace + '-autoClose', function() {\n                                            clearTimeout(tolerance);\n                                            tolerance = setTimeout(function(){\n                                                self.hide();\n                                            }, self.options.interactiveTolerance);\n                                        })\n                                        // suspend timeout when the mouse is over the proxy or the tooltip\n                                        .on('mouseenter.'+ self.namespace + '-autoClose', function() {\n                                            clearTimeout(tolerance);\n                                        });\n                                }\n                                // if this is a non-interactive tooltip, get rid of it if the mouse leaves\n                                else {\n                                    self.$elProxy.on('mouseleave.'+ self.namespace + '-autoClose', function() {\n                                        self.hide();\n                                    });\n                                }\n\n                                // close the tooltip when the proxy gets a click (common behavior of native tooltips)\n                                if (self.options.hideOnClick) {\n\n                                    self.$elProxy.on('click.'+ self.namespace + '-autoClose', function() {\n                                        self.hide();\n                                    });\n                                }\n                            }\n                            // here we'll set the same bindings for both clicks and touch on the body to hide the tooltip\n                            else if(self.options.trigger == 'click'){\n\n                                // use a timeout to prevent immediate closing if the method was called on a click event and if options.delay == 0 (because of bubbling)\n                                setTimeout(function() {\n                                    $('body').on('click.'+ self.namespace +' touchstart.'+ self.namespace, function() {\n                                        self.hide();\n                                    });\n                                }, 0);\n\n                                // if interactive, we'll stop the events that were emitted from inside the tooltip to stop autoClosing\n                                if (self.options.interactive) {\n\n                                    // note : the touch events will just not be used if the plugin is not enabled on touch devices\n                                    self.$tooltip.on('click.'+ self.namespace +' touchstart.'+ self.namespace, function(event) {\n                                        event.stopPropagation();\n                                    });\n                                }\n                            }\n                        }\n                    }\n\n                    // if we have a timer set, let the countdown begin\n                    if (self.options.timer > 0) {\n\n                        self.timerHide = setTimeout(function() {\n                            self.timerHide = null;\n                            self.hide();\n                        }, self.options.timer + extraTime);\n                    }\n                }\n            });\n        },\n\n        _interval_set: function() {\n\n            var self = this;\n\n            self.checkInterval = setInterval(function() {\n\n                // if the tooltip and/or its interval should be stopped\n                if (\n                    // if the origin has been removed\n                $('body').find(self.$el).length === 0\n                // if the elProxy has been removed\n                ||\t$('body').find(self.$elProxy).length === 0\n                // if the tooltip has been closed\n                ||\tself.Status == 'hidden'\n                // if the tooltip has somehow been removed\n                ||\t$('body').find(self.$tooltip).length === 0\n                ) {\n                    // remove the tooltip if it's still here\n                    if (self.Status == 'shown' || self.Status == 'appearing') self.hide();\n\n                    // clear this interval as it is no longer necessary\n                    self._interval_cancel();\n                }\n                // if everything is alright\n                else {\n                    // compare the former and current positions of the elProxy to reposition the tooltip if need be\n                    if(self.options.positionTracker){\n\n                        var p = self._repositionInfo(self.$elProxy),\n                            identical = false;\n\n                        // compare size first (a change requires repositioning too)\n                        if(areEqual(p.dimension, self.elProxyPosition.dimension)){\n\n                            // for elements with a fixed position, we track the top and left properties (relative to window)\n                            if(self.$elProxy.css('position') === 'fixed'){\n                                if(areEqual(p.position, self.elProxyPosition.position)) identical = true;\n                            }\n                            // otherwise, track total offset (relative to document)\n                            else {\n                                if(areEqual(p.offset, self.elProxyPosition.offset)) identical = true;\n                            }\n                        }\n\n                        if(!identical){\n                            self.reposition();\n                            self.options.positionTrackerCallback.call(self, self.$el);\n                        }\n                    }\n                }\n            }, 200);\n        },\n\n        _interval_cancel: function() {\n            clearInterval(this.checkInterval);\n            // clean delete\n            this.checkInterval = null;\n        },\n\n        _content_set: function(content) {\n            // clone if asked. Cloning the object makes sure that each instance has its own version of the content (in case a same object were provided for several instances)\n            // reminder : typeof null === object\n            if (typeof content === 'object' && content !== null && this.options.contentCloning) {\n                content = content.clone(true);\n            }\n            this.Content = content;\n        },\n\n        _content_insert: function() {\n\n            var self = this,\n                $d = this.$tooltip.find('.tooltipster-content');\n\n            if (typeof self.Content === 'string' && !self.options.contentAsHTML) {\n                $d.text(self.Content);\n            }\n            else {\n                $d\n                    .empty()\n                    .append(self.Content);\n            }\n        },\n\n        _update: function(content) {\n\n            var self = this;\n\n            // change the content\n            self._content_set(content);\n\n            if (self.Content !== null) {\n\n                // update the tooltip if it is open\n                if (self.Status !== 'hidden') {\n\n                    // reset the content in the tooltip\n                    self._content_insert();\n\n                    // reposition and resize the tooltip\n                    self.reposition();\n\n                    // if we want to play a little animation showing the content changed\n                    if (self.options.updateAnimation) {\n\n                        if (supportsTransitions()) {\n\n                            self.$tooltip.css({\n                                'width': '',\n                                '-webkit-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n                                '-moz-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n                                '-o-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n                                '-ms-transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms',\n                                'transition': 'all ' + self.options.speed + 'ms, width 0ms, height 0ms, left 0ms, top 0ms'\n                            }).addClass('tooltipster-content-changing');\n\n                            // reset the CSS transitions and finish the change animation\n                            setTimeout(function() {\n\n                                if(self.Status != 'hidden'){\n\n                                    self.$tooltip.removeClass('tooltipster-content-changing');\n\n                                    // after the changing animation has completed, reset the CSS transitions\n                                    setTimeout(function() {\n\n                                        if(self.Status !== 'hidden'){\n                                            self.$tooltip.css({\n                                                '-webkit-transition': self.options.speed + 'ms',\n                                                '-moz-transition': self.options.speed + 'ms',\n                                                '-o-transition': self.options.speed + 'ms',\n                                                '-ms-transition': self.options.speed + 'ms',\n                                                'transition': self.options.speed + 'ms'\n                                            });\n                                        }\n                                    }, self.options.speed);\n                                }\n                            }, self.options.speed);\n                        }\n                        else {\n                            self.$tooltip.fadeTo(self.options.speed, 0.5, function() {\n                                if(self.Status != 'hidden'){\n                                    self.$tooltip.fadeTo(self.options.speed, 1);\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n            else {\n                self.hide();\n            }\n        },\n\n        _repositionInfo: function($el) {\n            return {\n                dimension: {\n                    height: $el.outerHeight(false),\n                    width: $el.outerWidth(false)\n                },\n                offset: $el.offset(),\n                position: {\n                    left: parseInt($el.css('left')),\n                    top: parseInt($el.css('top'))\n                }\n            };\n        },\n\n        hide: function(callback) {\n\n            var self = this;\n\n            // save the method custom callback and cancel any show method custom callbacks\n            if (callback) self.callbacks.hide.push(callback);\n            self.callbacks.show = [];\n\n            // get rid of any appearance timeout\n            clearTimeout(self.timerShow);\n            self.timerShow = null;\n            clearTimeout(self.timerHide);\n            self.timerHide = null;\n\n            var finishCallbacks = function() {\n                // trigger any hide method custom callbacks and reset them\n                $.each(self.callbacks.hide, function(i,c) { c.call(self.$el); });\n                self.callbacks.hide = [];\n            };\n\n            // hide\n            if (self.Status == 'shown' || self.Status == 'appearing') {\n\n                self.Status = 'disappearing';\n\n                var finish = function() {\n\n                    self.Status = 'hidden';\n\n                    // detach our content object first, so the next jQuery's remove() call does not unbind its event handlers\n                    if (typeof self.Content == 'object' && self.Content !== null) {\n                        self.Content.detach();\n                    }\n\n                    self.$tooltip.remove();\n                    self.$tooltip = null;\n\n                    // unbind orientationchange, scroll and resize listeners\n                    $(window).off('.'+ self.namespace);\n\n                    $('body')\n                    // unbind any auto-closing click/touch listeners\n                        .off('.'+ self.namespace)\n                        .css('overflow-x', self.bodyOverflowX);\n\n                    // unbind any auto-closing click/touch listeners\n                    $('body').off('.'+ self.namespace);\n\n                    // unbind any auto-closing hover listeners\n                    self.$elProxy.off('.'+ self.namespace + '-autoClose');\n\n                    // call our constructor custom callback function\n                    self.options.functionAfter.call(self.$el, self.$el);\n\n                    // call our method custom callbacks functions\n                    finishCallbacks();\n                };\n\n                if (supportsTransitions()) {\n\n                    self.$tooltip\n                        .clearQueue()\n                        .removeClass('tooltipster-' + self.options.animation + '-show')\n                        // for transitions only\n                        .addClass('tooltipster-dying');\n\n                    if(self.options.speed > 0) self.$tooltip.delay(self.options.speed);\n\n                    self.$tooltip.queue(finish);\n                }\n                else {\n                    self.$tooltip\n                        .stop()\n                        .fadeOut(self.options.speed, finish);\n                }\n            }\n            // if the tooltip is already hidden, we still need to trigger the method custom callback\n            else if(self.Status == 'hidden') {\n                finishCallbacks();\n            }\n\n            return self;\n        },\n\n        // the public show() method is actually an alias for the private showNow() method\n        show: function(callback) {\n            this._showNow(callback);\n            return this;\n        },\n\n        // 'update' is deprecated in favor of 'content' but is kept for backward compatibility\n        update: function(c) {\n            return this.content(c);\n        },\n        content: function(c) {\n            // getter method\n            if(typeof c === 'undefined'){\n                return this.Content;\n            }\n            // setter method\n            else {\n                this._update(c);\n                return this;\n            }\n        },\n\n        reposition: function() {\n\n            var self = this;\n\n            // in case the tooltip has been removed from DOM manually\n            if ($('body').find(self.$tooltip).length !== 0) {\n\n                // reset width\n                self.$tooltip.css('width', '');\n\n                // find variables to determine placement\n                self.elProxyPosition = self._repositionInfo(self.$elProxy);\n                var arrowReposition = null,\n                    windowWidth = $(window).width(),\n                    // shorthand\n                    proxy = self.elProxyPosition,\n                    tooltipWidth = self.$tooltip.outerWidth(false),\n                    tooltipInnerWidth = self.$tooltip.innerWidth() + 1, // this +1 stops FireFox from sometimes forcing an additional text line\n                    tooltipHeight = self.$tooltip.outerHeight(false);\n\n                // if this is an <area> tag inside a <map>, all hell breaks loose. Recalculate all the measurements based on coordinates\n                if (self.$elProxy.is('area')) {\n                    var areaShape = self.$elProxy.attr('shape'),\n                        mapName = self.$elProxy.parent().attr('name'),\n                        map = $('img[usemap=\"#'+ mapName +'\"]'),\n                        mapOffsetLeft = map.offset().left,\n                        mapOffsetTop = map.offset().top,\n                        areaMeasurements = self.$elProxy.attr('coords') !== undefined ? self.$elProxy.attr('coords').split(',') : undefined;\n\n                    if (areaShape == 'circle') {\n                        var areaLeft = parseInt(areaMeasurements[0]),\n                            areaTop = parseInt(areaMeasurements[1]),\n                            areaWidth = parseInt(areaMeasurements[2]);\n                        proxy.dimension.height = areaWidth * 2;\n                        proxy.dimension.width = areaWidth * 2;\n                        proxy.offset.top = mapOffsetTop + areaTop - areaWidth;\n                        proxy.offset.left = mapOffsetLeft + areaLeft - areaWidth;\n                    }\n                    else if (areaShape == 'rect') {\n                        var areaLeft = parseInt(areaMeasurements[0]),\n                            areaTop = parseInt(areaMeasurements[1]),\n                            areaRight = parseInt(areaMeasurements[2]),\n                            areaBottom = parseInt(areaMeasurements[3]);\n                        proxy.dimension.height = areaBottom - areaTop;\n                        proxy.dimension.width = areaRight - areaLeft;\n                        proxy.offset.top = mapOffsetTop + areaTop;\n                        proxy.offset.left = mapOffsetLeft + areaLeft;\n                    }\n                    else if (areaShape == 'poly') {\n                        var areaXs = [],\n                            areaYs = [],\n                            areaSmallestX = 0,\n                            areaSmallestY = 0,\n                            areaGreatestX = 0,\n                            areaGreatestY = 0,\n                            arrayAlternate = 'even';\n\n                        for (var i = 0; i < areaMeasurements.length; i++) {\n                            var areaNumber = parseInt(areaMeasurements[i]);\n\n                            if (arrayAlternate == 'even') {\n                                if (areaNumber > areaGreatestX) {\n                                    areaGreatestX = areaNumber;\n                                    if (i === 0) {\n                                        areaSmallestX = areaGreatestX;\n                                    }\n                                }\n\n                                if (areaNumber < areaSmallestX) {\n                                    areaSmallestX = areaNumber;\n                                }\n\n                                arrayAlternate = 'odd';\n                            }\n                            else {\n                                if (areaNumber > areaGreatestY) {\n                                    areaGreatestY = areaNumber;\n                                    if (i == 1) {\n                                        areaSmallestY = areaGreatestY;\n                                    }\n                                }\n\n                                if (areaNumber < areaSmallestY) {\n                                    areaSmallestY = areaNumber;\n                                }\n\n                                arrayAlternate = 'even';\n                            }\n                        }\n\n                        proxy.dimension.height = areaGreatestY - areaSmallestY;\n                        proxy.dimension.width = areaGreatestX - areaSmallestX;\n                        proxy.offset.top = mapOffsetTop + areaSmallestY;\n                        proxy.offset.left = mapOffsetLeft + areaSmallestX;\n                    }\n                    else {\n                        proxy.dimension.height = map.outerHeight(false);\n                        proxy.dimension.width = map.outerWidth(false);\n                        proxy.offset.top = mapOffsetTop;\n                        proxy.offset.left = mapOffsetLeft;\n                    }\n                }\n\n                // our function and global vars for positioning our tooltip\n                var myLeft = 0,\n                    myLeftMirror = 0,\n                    myTop = 0,\n                    offsetY = parseInt(self.options.offsetY),\n                    offsetX = parseInt(self.options.offsetX),\n                    // this is the arrow position that will eventually be used. It may differ from the position option if the tooltip cannot be displayed in this position\n                    practicalPosition = self.options.position;\n\n                // a function to detect if the tooltip is going off the screen horizontally. If so, reposition the crap out of it!\n                function dontGoOffScreenX() {\n\n                    var windowLeft = $(window).scrollLeft();\n\n                    // if the tooltip goes off the left side of the screen, line it up with the left side of the window\n                    if((myLeft - windowLeft) < 0) {\n                        arrowReposition = myLeft - windowLeft;\n                        myLeft = windowLeft;\n                    }\n\n                    // if the tooltip goes off the right of the screen, line it up with the right side of the window\n                    if (((myLeft + tooltipWidth) - windowLeft) > windowWidth) {\n                        arrowReposition = myLeft - ((windowWidth + windowLeft) - tooltipWidth);\n                        myLeft = (windowWidth + windowLeft) - tooltipWidth;\n                    }\n                }\n\n                // a function to detect if the tooltip is going off the screen vertically. If so, switch to the opposite!\n                function dontGoOffScreenY(switchTo, switchFrom) {\n                    // if it goes off the top off the page\n                    if(((proxy.offset.top - $(window).scrollTop() - tooltipHeight - offsetY - 12) < 0) && (switchFrom.indexOf('top') > -1)) {\n                        practicalPosition = switchTo;\n                    }\n\n                    // if it goes off the bottom of the page\n                    if (((proxy.offset.top + proxy.dimension.height + tooltipHeight + 12 + offsetY) > ($(window).scrollTop() + $(window).height())) && (switchFrom.indexOf('bottom') > -1)) {\n                        practicalPosition = switchTo;\n                        myTop = (proxy.offset.top - tooltipHeight) - offsetY - 12;\n                    }\n                }\n\n                if(practicalPosition == 'top') {\n                    var leftDifference = (proxy.offset.left + tooltipWidth) - (proxy.offset.left + proxy.dimension.width);\n                    myLeft = (proxy.offset.left + offsetX) - (leftDifference / 2);\n                    myTop = (proxy.offset.top - tooltipHeight) - offsetY - 12;\n                    dontGoOffScreenX();\n                    dontGoOffScreenY('bottom', 'top');\n                }\n\n                if(practicalPosition == 'top-left') {\n                    myLeft = proxy.offset.left + offsetX;\n                    myTop = (proxy.offset.top - tooltipHeight) - offsetY - 12;\n                    dontGoOffScreenX();\n                    dontGoOffScreenY('bottom-left', 'top-left');\n                }\n\n                if(practicalPosition == 'top-right') {\n                    myLeft = (proxy.offset.left + proxy.dimension.width + offsetX) - tooltipWidth;\n                    myTop = (proxy.offset.top - tooltipHeight) - offsetY - 12;\n                    dontGoOffScreenX();\n                    dontGoOffScreenY('bottom-right', 'top-right');\n                }\n\n                if(practicalPosition == 'bottom') {\n                    var leftDifference = (proxy.offset.left + tooltipWidth) - (proxy.offset.left + proxy.dimension.width);\n                    myLeft = proxy.offset.left - (leftDifference / 2) + offsetX;\n                    myTop = (proxy.offset.top + proxy.dimension.height) + offsetY + 12;\n                    dontGoOffScreenX();\n                    dontGoOffScreenY('top', 'bottom');\n                }\n\n                if(practicalPosition == 'bottom-left') {\n                    myLeft = proxy.offset.left + offsetX;\n                    myTop = (proxy.offset.top + proxy.dimension.height) + offsetY + 12;\n                    dontGoOffScreenX();\n                    dontGoOffScreenY('top-left', 'bottom-left');\n                }\n\n                if(practicalPosition == 'bottom-right') {\n                    myLeft = (proxy.offset.left + proxy.dimension.width + offsetX) - tooltipWidth;\n                    myTop = (proxy.offset.top + proxy.dimension.height) + offsetY + 12;\n                    dontGoOffScreenX();\n                    dontGoOffScreenY('top-right', 'bottom-right');\n                }\n\n                if(practicalPosition == 'left') {\n                    myLeft = proxy.offset.left - offsetX - tooltipWidth - 12;\n                    myLeftMirror = proxy.offset.left + offsetX + proxy.dimension.width + 12;\n                    var topDifference = (proxy.offset.top + tooltipHeight) - (proxy.offset.top + proxy.dimension.height);\n                    myTop = proxy.offset.top - (topDifference / 2) - offsetY;\n\n                    // if the tooltip goes off boths sides of the page\n                    if((myLeft < 0) && ((myLeftMirror + tooltipWidth) > windowWidth)) {\n                        var borderWidth = parseFloat(self.$tooltip.css('border-width')) * 2,\n                            newWidth = (tooltipWidth + myLeft) - borderWidth;\n                        self.$tooltip.css('width', newWidth + 'px');\n\n                        tooltipHeight = self.$tooltip.outerHeight(false);\n                        myLeft = proxy.offset.left - offsetX - newWidth - 12 - borderWidth;\n                        topDifference = (proxy.offset.top + tooltipHeight) - (proxy.offset.top + proxy.dimension.height);\n                        myTop = proxy.offset.top - (topDifference / 2) - offsetY;\n                    }\n\n                    // if it only goes off one side, flip it to the other side\n                    else if(myLeft < 0) {\n                        myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12;\n                        arrowReposition = 'left';\n                    }\n                }\n\n                if(practicalPosition == 'right') {\n                    myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12;\n                    myLeftMirror = proxy.offset.left - offsetX - tooltipWidth - 12;\n                    var topDifference = (proxy.offset.top + tooltipHeight) - (proxy.offset.top + proxy.dimension.height);\n                    myTop = proxy.offset.top - (topDifference / 2) - offsetY;\n\n                    // if the tooltip goes off boths sides of the page\n                    if(((myLeft + tooltipWidth) > windowWidth) && (myLeftMirror < 0)) {\n                        var borderWidth = parseFloat(self.$tooltip.css('border-width')) * 2,\n                            newWidth = (windowWidth - myLeft) - borderWidth;\n                        self.$tooltip.css('width', newWidth + 'px');\n\n                        tooltipHeight = self.$tooltip.outerHeight(false);\n                        topDifference = (proxy.offset.top + tooltipHeight) - (proxy.offset.top + proxy.dimension.height);\n                        myTop = proxy.offset.top - (topDifference / 2) - offsetY;\n                    }\n\n                    // if it only goes off one side, flip it to the other side\n                    else if((myLeft + tooltipWidth) > windowWidth) {\n                        myLeft = proxy.offset.left - offsetX - tooltipWidth - 12;\n                        arrowReposition = 'right';\n                    }\n                }\n\n                // if arrow is set true, style it and append it\n                if (self.options.arrow) {\n\n                    var arrowClass = 'tooltipster-arrow-' + practicalPosition;\n\n                    // set color of the arrow\n                    if(self.options.arrowColor.length < 1) {\n                        var arrowColor = self.$tooltip.css('background-color');\n                    }\n                    else {\n                        var arrowColor = self.options.arrowColor;\n                    }\n\n                    // if the tooltip was going off the page and had to re-adjust, we need to update the arrow's position\n                    if (!arrowReposition) {\n                        arrowReposition = '';\n                    }\n                    else if (arrowReposition == 'left') {\n                        arrowClass = 'tooltipster-arrow-right';\n                        arrowReposition = '';\n                    }\n                    else if (arrowReposition == 'right') {\n                        arrowClass = 'tooltipster-arrow-left';\n                        arrowReposition = '';\n                    }\n                    else {\n                        arrowReposition = 'left:'+ Math.round(arrowReposition) +'px;';\n                    }\n\n                    // building the logic to create the border around the arrow of the tooltip\n                    if ((practicalPosition == 'top') || (practicalPosition == 'top-left') || (practicalPosition == 'top-right')) {\n                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-bottom-width')),\n                            tooltipBorderColor = self.$tooltip.css('border-bottom-color');\n                    }\n                    else if ((practicalPosition == 'bottom') || (practicalPosition == 'bottom-left') || (practicalPosition == 'bottom-right')) {\n                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-top-width')),\n                            tooltipBorderColor = self.$tooltip.css('border-top-color');\n                    }\n                    else if (practicalPosition == 'left') {\n                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-right-width')),\n                            tooltipBorderColor = self.$tooltip.css('border-right-color');\n                    }\n                    else if (practicalPosition == 'right') {\n                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-left-width')),\n                            tooltipBorderColor = self.$tooltip.css('border-left-color');\n                    }\n                    else {\n                        var tooltipBorderWidth = parseFloat(self.$tooltip.css('border-bottom-width')),\n                            tooltipBorderColor = self.$tooltip.css('border-bottom-color');\n                    }\n\n                    if (tooltipBorderWidth > 1) {\n                        tooltipBorderWidth++;\n                    }\n\n                    var arrowBorder = '';\n                    if (tooltipBorderWidth !== 0) {\n                        var arrowBorderSize = '',\n                            arrowBorderColor = 'border-color: '+ tooltipBorderColor +';';\n                        if (arrowClass.indexOf('bottom') !== -1) {\n                            arrowBorderSize = 'margin-top: -'+ Math.round(tooltipBorderWidth) +'px;';\n                        }\n                        else if (arrowClass.indexOf('top') !== -1) {\n                            arrowBorderSize = 'margin-bottom: -'+ Math.round(tooltipBorderWidth) +'px;';\n                        }\n                        else if (arrowClass.indexOf('left') !== -1) {\n                            arrowBorderSize = 'margin-right: -'+ Math.round(tooltipBorderWidth) +'px;';\n                        }\n                        else if (arrowClass.indexOf('right') !== -1) {\n                            arrowBorderSize = 'margin-left: -'+ Math.round(tooltipBorderWidth) +'px;';\n                        }\n                        arrowBorder = '<span class=\"tooltipster-arrow-border\" style=\"'+ arrowBorderSize +' '+ arrowBorderColor +';\"></span>';\n                    }\n\n                    // if the arrow already exists, remove and replace it\n                    self.$tooltip.find('.tooltipster-arrow').remove();\n\n                    // build out the arrow and append it\n                    var arrowConstruct = '<div class=\"'+ arrowClass +' tooltipster-arrow\" style=\"'+ arrowReposition +'\">'+ arrowBorder +'<span style=\"border-color:'+ arrowColor +';\"></span></div>';\n                    self.$tooltip.append(arrowConstruct);\n                }\n\n                // position the tooltip\n                self.$tooltip.css({'top': Math.round(myTop) + 'px', 'left': Math.round(myLeft) + 'px'});\n            }\n\n            return self;\n        },\n\n        enable: function() {\n            this.enabled = true;\n            return this;\n        },\n\n        disable: function() {\n            // hide first, in case the tooltip would not disappear on its own (autoClose false)\n            this.hide();\n            this.enabled = false;\n            return this;\n        },\n\n        destroy: function() {\n\n            var self = this;\n\n            self.hide();\n\n            // remove the icon, if any\n            if (self.$el[0] !== self.$elProxy[0]) {\n                self.$elProxy.remove();\n            }\n\n            self.$el\n                .removeData(self.namespace)\n                .off('.'+ self.namespace);\n\n            var ns = self.$el.data('tooltipster-ns');\n\n            // if there are no more tooltips on this element\n            if(ns.length === 1){\n\n                // optional restoration of a title attribute\n                var title = null;\n                if (self.options.restoration === 'previous'){\n                    title = self.$el.data('tooltipster-initialTitle');\n                }\n                else if(self.options.restoration === 'current'){\n\n                    // old school technique to stringify when outerHTML is not supported\n                    title =\n                        (typeof self.Content === 'string') ?\n                        self.Content :\n                        $('<div></div>').append(self.Content).html();\n                }\n\n                if (title) {\n                    self.$el.attr('title', title);\n                }\n\n                // final cleaning\n                self.$el\n                    .removeClass('tooltipstered')\n                    .removeData('tooltipster-ns')\n                    .removeData('tooltipster-initialTitle');\n            }\n            else {\n                // remove the instance namespace from the list of namespaces of tooltips present on the element\n                ns = $.grep(ns, function(el, i){\n                    return el !== self.namespace;\n                });\n                self.$el.data('tooltipster-ns', ns);\n            }\n\n            return self;\n        },\n\n        elementIcon: function() {\n            return (this.$el[0] !== this.$elProxy[0]) ? this.$elProxy[0] : undefined;\n        },\n\n        elementTooltip: function() {\n            return this.$tooltip ? this.$tooltip[0] : undefined;\n        },\n\n        // public methods but for internal use only\n        // getter if val is ommitted, setter otherwise\n        option: function(o, val) {\n            if (typeof val == 'undefined') return this.options[o];\n            else {\n                this.options[o] = val;\n                return this;\n            }\n        },\n        status: function() {\n            return this.Status;\n        }\n    };\n\n    $.fn[pluginName] = function () {\n\n        // for using in closures\n        var args = arguments;\n\n        // if we are not in the context of jQuery wrapped HTML element(s) :\n        // this happens when calling static methods in the form $.fn.tooltipster('methodName'), or when calling $(sel).tooltipster('methodName or options') where $(sel) does not match anything\n        if (this.length === 0) {\n\n            // if the first argument is a method name\n            if (typeof args[0] === 'string') {\n\n                var methodIsStatic = true;\n\n                // list static methods here (usable by calling $.fn.tooltipster('methodName');)\n                switch (args[0]) {\n\n                    case 'setDefaults':\n                        // change default options for all future instances\n                        $.extend(defaults, args[1]);\n                        break;\n\n                    default:\n                        methodIsStatic = false;\n                        break;\n                }\n\n                // $.fn.tooltipster('methodName') calls will return true\n                if (methodIsStatic) return true;\n                // $(sel).tooltipster('methodName') calls will return the list of objects event though it's empty because chaining should work on empty lists\n                else return this;\n            }\n            // the first argument is undefined or an object of options : we are initalizing but there is no element matched by selector\n            else {\n                // still chainable : same as above\n                return this;\n            }\n        }\n        // this happens when calling $(sel).tooltipster('methodName or options') where $(sel) matches one or more elements\n        else {\n\n            // method calls\n            if (typeof args[0] === 'string') {\n\n                var v = '#*$~&';\n\n                this.each(function() {\n\n                    // retrieve the namepaces of the tooltip(s) that exist on that element. We will interact with the first tooltip only.\n                    var ns = $(this).data('tooltipster-ns'),\n                        // self represents the instance of the first tooltipster plugin associated to the current HTML object of the loop\n                        self = ns ? $(this).data(ns[0]) : null;\n\n                    // if the current element holds a tooltipster instance\n                    if (self) {\n\n                        if (typeof self[args[0]] === 'function') {\n                            // note : args[1] and args[2] may not be defined\n                            var resp = self[args[0]](args[1], args[2]);\n                        }\n                        else {\n                            throw new Error('Unknown method .tooltipster(\"' + args[0] + '\")');\n                        }\n\n                        // if the function returned anything other than the instance itself (which implies chaining)\n                        if (resp !== self){\n                            v = resp;\n                            // return false to stop .each iteration on the first element matched by the selector\n                            return false;\n                        }\n                    }\n                    else {\n                        throw new Error('You called Tooltipster\\'s \"' + args[0] + '\" method on an uninitialized element');\n                    }\n                });\n\n                return (v !== '#*$~&') ? v : this;\n            }\n            // first argument is undefined or an object : the tooltip is initializing\n            else {\n\n                var instances = [],\n                    // is there a defined value for the multiple option in the options object ?\n                    multipleIsSet = args[0] && typeof args[0].multiple !== 'undefined',\n                    // if the multiple option is set to true, or if it's not defined but set to true in the defaults\n                    multiple = (multipleIsSet && args[0].multiple) || (!multipleIsSet && defaults.multiple),\n                    // same for debug\n                    debugIsSet = args[0] && typeof args[0].debug !== 'undefined',\n                    debug = (debugIsSet && args[0].debug) || (!debugIsSet && defaults.debug);\n\n                // initialize a tooltipster instance for each element if it doesn't already have one or if the multiple option is set, and attach the object to it\n                this.each(function () {\n\n                    var go = false,\n                        ns = $(this).data('tooltipster-ns'),\n                        instance = null;\n\n                    if (!ns) {\n                        go = true;\n                    }\n                    else if (multiple) {\n                        go = true;\n                    }\n                    else if (debug) {\n                        console.log('Tooltipster: one or more tooltips are already attached to this element: ignoring. Use the \"multiple\" option to attach more tooltips.');\n                    }\n\n                    if (go) {\n                        instance = new Plugin(this, args[0]);\n\n                        // save the reference of the new instance\n                        if (!ns) ns = [];\n                        ns.push(instance.namespace);\n                        $(this).data('tooltipster-ns', ns)\n\n                        // save the instance itself\n                        $(this).data(instance.namespace, instance);\n                    }\n\n                    instances.push(instance);\n                });\n\n                if (multiple) return instances;\n                else return this;\n            }\n        }\n    };\n\n    // quick & dirty compare function (not bijective nor multidimensional)\n    function areEqual(a,b) {\n        var same = true;\n        $.each(a, function(i, el){\n            if(typeof b[i] === 'undefined' || a[i] !== b[i]){\n                same = false;\n                return false;\n            }\n        });\n        return same;\n    }\n\n    // detect if this device can trigger touch events\n    var deviceHasTouchCapability = !!('ontouchstart' in window);\n\n    // we'll assume the device has no mouse until we detect any mouse movement\n    var deviceHasMouse = false;\n    $('body').one('mousemove', function() {\n        deviceHasMouse = true;\n    });\n\n    function deviceIsPureTouch() {\n        return (!deviceHasMouse && deviceHasTouchCapability);\n    }\n\n    // detecting support for CSS transitions\n    function supportsTransitions() {\n        var b = document.body || document.documentElement,\n            s = b.style,\n            p = 'transition';\n\n        if(typeof s[p] == 'string') {return true; }\n\n        v = ['Moz', 'Webkit', 'Khtml', 'O', 'ms'],\n            p = p.charAt(0).toUpperCase() + p.substr(1);\n        for(var i=0; i<v.length; i++) {\n            if(typeof s[v[i] + p] == 'string') { return true; }\n        }\n        return false;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/tooltipster.js\n **/","import $ from 'jquery';\nimport noUiSlider from 'nouislider';\n\n(() => {\n\n    const container = $('.calc');\n\n    if (!container.length) return;\n\n    const root               = $('body');\n    const sliderContainer    = container.find('.slider');\n    const slider             = sliderContainer.find('.slider__base');\n    const sliderValue        = sliderContainer.find('.slider__value')[0].firstChild;\n    const totalValue         = container.find('.calc__result');\n    const stowage            = container.find('input[name=\"stowage\"]');\n    const reserve            = container.find('input[name=\"reserve\"]');\n\n    const initialValue       = 24;\n    const CAPACITY           = container.find('input[name=\"capacity\"]').val() || 1.75;\n    const { min, max, init } = slider.data();\n\n    let space                = init || initialValue;\n    let timeout              = null;\n\n\n    noUiSlider.create(slider[0], {\n        start: init || initialValue,\n        range: {\n            min: min || 0,\n            max: max || 100\n        }\n    });\n\n    calculate(1);\n\n    const handle = slider.find('.noUi-handle');\n\n    handle.on('mousedown', () => {\n        sliderContainer.addClass('is-active');\n\n        root.one('mouseup', () => {\n            sliderContainer.removeClass('is-active');\n        });\n    });\n\n    stowage.on('change', calculate);\n    reserve.on('change', calculate);\n\n    slider[0].noUiSlider.on('slide', function(valuesStr, handleIndex, valuesInt, what) {\n        [ space ] = valuesInt;\n        calculate();\n    });\n\n    function formatValue(space) {\n        return `${space.toFixed(1).replace('.', ',')} `;\n    }\n\n    function getPackAmount(space) {\n        return space\n            * (+stowage.filter(':checked').val() || 1)\n            * (+reserve.filter(':checked').val() || 1)\n            / CAPACITY;\n    }\n\n    function highlight() {\n        totalValue.addClass('omg');\n        setTimeout(() => totalValue.removeClass('omg'), 500);\n    }\n\n    function calculate(silent) {\n        sliderValue.textContent = formatValue(space);\n        totalValue.text(Math.ceil(getPackAmount(space)));\n\n        if (silent) return;\n        clearTimeout(timeout);\n        timeout = setTimeout(highlight, 200);\n    }\n\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/calculator.js\n **/","/*! nouislider - 8.3.0 - 2016-02-14 17:37:19 */\r\n\r\n(function (factory) {\r\n\r\n    if ( typeof define === 'function' && define.amd ) {\r\n\r\n        // AMD. Register as an anonymous module.\r\n        define([], factory);\r\n\r\n    } else if ( typeof exports === 'object' ) {\r\n\r\n        // Node/CommonJS\r\n        module.exports = factory();\r\n\r\n    } else {\r\n\r\n        // Browser globals\r\n        window.noUiSlider = factory();\r\n    }\r\n\r\n}(function( ){\r\n\r\n\t'use strict';\r\n\r\n\r\n\t// Removes duplicates from an array.\r\n\tfunction unique(array) {\r\n\t\treturn array.filter(function(a){\r\n\t\t\treturn !this[a] ? this[a] = true : false;\r\n\t\t}, {});\r\n\t}\r\n\r\n\t// Round a value to the closest 'to'.\r\n\tfunction closest ( value, to ) {\r\n\t\treturn Math.round(value / to) * to;\r\n\t}\r\n\r\n\t// Current position of an element relative to the document.\r\n\tfunction offset ( elem ) {\r\n\r\n\tvar rect = elem.getBoundingClientRect(),\r\n\t\tdoc = elem.ownerDocument,\r\n\t\tdocElem = doc.documentElement,\r\n\t\tpageOffset = getPageOffset();\r\n\r\n\t\t// getBoundingClientRect contains left scroll in Chrome on Android.\r\n\t\t// I haven't found a feature detection that proves this. Worst case\r\n\t\t// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\r\n\t\tif ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {\r\n\t\t\tpageOffset.x = 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: rect.top + pageOffset.y - docElem.clientTop,\r\n\t\t\tleft: rect.left + pageOffset.x - docElem.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\t// Checks whether a value is numerical.\r\n\tfunction isNumeric ( a ) {\r\n\t\treturn typeof a === 'number' && !isNaN( a ) && isFinite( a );\r\n\t}\r\n\r\n\t// Rounds a number to 7 supported decimals.\r\n\tfunction accurateNumber( number ) {\r\n\t\tvar p = Math.pow(10, 7);\r\n\t\treturn Number((Math.round(number*p)/p).toFixed(7));\r\n\t}\r\n\r\n\t// Sets a class and removes it after [duration] ms.\r\n\tfunction addClassFor ( element, className, duration ) {\r\n\t\taddClass(element, className);\r\n\t\tsetTimeout(function(){\r\n\t\t\tremoveClass(element, className);\r\n\t\t}, duration);\r\n\t}\r\n\r\n\t// Limits a value to 0 - 100\r\n\tfunction limit ( a ) {\r\n\t\treturn Math.max(Math.min(a, 100), 0);\r\n\t}\r\n\r\n\t// Wraps a variable as an array, if it isn't one yet.\r\n\tfunction asArray ( a ) {\r\n\t\treturn Array.isArray(a) ? a : [a];\r\n\t}\r\n\r\n\t// Counts decimals\r\n\tfunction countDecimals ( numStr ) {\r\n\t\tvar pieces = numStr.split(\".\");\r\n\t\treturn pieces.length > 1 ? pieces[1].length : 0;\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#add_class\r\n\tfunction addClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.add(className);\r\n\t\t} else {\r\n\t\t\tel.className += ' ' + className;\r\n\t\t}\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#remove_class\r\n\tfunction removeClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.remove(className);\r\n\t\t} else {\r\n\t\t\tel.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n\t\t}\r\n\t}\r\n\r\n\t// https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\r\n\tfunction hasClass ( el, className ) {\r\n\t\treturn el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\r\n\t}\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\r\n\tfunction getPageOffset ( ) {\r\n\r\n\t\tvar supportPageOffset = window.pageXOffset !== undefined,\r\n\t\t\tisCSS1Compat = ((document.compatMode || \"\") === \"CSS1Compat\"),\r\n\t\t\tx = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,\r\n\t\t\ty = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\r\n\r\n\t\treturn {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t}\r\n\r\n\t// Shorthand for stopPropagation so we don't have to create a dynamic method\r\n\tfunction stopPropagation ( e ) {\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\t// todo\r\n\tfunction addCssPrefix(cssPrefix) {\r\n\t\treturn function(className) {\r\n\t\t\treturn cssPrefix + className;\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tvar\r\n\t// Determine the events to bind. IE11 implements pointerEvents without\r\n\t// a prefix, which breaks compatibility with the IE10 implementation.\r\n\t/** @const */\r\n\tactions = window.navigator.pointerEnabled ? {\r\n\t\tstart: 'pointerdown',\r\n\t\tmove: 'pointermove',\r\n\t\tend: 'pointerup'\r\n\t} : window.navigator.msPointerEnabled ? {\r\n\t\tstart: 'MSPointerDown',\r\n\t\tmove: 'MSPointerMove',\r\n\t\tend: 'MSPointerUp'\r\n\t} : {\r\n\t\tstart: 'mousedown touchstart',\r\n\t\tmove: 'mousemove touchmove',\r\n\t\tend: 'mouseup touchend'\r\n\t},\r\n\tdefaultCssPrefix = 'noUi-';\r\n\r\n\r\n// Value calculation\r\n\r\n\t// Determine the size of a sub-range in relation to a full range.\r\n\tfunction subRangeRatio ( pa, pb ) {\r\n\t\treturn (100 / (pb - pa));\r\n\t}\r\n\r\n\t// (percentage) How many percent is this value of this range?\r\n\tfunction fromPercentage ( range, value ) {\r\n\t\treturn (value * 100) / ( range[1] - range[0] );\r\n\t}\r\n\r\n\t// (percentage) Where is this value on this range?\r\n\tfunction toPercentage ( range, value ) {\r\n\t\treturn fromPercentage( range, range[0] < 0 ?\r\n\t\t\tvalue + Math.abs(range[0]) :\r\n\t\t\t\tvalue - range[0] );\r\n\t}\r\n\r\n\t// (value) How much is this percentage on this range?\r\n\tfunction isPercentage ( range, value ) {\r\n\t\treturn ((value * ( range[1] - range[0] )) / 100) + range[0];\r\n\t}\r\n\r\n\r\n// Range conversion\r\n\r\n\tfunction getJ ( value, arr ) {\r\n\r\n\t\tvar j = 1;\r\n\r\n\t\twhile ( value >= arr[j] ){\r\n\t\t\tj += 1;\r\n\t\t}\r\n\r\n\t\treturn j;\r\n\t}\r\n\r\n\t// (percentage) Input a value, find where, on a scale of 0-100, it applies.\r\n\tfunction toStepping ( xVal, xPct, value ) {\r\n\r\n\t\tif ( value >= xVal.slice(-1)[0] ){\r\n\t\t\treturn 100;\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xVal ), va, vb, pa, pb;\r\n\r\n\t\tva = xVal[j-1];\r\n\t\tvb = xVal[j];\r\n\t\tpa = xPct[j-1];\r\n\t\tpb = xPct[j];\r\n\r\n\t\treturn pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));\r\n\t}\r\n\r\n\t// (value) Input a percentage, find where it is on the specified range.\r\n\tfunction fromStepping ( xVal, xPct, value ) {\r\n\r\n\t\t// There is no range group that fits 100\r\n\t\tif ( value >= 100 ){\r\n\t\t\treturn xVal.slice(-1)[0];\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xPct ), va, vb, pa, pb;\r\n\r\n\t\tva = xVal[j-1];\r\n\t\tvb = xVal[j];\r\n\t\tpa = xPct[j-1];\r\n\t\tpb = xPct[j];\r\n\r\n\t\treturn isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));\r\n\t}\r\n\r\n\t// (percentage) Get the step that applies at a certain value.\r\n\tfunction getStep ( xPct, xSteps, snap, value ) {\r\n\r\n\t\tif ( value === 100 ) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xPct ), a, b;\r\n\r\n\t\t// If 'snap' is set, steps are used as fixed points on the slider.\r\n\t\tif ( snap ) {\r\n\r\n\t\t\ta = xPct[j-1];\r\n\t\t\tb = xPct[j];\r\n\r\n\t\t\t// Find the closest position, a or b.\r\n\t\t\tif ((value - a) > ((b-a)/2)){\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tif ( !xSteps[j-1] ){\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\treturn xPct[j-1] + closest(\r\n\t\t\tvalue - xPct[j-1],\r\n\t\t\txSteps[j-1]\r\n\t\t);\r\n\t}\r\n\r\n\r\n// Entry parsing\r\n\r\n\tfunction handleEntryPoint ( index, value, that ) {\r\n\r\n\t\tvar percentage;\r\n\r\n\t\t// Wrap numerical input in an array.\r\n\t\tif ( typeof value === \"number\" ) {\r\n\t\t\tvalue = [value];\r\n\t\t}\r\n\r\n\t\t// Reject any invalid input, by testing whether value is an array.\r\n\t\tif ( Object.prototype.toString.call( value ) !== '[object Array]' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' contains invalid value.\");\r\n\t\t}\r\n\r\n\t\t// Covert min/max syntax to 0 and 100.\r\n\t\tif ( index === 'min' ) {\r\n\t\t\tpercentage = 0;\r\n\t\t} else if ( index === 'max' ) {\r\n\t\t\tpercentage = 100;\r\n\t\t} else {\r\n\t\t\tpercentage = parseFloat( index );\r\n\t\t}\r\n\r\n\t\t// Check for correct input.\r\n\t\tif ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' value isn't numeric.\");\r\n\t\t}\r\n\r\n\t\t// Store values.\r\n\t\tthat.xPct.push( percentage );\r\n\t\tthat.xVal.push( value[0] );\r\n\r\n\t\t// NaN will evaluate to false too, but to keep\r\n\t\t// logging clear, set step explicitly. Make sure\r\n\t\t// not to override the 'step' setting with false.\r\n\t\tif ( !percentage ) {\r\n\t\t\tif ( !isNaN( value[1] ) ) {\r\n\t\t\t\tthat.xSteps[0] = value[1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthat.xSteps.push( isNaN(value[1]) ? false : value[1] );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleStepPoint ( i, n, that ) {\r\n\r\n\t\t// Ignore 'false' stepping.\r\n\t\tif ( !n ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Factor to range ratio\r\n\t\tthat.xSteps[i] = fromPercentage([\r\n\t\t\t that.xVal[i]\r\n\t\t\t,that.xVal[i+1]\r\n\t\t], n) / subRangeRatio (\r\n\t\t\tthat.xPct[i],\r\n\t\t\tthat.xPct[i+1] );\r\n\t}\r\n\r\n\r\n// Interface\r\n\r\n\t// The interface to Spectrum handles all direction-based\r\n\t// conversions, so the above values are unaware.\r\n\r\n\tfunction Spectrum ( entry, snap, direction, singleStep ) {\r\n\r\n\t\tthis.xPct = [];\r\n\t\tthis.xVal = [];\r\n\t\tthis.xSteps = [ singleStep || false ];\r\n\t\tthis.xNumSteps = [ false ];\r\n\r\n\t\tthis.snap = snap;\r\n\t\tthis.direction = direction;\r\n\r\n\t\tvar index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];\r\n\r\n\t\t// Map the object keys to an array.\r\n\t\tfor ( index in entry ) {\r\n\t\t\tif ( entry.hasOwnProperty(index) ) {\r\n\t\t\t\tordered.push([entry[index], index]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Sort all entries by value (numeric sort).\r\n\t\tif ( ordered.length && typeof ordered[0][0] === \"object\" ) {\r\n\t\t\tordered.sort(function(a, b) { return a[0][0] - b[0][0]; });\r\n\t\t} else {\r\n\t\t\tordered.sort(function(a, b) { return a[0] - b[0]; });\r\n\t\t}\r\n\r\n\r\n\t\t// Convert all entries to subranges.\r\n\t\tfor ( index = 0; index < ordered.length; index++ ) {\r\n\t\t\thandleEntryPoint(ordered[index][1], ordered[index][0], this);\r\n\t\t}\r\n\r\n\t\t// Store the actual step values.\r\n\t\t// xSteps is sorted in the same order as xPct and xVal.\r\n\t\tthis.xNumSteps = this.xSteps.slice(0);\r\n\r\n\t\t// Convert all numeric steps to the percentage of the subrange they represent.\r\n\t\tfor ( index = 0; index < this.xNumSteps.length; index++ ) {\r\n\t\t\thandleStepPoint(index, this.xNumSteps[index], this);\r\n\t\t}\r\n\t}\r\n\r\n\tSpectrum.prototype.getMargin = function ( value ) {\r\n\t\treturn this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;\r\n\t};\r\n\r\n\tSpectrum.prototype.toStepping = function ( value ) {\r\n\r\n\t\tvalue = toStepping( this.xVal, this.xPct, value );\r\n\r\n\t\t// Invert the value if this is a right-to-left slider.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tSpectrum.prototype.fromStepping = function ( value ) {\r\n\r\n\t\t// Invert the value if this is a right-to-left slider.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn accurateNumber(fromStepping( this.xVal, this.xPct, value ));\r\n\t};\r\n\r\n\tSpectrum.prototype.getStep = function ( value ) {\r\n\r\n\t\t// Find the proper step for rtl sliders by search in inverse direction.\r\n\t\t// Fixes issue #262.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\tvalue = getStep(this.xPct, this.xSteps, this.snap, value );\r\n\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tSpectrum.prototype.getApplicableStep = function ( value ) {\r\n\r\n\t\t// If the value is 100%, return the negative step twice.\r\n\t\tvar j = getJ(value, this.xPct), offset = value === 100 ? 2 : 1;\r\n\t\treturn [this.xNumSteps[j-2], this.xVal[j-offset], this.xNumSteps[j-offset]];\r\n\t};\r\n\r\n\t// Outside testing\r\n\tSpectrum.prototype.convert = function ( value ) {\r\n\t\treturn this.getStep(this.toStepping(value));\r\n\t};\r\n\r\n/*\tEvery input option is tested and parsed. This'll prevent\r\n\tendless validation in internal methods. These tests are\r\n\tstructured with an item for every option available. An\r\n\toption can be marked as required by setting the 'r' flag.\r\n\tThe testing function is provided with three arguments:\r\n\t\t- The provided value for the option;\r\n\t\t- A reference to the options object;\r\n\t\t- The name for the option;\r\n\r\n\tThe testing function returns false when an error is detected,\r\n\tor true when everything is OK. It can also modify the option\r\n\tobject, to make sure all values can be correctly looped elsewhere. */\r\n\r\n\tvar defaultFormatter = { 'to': function( value ){\r\n\t\treturn value !== undefined && value.toFixed(2);\r\n\t}, 'from': Number };\r\n\r\n\tfunction testStep ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric( entry ) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'step' is not numeric.\");\r\n\t\t}\r\n\r\n\t\t// The step option can still be used to set stepping\r\n\t\t// for linear sliders. Overwritten if set in 'range'.\r\n\t\tparsed.singleStep = entry;\r\n\t}\r\n\r\n\tfunction testRange ( parsed, entry ) {\r\n\r\n\t\t// Filter incorrect input.\r\n\t\tif ( typeof entry !== 'object' || Array.isArray(entry) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' is not an object.\");\r\n\t\t}\r\n\r\n\t\t// Catch missing start or end.\r\n\t\tif ( entry.min === undefined || entry.max === undefined ) {\r\n\t\t\tthrow new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\r\n\t\t}\r\n\r\n\t\t// Catch equal start or end.\r\n\t\tif ( entry.min === entry.max ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' 'min' and 'max' cannot be equal.\");\r\n\t\t}\r\n\r\n\t\tparsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);\r\n\t}\r\n\r\n\tfunction testStart ( parsed, entry ) {\r\n\r\n\t\tentry = asArray(entry);\r\n\r\n\t\t// Validate input. Values aren't tested, as the public .val method\r\n\t\t// will always provide a valid location.\r\n\t\tif ( !Array.isArray( entry ) || !entry.length || entry.length > 2 ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'start' option is incorrect.\");\r\n\t\t}\r\n\r\n\t\t// Store the number of handles.\r\n\t\tparsed.handles = entry.length;\r\n\r\n\t\t// When the slider is initialized, the .val method will\r\n\t\t// be called with the start options.\r\n\t\tparsed.start = entry;\r\n\t}\r\n\r\n\tfunction testSnap ( parsed, entry ) {\r\n\r\n\t\t// Enforce 100% stepping within subranges.\r\n\t\tparsed.snap = entry;\r\n\r\n\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'snap' option must be a boolean.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testAnimate ( parsed, entry ) {\r\n\r\n\t\t// Enforce 100% stepping within subranges.\r\n\t\tparsed.animate = entry;\r\n\r\n\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'animate' option must be a boolean.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testConnect ( parsed, entry ) {\r\n\r\n\t\tif ( entry === 'lower' && parsed.handles === 1 ) {\r\n\t\t\tparsed.connect = 1;\r\n\t\t} else if ( entry === 'upper' && parsed.handles === 1 ) {\r\n\t\t\tparsed.connect = 2;\r\n\t\t} else if ( entry === true && parsed.handles === 2 ) {\r\n\t\t\tparsed.connect = 3;\r\n\t\t} else if ( entry === false ) {\r\n\t\t\tparsed.connect = 0;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testOrientation ( parsed, entry ) {\r\n\r\n\t\t// Set orientation to an a numerical value for easy\r\n\t\t// array selection.\r\n\t\tswitch ( entry ){\r\n\t\t  case 'horizontal':\r\n\t\t\tparsed.ort = 0;\r\n\t\t\tbreak;\r\n\t\t  case 'vertical':\r\n\t\t\tparsed.ort = 1;\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error(\"noUiSlider: 'orientation' option is invalid.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testMargin ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric(entry) ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'margin' option must be numeric.\");\r\n\t\t}\r\n\r\n\t\t// Issue #582\r\n\t\tif ( entry === 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tparsed.margin = parsed.spectrum.getMargin(entry);\r\n\r\n\t\tif ( !parsed.margin ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'margin' option is only supported on linear sliders.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testLimit ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric(entry) ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'limit' option must be numeric.\");\r\n\t\t}\r\n\r\n\t\tparsed.limit = parsed.spectrum.getMargin(entry);\r\n\r\n\t\tif ( !parsed.limit ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'limit' option is only supported on linear sliders.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testDirection ( parsed, entry ) {\r\n\r\n\t\t// Set direction as a numerical value for easy parsing.\r\n\t\t// Invert connection for RTL sliders, so that the proper\r\n\t\t// handles get the connect/background classes.\r\n\t\tswitch ( entry ) {\r\n\t\t  case 'ltr':\r\n\t\t\tparsed.dir = 0;\r\n\t\t\tbreak;\r\n\t\t  case 'rtl':\r\n\t\t\tparsed.dir = 1;\r\n\t\t\tparsed.connect = [0,2,1,3][parsed.connect];\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error(\"noUiSlider: 'direction' option was not recognized.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testBehaviour ( parsed, entry ) {\r\n\r\n\t\t// Make sure the input is a string.\r\n\t\tif ( typeof entry !== 'string' ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\r\n\t\t}\r\n\r\n\t\t// Check if the string contains any keywords.\r\n\t\t// None are required.\r\n\t\tvar tap = entry.indexOf('tap') >= 0,\r\n\t\t\tdrag = entry.indexOf('drag') >= 0,\r\n\t\t\tfixed = entry.indexOf('fixed') >= 0,\r\n\t\t\tsnap = entry.indexOf('snap') >= 0,\r\n\t\t\thover = entry.indexOf('hover') >= 0;\r\n\r\n\t\t// Fix #472\r\n\t\tif ( drag && !parsed.connect ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'drag' behaviour must be used with 'connect': true.\");\r\n\t\t}\r\n\r\n\t\tparsed.events = {\r\n\t\t\ttap: tap || snap,\r\n\t\t\tdrag: drag,\r\n\t\t\tfixed: fixed,\r\n\t\t\tsnap: snap,\r\n\t\t\thover: hover\r\n\t\t};\r\n\t}\r\n\r\n\tfunction testTooltips ( parsed, entry ) {\r\n\r\n\t\tvar i;\r\n\r\n\t\tif ( entry === false ) {\r\n\t\t\treturn;\r\n\t\t} else if ( entry === true ) {\r\n\r\n\t\t\tparsed.tooltips = [];\r\n\r\n\t\t\tfor ( i = 0; i < parsed.handles; i++ ) {\r\n\t\t\t\tparsed.tooltips.push(true);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparsed.tooltips = asArray(entry);\r\n\r\n\t\t\tif ( parsed.tooltips.length !== parsed.handles ) {\r\n\t\t\t\tthrow new Error(\"noUiSlider: must pass a formatter for all handles.\");\r\n\t\t\t}\r\n\r\n\t\t\tparsed.tooltips.forEach(function(formatter){\r\n\t\t\t\tif ( typeof formatter !== 'boolean' && (typeof formatter !== 'object' || typeof formatter.to !== 'function') ) {\r\n\t\t\t\t\tthrow new Error(\"noUiSlider: 'tooltips' must be passed a formatter or 'false'.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testFormat ( parsed, entry ) {\r\n\r\n\t\tparsed.format = entry;\r\n\r\n\t\t// Any object with a to and from method is supported.\r\n\t\tif ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthrow new Error( \"noUiSlider: 'format' requires 'to' and 'from' methods.\");\r\n\t}\r\n\r\n\tfunction testCssPrefix ( parsed, entry ) {\r\n\r\n\t\tif ( entry !== undefined && typeof entry !== 'string' ) {\r\n\t\t\tthrow new Error( \"noUiSlider: 'cssPrefix' must be a string.\");\r\n\t\t}\r\n\r\n\t\tparsed.cssPrefix = entry;\r\n\t}\r\n\r\n\t// Test all developer settings and parse to assumption-safe values.\r\n\tfunction testOptions ( options ) {\r\n\r\n\t\t// To prove a fix for #537, freeze options here.\r\n\t\t// If the object is modified, an error will be thrown.\r\n\t\t// Object.freeze(options);\r\n\r\n\t\tvar parsed = {\r\n\t\t\tmargin: 0,\r\n\t\t\tlimit: 0,\r\n\t\t\tanimate: true,\r\n\t\t\tformat: defaultFormatter\r\n\t\t}, tests;\r\n\r\n\t\t// Tests are executed in the order they are presented here.\r\n\t\ttests = {\r\n\t\t\t'step': { r: false, t: testStep },\r\n\t\t\t'start': { r: true, t: testStart },\r\n\t\t\t'connect': { r: true, t: testConnect },\r\n\t\t\t'direction': { r: true, t: testDirection },\r\n\t\t\t'snap': { r: false, t: testSnap },\r\n\t\t\t'animate': { r: false, t: testAnimate },\r\n\t\t\t'range': { r: true, t: testRange },\r\n\t\t\t'orientation': { r: false, t: testOrientation },\r\n\t\t\t'margin': { r: false, t: testMargin },\r\n\t\t\t'limit': { r: false, t: testLimit },\r\n\t\t\t'behaviour': { r: true, t: testBehaviour },\r\n\t\t\t'format': { r: false, t: testFormat },\r\n\t\t\t'tooltips': { r: false, t: testTooltips },\r\n\t\t\t'cssPrefix': { r: false, t: testCssPrefix }\r\n\t\t};\r\n\r\n\t\tvar defaults = {\r\n\t\t\t'connect': false,\r\n\t\t\t'direction': 'ltr',\r\n\t\t\t'behaviour': 'tap',\r\n\t\t\t'orientation': 'horizontal'\r\n\t\t};\r\n\r\n\t\t// Run all options through a testing mechanism to ensure correct\r\n\t\t// input. It should be noted that options might get modified to\r\n\t\t// be handled properly. E.g. wrapping integers in arrays.\r\n\t\tObject.keys(tests).forEach(function( name ){\r\n\r\n\t\t\t// If the option isn't set, but it is required, throw an error.\r\n\t\t\tif ( options[name] === undefined && defaults[name] === undefined ) {\r\n\r\n\t\t\t\tif ( tests[name].r ) {\r\n\t\t\t\t\tthrow new Error(\"noUiSlider: '\" + name + \"' is required.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\ttests[name].t( parsed, options[name] === undefined ? defaults[name] : options[name] );\r\n\t\t});\r\n\r\n\t\t// Forward pips options\r\n\t\tparsed.pips = options.pips;\r\n\r\n\t\t// Pre-define the styles.\r\n\t\tparsed.style = parsed.ort ? 'top' : 'left';\r\n\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\r\nfunction closure ( target, options ){\r\n\r\n\t// All variables local to 'closure' are prefixed with 'scope_'\r\n\tvar scope_Target = target,\r\n\t\tscope_Locations = [-1, -1],\r\n\t\tscope_Base,\r\n\t\tscope_Handles,\r\n\t\tscope_Spectrum = options.spectrum,\r\n\t\tscope_Values = [],\r\n\t\tscope_Events = {},\r\n\t\tscope_Self;\r\n\r\n  var cssClasses = [\r\n    /*  0 */  'target'\r\n    /*  1 */ ,'base'\r\n    /*  2 */ ,'origin'\r\n    /*  3 */ ,'handle'\r\n    /*  4 */ ,'horizontal'\r\n    /*  5 */ ,'vertical'\r\n    /*  6 */ ,'background'\r\n    /*  7 */ ,'connect'\r\n    /*  8 */ ,'ltr'\r\n    /*  9 */ ,'rtl'\r\n    /* 10 */ ,'draggable'\r\n    /* 11 */ ,''\r\n    /* 12 */ ,'state-drag'\r\n    /* 13 */ ,''\r\n    /* 14 */ ,'state-tap'\r\n    /* 15 */ ,'active'\r\n    /* 16 */ ,''\r\n    /* 17 */ ,'stacking'\r\n    /* 18 */ ,'tooltip'\r\n    /* 19 */ ,''\r\n    /* 20 */ ,'pips'\r\n    /* 21 */ ,'marker'\r\n    /* 22 */ ,'value'\r\n  ].map(addCssPrefix(options.cssPrefix || defaultCssPrefix));\r\n\r\n\r\n\t// Delimit proposed values for handle positions.\r\n\tfunction getPositions ( a, b, delimit ) {\r\n\r\n\t\t// Add movement to current position.\r\n\t\tvar c = a + b[0], d = a + b[1];\r\n\r\n\t\t// Only alter the other position on drag,\r\n\t\t// not on standard sliding.\r\n\t\tif ( delimit ) {\r\n\t\t\tif ( c < 0 ) {\r\n\t\t\t\td += Math.abs(c);\r\n\t\t\t}\r\n\t\t\tif ( d > 100 ) {\r\n\t\t\t\tc -= ( d - 100 );\r\n\t\t\t}\r\n\r\n\t\t\t// Limit values to 0 and 100.\r\n\t\t\treturn [limit(c), limit(d)];\r\n\t\t}\r\n\r\n\t\treturn [c,d];\r\n\t}\r\n\r\n\t// Provide a clean event with standardized offset values.\r\n\tfunction fixEvent ( e, pageOffset ) {\r\n\r\n\t\t// Prevent scrolling and panning on touch events, while\r\n\t\t// attempting to slide. The tap event also depends on this.\r\n\t\te.preventDefault();\r\n\r\n\t\t// Filter the event to register the type, which can be\r\n\t\t// touch, mouse or pointer. Offset changes need to be\r\n\t\t// made on an event specific basis.\r\n\t\tvar touch = e.type.indexOf('touch') === 0,\r\n\t\t\tmouse = e.type.indexOf('mouse') === 0,\r\n\t\t\tpointer = e.type.indexOf('pointer') === 0,\r\n\t\t\tx,y, event = e;\r\n\r\n\t\t// IE10 implemented pointer events with a prefix;\r\n\t\tif ( e.type.indexOf('MSPointer') === 0 ) {\r\n\t\t\tpointer = true;\r\n\t\t}\r\n\r\n\t\tif ( touch ) {\r\n\t\t\t// noUiSlider supports one movement at a time,\r\n\t\t\t// so we can select the first 'changedTouch'.\r\n\t\t\tx = e.changedTouches[0].pageX;\r\n\t\t\ty = e.changedTouches[0].pageY;\r\n\t\t}\r\n\r\n\t\tpageOffset = pageOffset || getPageOffset();\r\n\r\n\t\tif ( mouse || pointer ) {\r\n\t\t\tx = e.clientX + pageOffset.x;\r\n\t\t\ty = e.clientY + pageOffset.y;\r\n\t\t}\r\n\r\n\t\tevent.pageOffset = pageOffset;\r\n\t\tevent.points = [x, y];\r\n\t\tevent.cursor = mouse || pointer; // Fix #435\r\n\r\n\t\treturn event;\r\n\t}\r\n\r\n\t// Append a handle to the base.\r\n\tfunction addHandle ( direction, index ) {\r\n\r\n\t\tvar origin = document.createElement('div'),\r\n\t\t\thandle = document.createElement('div'),\r\n\t\t\tadditions = [ '-lower', '-upper' ];\r\n\r\n\t\tif ( direction ) {\r\n\t\t\tadditions.reverse();\r\n\t\t}\r\n\r\n\t\taddClass(handle, cssClasses[3]);\r\n\t\taddClass(handle, cssClasses[3] + additions[index]);\r\n\r\n\t\taddClass(origin, cssClasses[2]);\r\n\t\torigin.appendChild(handle);\r\n\r\n\t\treturn origin;\r\n\t}\r\n\r\n\t// Add the proper connection classes.\r\n\tfunction addConnection ( connect, target, handles ) {\r\n\r\n\t\t// Apply the required connection classes to the elements\r\n\t\t// that need them. Some classes are made up for several\r\n\t\t// segments listed in the class list, to allow easy\r\n\t\t// renaming and provide a minor compression benefit.\r\n\t\tswitch ( connect ) {\r\n\t\t\tcase 1:\taddClass(target, cssClasses[7]);\r\n\t\t\t\t\taddClass(handles[0], cssClasses[6]);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 3: addClass(handles[1], cssClasses[6]);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\tcase 2: addClass(handles[0], cssClasses[7]);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\tcase 0: addClass(target, cssClasses[6]);\r\n\t\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Add handles to the slider base.\r\n\tfunction addHandles ( nrHandles, direction, base ) {\r\n\r\n\t\tvar index, handles = [];\r\n\r\n\t\t// Append handles.\r\n\t\tfor ( index = 0; index < nrHandles; index += 1 ) {\r\n\r\n\t\t\t// Keep a list of all added handles.\r\n\t\t\thandles.push( base.appendChild(addHandle( direction, index )) );\r\n\t\t}\r\n\r\n\t\treturn handles;\r\n\t}\r\n\r\n\t// Initialize a single slider.\r\n\tfunction addSlider ( direction, orientation, target ) {\r\n\r\n\t\t// Apply classes and data to the target.\r\n\t\taddClass(target, cssClasses[0]);\r\n\t\taddClass(target, cssClasses[8 + direction]);\r\n\t\taddClass(target, cssClasses[4 + orientation]);\r\n\r\n\t\tvar div = document.createElement('div');\r\n\t\taddClass(div, cssClasses[1]);\r\n\t\ttarget.appendChild(div);\r\n\t\treturn div;\r\n\t}\r\n\r\n\r\n\tfunction addTooltip ( handle, index ) {\r\n\r\n\t\tif ( !options.tooltips[index] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar element = document.createElement('div');\r\n\t\telement.className = cssClasses[18];\r\n\t\treturn handle.firstChild.appendChild(element);\r\n\t}\r\n\r\n\t// The tooltips option is a shorthand for using the 'update' event.\r\n\tfunction tooltips ( ) {\r\n\r\n\t\tif ( options.dir ) {\r\n\t\t\toptions.tooltips.reverse();\r\n\t\t}\r\n\r\n\t\t// Tooltips are added with options.tooltips in original order.\r\n\t\tvar tips = scope_Handles.map(addTooltip);\r\n\r\n\t\tif ( options.dir ) {\r\n\t\t\ttips.reverse();\r\n\t\t\toptions.tooltips.reverse();\r\n\t\t}\r\n\r\n\t\tbindEvent('update', function(f, o, r) {\r\n\t\t\tif ( tips[o] ) {\r\n\t\t\t\ttips[o].innerHTML = options.tooltips[o] === true ? f[o] : options.tooltips[o].to(r[o]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction getGroup ( mode, values, stepped ) {\r\n\r\n\t\t// Use the range.\r\n\t\tif ( mode === 'range' || mode === 'steps' ) {\r\n\t\t\treturn scope_Spectrum.xVal;\r\n\t\t}\r\n\r\n\t\tif ( mode === 'count' ) {\r\n\r\n\t\t\t// Divide 0 - 100 in 'count' parts.\r\n\t\t\tvar spread = ( 100 / (values-1) ), v, i = 0;\r\n\t\t\tvalues = [];\r\n\r\n\t\t\t// List these parts and have them handled as 'positions'.\r\n\t\t\twhile ((v=i++*spread) <= 100 ) {\r\n\t\t\t\tvalues.push(v);\r\n\t\t\t}\r\n\r\n\t\t\tmode = 'positions';\r\n\t\t}\r\n\r\n\t\tif ( mode === 'positions' ) {\r\n\r\n\t\t\t// Map all percentages to on-range values.\r\n\t\t\treturn values.map(function( value ){\r\n\t\t\t\treturn scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( mode === 'values' ) {\r\n\r\n\t\t\t// If the value must be stepped, it needs to be converted to a percentage first.\r\n\t\t\tif ( stepped ) {\r\n\r\n\t\t\t\treturn values.map(function( value ){\r\n\r\n\t\t\t\t\t// Convert to percentage, apply step, return to value.\r\n\t\t\t\t\treturn scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, we can simply use the values.\r\n\t\t\treturn values;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction generateSpread ( density, mode, group ) {\r\n\r\n\t\tfunction safeIncrement(value, increment) {\r\n\t\t\t// Avoid floating point variance by dropping the smallest decimal places.\r\n\t\t\treturn (value + increment).toFixed(7) / 1;\r\n\t\t}\r\n\r\n\t\tvar originalSpectrumDirection = scope_Spectrum.direction,\r\n\t\t\tindexes = {},\r\n\t\t\tfirstInRange = scope_Spectrum.xVal[0],\r\n\t\t\tlastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],\r\n\t\t\tignoreFirst = false,\r\n\t\t\tignoreLast = false,\r\n\t\t\tprevPct = 0;\r\n\r\n\t\t// This function loops the spectrum in an ltr linear fashion,\r\n\t\t// while the toStepping method is direction aware. Trick it into\r\n\t\t// believing it is ltr.\r\n\t\tscope_Spectrum.direction = 0;\r\n\r\n\t\t// Create a copy of the group, sort it and filter away all duplicates.\r\n\t\tgroup = unique(group.slice().sort(function(a, b){ return a - b; }));\r\n\r\n\t\t// Make sure the range starts with the first element.\r\n\t\tif ( group[0] !== firstInRange ) {\r\n\t\t\tgroup.unshift(firstInRange);\r\n\t\t\tignoreFirst = true;\r\n\t\t}\r\n\r\n\t\t// Likewise for the last one.\r\n\t\tif ( group[group.length - 1] !== lastInRange ) {\r\n\t\t\tgroup.push(lastInRange);\r\n\t\t\tignoreLast = true;\r\n\t\t}\r\n\r\n\t\tgroup.forEach(function ( current, index ) {\r\n\r\n\t\t\t// Get the current step and the lower + upper positions.\r\n\t\t\tvar step, i, q,\r\n\t\t\t\tlow = current,\r\n\t\t\t\thigh = group[index+1],\r\n\t\t\t\tnewPct, pctDifference, pctPos, type,\r\n\t\t\t\tsteps, realSteps, stepsize;\r\n\r\n\t\t\t// When using 'steps' mode, use the provided steps.\r\n\t\t\t// Otherwise, we'll step on to the next subrange.\r\n\t\t\tif ( mode === 'steps' ) {\r\n\t\t\t\tstep = scope_Spectrum.xNumSteps[ index ];\r\n\t\t\t}\r\n\r\n\t\t\t// Default to a 'full' step.\r\n\t\t\tif ( !step ) {\r\n\t\t\t\tstep = high-low;\r\n\t\t\t}\r\n\r\n\t\t\t// Low can be 0, so test for false. If high is undefined,\r\n\t\t\t// we are at the last subrange. Index 0 is already handled.\r\n\t\t\tif ( low === false || high === undefined ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Find all steps in the subrange.\r\n\t\t\tfor ( i = low; i <= high; i = safeIncrement(i, step) ) {\r\n\r\n\t\t\t\t// Get the percentage value for the current step,\r\n\t\t\t\t// calculate the size for the subrange.\r\n\t\t\t\tnewPct = scope_Spectrum.toStepping( i );\r\n\t\t\t\tpctDifference = newPct - prevPct;\r\n\r\n\t\t\t\tsteps = pctDifference / density;\r\n\t\t\t\trealSteps = Math.round(steps);\r\n\r\n\t\t\t\t// This ratio represents the ammount of percentage-space a point indicates.\r\n\t\t\t\t// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.\r\n\t\t\t\t// Round the percentage offset to an even number, then divide by two\r\n\t\t\t\t// to spread the offset on both sides of the range.\r\n\t\t\t\tstepsize = pctDifference/realSteps;\r\n\r\n\t\t\t\t// Divide all points evenly, adding the correct number to this subrange.\r\n\t\t\t\t// Run up to <= so that 100% gets a point, event if ignoreLast is set.\r\n\t\t\t\tfor ( q = 1; q <= realSteps; q += 1 ) {\r\n\r\n\t\t\t\t\t// The ratio between the rounded value and the actual size might be ~1% off.\r\n\t\t\t\t\t// Correct the percentage offset by the number of points\r\n\t\t\t\t\t// per subrange. density = 1 will result in 100 points on the\r\n\t\t\t\t\t// full range, 2 for 50, 4 for 25, etc.\r\n\t\t\t\t\tpctPos = prevPct + ( q * stepsize );\r\n\t\t\t\t\tindexes[pctPos.toFixed(5)] = ['x', 0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine the point type.\r\n\t\t\t\ttype = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );\r\n\r\n\t\t\t\t// Enforce the 'ignoreFirst' option by overwriting the type for 0.\r\n\t\t\t\tif ( !index && ignoreFirst ) {\r\n\t\t\t\t\ttype = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !(i === high && ignoreLast)) {\r\n\t\t\t\t\t// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\r\n\t\t\t\t\tindexes[newPct.toFixed(5)] = [i, type];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the percentage count.\r\n\t\t\t\tprevPct = newPct;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Reset the spectrum.\r\n\t\tscope_Spectrum.direction = originalSpectrumDirection;\r\n\r\n\t\treturn indexes;\r\n\t}\r\n\r\n\tfunction addMarking ( spread, filterFunc, formatter ) {\r\n\r\n\t\tvar style = ['horizontal', 'vertical'][options.ort],\r\n\t\t\telement = document.createElement('div'),\r\n\t\t\tout = '';\r\n\r\n\t\taddClass(element, cssClasses[20]);\r\n\t\taddClass(element, cssClasses[20] + '-' + style);\r\n\r\n\t\tfunction getSize( type ){\r\n\t\t\treturn [ '-normal', '-large', '-sub' ][type];\r\n\t\t}\r\n\r\n\t\tfunction getTags( offset, source, values ) {\r\n\t\t\treturn 'class=\"' + source + ' ' +\r\n\t\t\t\tsource + '-' + style + ' ' +\r\n\t\t\t\tsource + getSize(values[1]) +\r\n\t\t\t\t'\" style=\"' + options.style + ': ' + offset + '%\"';\r\n\t\t}\r\n\r\n\t\tfunction addSpread ( offset, values ){\r\n\r\n\t\t\tif ( scope_Spectrum.direction ) {\r\n\t\t\t\toffset = 100 - offset;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply the filter function, if it is set.\r\n\t\t\tvalues[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];\r\n\r\n\t\t\t// Add a marker for every point\r\n\t\t\tout += '<div ' + getTags(offset, cssClasses[21], values) + '></div>';\r\n\r\n\t\t\t// Values are only appended for points marked '1' or '2'.\r\n\t\t\tif ( values[1] ) {\r\n\t\t\t\tout += '<div '+getTags(offset, cssClasses[22], values)+'>' + formatter.to(values[0]) + '</div>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Append all points.\r\n\t\tObject.keys(spread).forEach(function(a){\r\n\t\t\taddSpread(a, spread[a]);\r\n\t\t});\r\n\t\telement.innerHTML = out;\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction pips ( grid ) {\r\n\r\n\tvar mode = grid.mode,\r\n\t\tdensity = grid.density || 1,\r\n\t\tfilter = grid.filter || false,\r\n\t\tvalues = grid.values || false,\r\n\t\tstepped = grid.stepped || false,\r\n\t\tgroup = getGroup( mode, values, stepped ),\r\n\t\tspread = generateSpread( density, mode, group ),\r\n\t\tformat = grid.format || {\r\n\t\t\tto: Math.round\r\n\t\t};\r\n\r\n\t\treturn scope_Target.appendChild(addMarking(\r\n\t\t\tspread,\r\n\t\t\tfilter,\r\n\t\t\tformat\r\n\t\t));\r\n\t}\r\n\r\n\r\n\t// Shorthand for base dimensions.\r\n\tfunction baseSize ( ) {\r\n\t\tvar rect = scope_Base.getBoundingClientRect(), alt = 'offset' + ['Width', 'Height'][options.ort];\r\n\t\treturn options.ort === 0 ? (rect.width||scope_Base[alt]) : (rect.height||scope_Base[alt]);\r\n\t}\r\n\r\n\t// External event handling\r\n\tfunction fireEvent ( event, handleNumber, tap ) {\r\n\r\n\t\tif ( handleNumber !== undefined && options.handles !== 1 ) {\r\n\t\t\thandleNumber = Math.abs(handleNumber - options.dir);\r\n\t\t}\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\r\n\r\n\t\t\tvar eventType = targetEvent.split('.')[0];\r\n\r\n\t\t\tif ( event === eventType ) {\r\n\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\r\n\r\n\t\t\t\t\tcallback.call(\r\n\t\t\t\t\t\t// Use the slider public API as the scope ('this')\r\n\t\t\t\t\t\tscope_Self,\r\n\t\t\t\t\t\t// Return values as array, so arg_1[arg_2] is always valid.\r\n\t\t\t\t\t\tasArray(valueGet()),\r\n\t\t\t\t\t\t// Handle index, 0 or 1\r\n\t\t\t\t\t\thandleNumber,\r\n\t\t\t\t\t\t// Unformatted slider values\r\n\t\t\t\t\t\tasArray(inSliderOrder(Array.prototype.slice.call(scope_Values))),\r\n\t\t\t\t\t\t// Event is fired by tap, true or false\r\n\t\t\t\t\t\ttap || false,\r\n\t\t\t\t\t\t// Left offset of the handle, in relation to the slider\r\n\t\t\t\t\t\tscope_Locations\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Returns the input array, respecting the slider direction configuration.\r\n\tfunction inSliderOrder ( values ) {\r\n\r\n\t\t// If only one handle is used, return a single value.\r\n\t\tif ( values.length === 1 ){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\r\n\t\tif ( options.dir ) {\r\n\t\t\treturn values.reverse();\r\n\t\t}\r\n\r\n\t\treturn values;\r\n\t}\r\n\r\n\r\n\t// Handler for attaching events trough a proxy.\r\n\tfunction attach ( events, element, callback, data ) {\r\n\r\n\t\t// This function can be used to 'filter' events to the slider.\r\n\t\t// element is a node, not a nodeList\r\n\r\n\t\tvar method = function ( e ){\r\n\r\n\t\t\tif ( scope_Target.hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Stop if an active 'tap' transition is taking place.\r\n\t\t\tif ( hasClass(scope_Target, cssClasses[14]) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\te = fixEvent(e, data.pageOffset);\r\n\r\n\t\t\t// Ignore right or middle clicks on start #454\r\n\t\t\tif ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Ignore right or middle clicks on start #454\r\n\t\t\tif ( data.hover && e.buttons ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\te.calcPoint = e.points[ options.ort ];\r\n\r\n\t\t\t// Call the event handler with the event [ and additional data ].\r\n\t\t\tcallback ( e, data );\r\n\r\n\t\t}, methods = [];\r\n\r\n\t\t// Bind a closure on the target for every event type.\r\n\t\tevents.split(' ').forEach(function( eventName ){\r\n\t\t\telement.addEventListener(eventName, method, false);\r\n\t\t\tmethods.push([eventName, method]);\r\n\t\t});\r\n\r\n\t\treturn methods;\r\n\t}\r\n\r\n\t// Handle movement on document for handle and range drag.\r\n\tfunction move ( event, data ) {\r\n\r\n\t\t// Fix #498\r\n\t\t// Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\r\n\t\t// https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\r\n\t\t// IE9 has .buttons and .which zero on mousemove.\r\n\t\t// Firefox breaks the spec MDN defines.\r\n\t\tif ( navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0 ) {\r\n\t\t\treturn end(event, data);\r\n\t\t}\r\n\r\n\t\tvar handles = data.handles || scope_Handles, positions, state = false,\r\n\t\t\tproposal = ((event.calcPoint - data.start) * 100) / data.baseSize,\r\n\t\t\thandleNumber = handles[0] === scope_Handles[0] ? 0 : 1, i;\r\n\r\n\t\t// Calculate relative positions for the handles.\r\n\t\tpositions = getPositions( proposal, data.positions, handles.length > 1);\r\n\r\n\t\tstate = setHandle ( handles[0], positions[handleNumber], handles.length === 1 );\r\n\r\n\t\tif ( handles.length > 1 ) {\r\n\r\n\t\t\tstate = setHandle ( handles[1], positions[handleNumber?0:1], false ) || state;\r\n\r\n\t\t\tif ( state ) {\r\n\t\t\t\t// fire for both handles\r\n\t\t\t\tfor ( i = 0; i < data.handles.length; i++ ) {\r\n\t\t\t\t\tfireEvent('slide', i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( state ) {\r\n\t\t\t// Fire for a single handle\r\n\t\t\tfireEvent('slide', handleNumber);\r\n\t\t}\r\n\t}\r\n\r\n\t// Unbind move events on document, call callbacks.\r\n\tfunction end ( event, data ) {\r\n\r\n\t\t// The handle is no longer active, so remove the class.\r\n\t\tvar active = scope_Base.querySelector( '.' + cssClasses[15] ),\r\n\t\t\thandleNumber = data.handles[0] === scope_Handles[0] ? 0 : 1;\r\n\r\n\t\tif ( active !== null ) {\r\n\t\t\tremoveClass(active, cssClasses[15]);\r\n\t\t}\r\n\r\n\t\t// Remove cursor styles and text-selection events bound to the body.\r\n\t\tif ( event.cursor ) {\r\n\t\t\tdocument.body.style.cursor = '';\r\n\t\t\tdocument.body.removeEventListener('selectstart', document.body.noUiListener);\r\n\t\t}\r\n\r\n\t\tvar d = document.documentElement;\r\n\r\n\t\t// Unbind the move and end events, which are added on 'start'.\r\n\t\td.noUiListeners.forEach(function( c ) {\r\n\t\t\td.removeEventListener(c[0], c[1]);\r\n\t\t});\r\n\r\n\t\t// Remove dragging class.\r\n\t\tremoveClass(scope_Target, cssClasses[12]);\r\n\r\n\t\t// Fire the change and set events.\r\n\t\tfireEvent('set', handleNumber);\r\n\t\tfireEvent('change', handleNumber);\r\n\r\n\t\t// If this is a standard handle movement, fire the end event.\r\n\t\tif ( data.handleNumber !== undefined ) {\r\n\t\t\tfireEvent('end', data.handleNumber);\r\n\t\t}\r\n\t}\r\n\r\n\t// Fire 'end' when a mouse or pen leaves the document.\r\n\tfunction documentLeave ( event, data ) {\r\n\t\tif ( event.type === \"mouseout\" && event.target.nodeName === \"HTML\" && event.relatedTarget === null ){\r\n\t\t\tend ( event, data );\r\n\t\t}\r\n\t}\r\n\r\n\t// Bind move events on document.\r\n\tfunction start ( event, data ) {\r\n\r\n\t\tvar d = document.documentElement;\r\n\r\n\t\t// Mark the handle as 'active' so it can be styled.\r\n\t\tif ( data.handles.length === 1 ) {\r\n\t\t\taddClass(data.handles[0].children[0], cssClasses[15]);\r\n\r\n\t\t\t// Support 'disabled' handles\r\n\t\t\tif ( data.handles[0].hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fix #551, where a handle gets selected instead of dragged.\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// A drag should never propagate up to the 'tap' event.\r\n\t\tevent.stopPropagation();\r\n\r\n\t\t// Attach the move and end events.\r\n\t\tvar moveEvent = attach(actions.move, d, move, {\r\n\t\t\tstart: event.calcPoint,\r\n\t\t\tbaseSize: baseSize(),\r\n\t\t\tpageOffset: event.pageOffset,\r\n\t\t\thandles: data.handles,\r\n\t\t\thandleNumber: data.handleNumber,\r\n\t\t\tbuttonsProperty: event.buttons,\r\n\t\t\tpositions: [\r\n\t\t\t\tscope_Locations[0],\r\n\t\t\t\tscope_Locations[scope_Handles.length - 1]\r\n\t\t\t]\r\n\t\t}), endEvent = attach(actions.end, d, end, {\r\n\t\t\thandles: data.handles,\r\n\t\t\thandleNumber: data.handleNumber\r\n\t\t});\r\n\r\n\t\tvar outEvent = attach(\"mouseout\", d, documentLeave, {\r\n\t\t\thandles: data.handles,\r\n\t\t\thandleNumber: data.handleNumber\r\n\t\t});\r\n\r\n\t\td.noUiListeners = moveEvent.concat(endEvent, outEvent);\r\n\r\n\t\t// Text selection isn't an issue on touch devices,\r\n\t\t// so adding cursor styles can be skipped.\r\n\t\tif ( event.cursor ) {\r\n\r\n\t\t\t// Prevent the 'I' cursor and extend the range-drag cursor.\r\n\t\t\tdocument.body.style.cursor = getComputedStyle(event.target).cursor;\r\n\r\n\t\t\t// Mark the target with a dragging state.\r\n\t\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\t\taddClass(scope_Target, cssClasses[12]);\r\n\t\t\t}\r\n\r\n\t\t\tvar f = function(){\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\tdocument.body.noUiListener = f;\r\n\r\n\t\t\t// Prevent text selection when dragging the handles.\r\n\t\t\tdocument.body.addEventListener('selectstart', f, false);\r\n\t\t}\r\n\r\n\t\tif ( data.handleNumber !== undefined ) {\r\n\t\t\tfireEvent('start', data.handleNumber);\r\n\t\t}\r\n\t}\r\n\r\n\t// Move closest handle to tapped location.\r\n\tfunction tap ( event ) {\r\n\r\n\t\tvar location = event.calcPoint, total = 0, handleNumber, to;\r\n\r\n\t\t// The tap event shouldn't propagate up and cause 'edge' to run.\r\n\t\tevent.stopPropagation();\r\n\r\n\t\t// Add up the handle offsets.\r\n\t\tscope_Handles.forEach(function(a){\r\n\t\t\ttotal += offset(a)[ options.style ];\r\n\t\t});\r\n\r\n\t\t// Find the handle closest to the tapped position.\r\n\t\thandleNumber = ( location < total/2 || scope_Handles.length === 1 ) ? 0 : 1;\r\n\t\t\r\n\t\t// Check if handler is not disablet if yes set number to the next handler\r\n\t\tif (scope_Handles[handleNumber].hasAttribute('disabled')) {\r\n\t\t\thandleNumber = handleNumber ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tlocation -= offset(scope_Base)[ options.style ];\r\n\r\n\t\t// Calculate the new position.\r\n\t\tto = ( location * 100 ) / baseSize();\r\n\r\n\t\tif ( !options.events.snap ) {\r\n\t\t\t// Flag the slider as it is now in a transitional state.\r\n\t\t\t// Transition takes 300 ms, so re-enable the slider afterwards.\r\n\t\t\taddClassFor( scope_Target, cssClasses[14], 300 );\r\n\t\t}\r\n\r\n\t\t// Support 'disabled' handles\r\n\t\tif ( scope_Handles[handleNumber].hasAttribute('disabled') ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Find the closest handle and calculate the tapped point.\r\n\t\t// The set handle to the new position.\r\n\t\tsetHandle( scope_Handles[handleNumber], to );\r\n\r\n\t\tfireEvent('slide', handleNumber, true);\r\n\t\tfireEvent('set', handleNumber, true);\r\n\t\tfireEvent('change', handleNumber, true);\r\n\r\n\t\tif ( options.events.snap ) {\r\n\t\t\tstart(event, { handles: [scope_Handles[handleNumber]] });\r\n\t\t}\r\n\t}\r\n\r\n\t// Fires a 'hover' event for a hovered mouse/pen position.\r\n\tfunction hover ( event ) {\r\n\r\n\t\tvar location = event.calcPoint - offset(scope_Base)[ options.style ],\r\n\t\t\tto = scope_Spectrum.getStep(( location * 100 ) / baseSize()),\r\n\t\t\tvalue = scope_Spectrum.fromStepping( to );\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\r\n\t\t\tif ( 'hover' === targetEvent.split('.')[0] ) {\r\n\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\r\n\t\t\t\t\tcallback.call( scope_Self, value );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Attach events to several slider parts.\r\n\tfunction events ( behaviour ) {\r\n\r\n\t\tvar i, drag;\r\n\r\n\t\t// Attach the standard drag event to the handles.\r\n\t\tif ( !behaviour.fixed ) {\r\n\r\n\t\t\tfor ( i = 0; i < scope_Handles.length; i += 1 ) {\r\n\r\n\t\t\t\t// These events are only bound to the visual handle\r\n\t\t\t\t// element, not the 'real' origin element.\r\n\t\t\t\tattach ( actions.start, scope_Handles[i].children[0], start, {\r\n\t\t\t\t\thandles: [ scope_Handles[i] ],\r\n\t\t\t\t\thandleNumber: i\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Attach the tap event to the slider base.\r\n\t\tif ( behaviour.tap ) {\r\n\r\n\t\t\tattach ( actions.start, scope_Base, tap, {\r\n\t\t\t\thandles: scope_Handles\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Fire hover events\r\n\t\tif ( behaviour.hover ) {\r\n\t\t\tattach ( actions.move, scope_Base, hover, { hover: true } );\r\n\t\t\tfor ( i = 0; i < scope_Handles.length; i += 1 ) {\r\n\t\t\t\t['mousemove MSPointerMove pointermove'].forEach(function( eventName ){\r\n\t\t\t\t\tscope_Handles[i].children[0].addEventListener(eventName, stopPropagation, false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make the range draggable.\r\n\t\tif ( behaviour.drag ){\r\n\r\n\t\t\tdrag = [scope_Base.querySelector( '.' + cssClasses[7] )];\r\n\t\t\taddClass(drag[0], cssClasses[10]);\r\n\r\n\t\t\t// When the range is fixed, the entire range can\r\n\t\t\t// be dragged by the handles. The handle in the first\r\n\t\t\t// origin will propagate the start event upward,\r\n\t\t\t// but it needs to be bound manually on the other.\r\n\t\t\tif ( behaviour.fixed ) {\r\n\t\t\t\tdrag.push(scope_Handles[(drag[0] === scope_Handles[0] ? 1 : 0)].children[0]);\r\n\t\t\t}\r\n\r\n\t\t\tdrag.forEach(function( element ) {\r\n\t\t\t\tattach ( actions.start, element, start, {\r\n\t\t\t\t\thandles: scope_Handles\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Test suggested values and apply margin, step.\r\n\tfunction setHandle ( handle, to, noLimitOption ) {\r\n\r\n\t\tvar trigger = handle !== scope_Handles[0] ? 1 : 0,\r\n\t\t\tlowerMargin = scope_Locations[0] + options.margin,\r\n\t\t\tupperMargin = scope_Locations[1] - options.margin,\r\n\t\t\tlowerLimit = scope_Locations[0] + options.limit,\r\n\t\t\tupperLimit = scope_Locations[1] - options.limit;\r\n\r\n\t\t// For sliders with multiple handles,\r\n\t\t// limit movement to the other handle.\r\n\t\t// Apply the margin option by adding it to the handle positions.\r\n\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\tto = trigger ? Math.max( to, lowerMargin ) : Math.min( to, upperMargin );\r\n\t\t}\r\n\r\n\t\t// The limit option has the opposite effect, limiting handles to a\r\n\t\t// maximum distance from another. Limit must be > 0, as otherwise\r\n\t\t// handles would be unmoveable. 'noLimitOption' is set to 'false'\r\n\t\t// for the .val() method, except for pass 4/4.\r\n\t\tif ( noLimitOption !== false && options.limit && scope_Handles.length > 1 ) {\r\n\t\t\tto = trigger ? Math.min ( to, lowerLimit ) : Math.max( to, upperLimit );\r\n\t\t}\r\n\r\n\t\t// Handle the step option.\r\n\t\tto = scope_Spectrum.getStep( to );\r\n\r\n\t\t// Limit to 0/100 for .val input, trim anything beyond 7 digits, as\r\n\t\t// JavaScript has some issues in its floating point implementation.\r\n\t\tto = limit(parseFloat(to.toFixed(7)));\r\n\r\n\t\t// Return false if handle can't move\r\n\t\tif ( to === scope_Locations[trigger] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Set the handle to the new position.\r\n\t\t// Use requestAnimationFrame for efficient painting.\r\n\t\t// No significant effect in Chrome, Edge sees dramatic\r\n\t\t// performace improvements.\r\n\t\tif ( window.requestAnimationFrame ) {\r\n\t\t\twindow.requestAnimationFrame(function(){\r\n\t\t\t\thandle.style[options.style] = to + '%';\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\thandle.style[options.style] = to + '%';\r\n\t\t}\r\n\r\n\t\t// Force proper handle stacking\r\n\t\tif ( !handle.previousSibling ) {\r\n\t\t\tremoveClass(handle, cssClasses[17]);\r\n\t\t\tif ( to > 50 ) {\r\n\t\t\t\taddClass(handle, cssClasses[17]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update locations.\r\n\t\tscope_Locations[trigger] = to;\r\n\r\n\t\t// Convert the value to the slider stepping/range.\r\n\t\tscope_Values[trigger] = scope_Spectrum.fromStepping( to );\r\n\r\n\t\tfireEvent('update', trigger);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Loop values from value method and apply them.\r\n\tfunction setValues ( count, values ) {\r\n\r\n\t\tvar i, trigger, to;\r\n\r\n\t\t// With the limit option, we'll need another limiting pass.\r\n\t\tif ( options.limit ) {\r\n\t\t\tcount += 1;\r\n\t\t}\r\n\r\n\t\t// If there are multiple handles to be set run the setting\r\n\t\t// mechanism twice for the first handle, to make sure it\r\n\t\t// can be bounced of the second one properly.\r\n\t\tfor ( i = 0; i < count; i += 1 ) {\r\n\r\n\t\t\ttrigger = i%2;\r\n\r\n\t\t\t// Get the current argument from the array.\r\n\t\t\tto = values[trigger];\r\n\r\n\t\t\t// Setting with null indicates an 'ignore'.\r\n\t\t\t// Inputting 'false' is invalid.\r\n\t\t\tif ( to !== null && to !== false ) {\r\n\r\n\t\t\t\t// If a formatted number was passed, attemt to decode it.\r\n\t\t\t\tif ( typeof to === 'number' ) {\r\n\t\t\t\t\tto = String(to);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tto = options.format.from( to );\r\n\r\n\t\t\t\t// Request an update for all links if the value was invalid.\r\n\t\t\t\t// Do so too if setting the handle fails.\r\n\t\t\t\tif ( to === false || isNaN(to) || setHandle( scope_Handles[trigger], scope_Spectrum.toStepping( to ), i === (3 - options.dir) ) === false ) {\r\n\t\t\t\t\tfireEvent('update', trigger);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the slider value.\r\n\tfunction valueSet ( input ) {\r\n\r\n\t\tvar count, values = asArray( input ), i;\r\n\r\n\t\t// The RTL settings is implemented by reversing the front-end,\r\n\t\t// internal mechanisms are the same.\r\n\t\tif ( options.dir && options.handles > 1 ) {\r\n\t\t\tvalues.reverse();\r\n\t\t}\r\n\r\n\t\t// Animation is optional.\r\n\t\t// Make sure the initial values where set before using animated placement.\r\n\t\tif ( options.animate && scope_Locations[0] !== -1 ) {\r\n\t\t\taddClassFor( scope_Target, cssClasses[14], 300 );\r\n\t\t}\r\n\r\n\t\t// Determine how often to set the handles.\r\n\t\tcount = scope_Handles.length > 1 ? 3 : 1;\r\n\r\n\t\tif ( values.length === 1 ) {\r\n\t\t\tcount = 1;\r\n\t\t}\r\n\r\n\t\tsetValues ( count, values );\r\n\r\n\t\t// Fire the 'set' event for both handles.\r\n\t\tfor ( i = 0; i < scope_Handles.length; i++ ) {\r\n\r\n\t\t\t// Fire the event only for handles that received a new value, as per #579\r\n\t\t\tif ( values[i] !== null ) {\r\n\t\t\t\tfireEvent('set', i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the slider value.\r\n\tfunction valueGet ( ) {\r\n\r\n\t\tvar i, retour = [];\r\n\r\n\t\t// Get the value from all handles.\r\n\t\tfor ( i = 0; i < options.handles; i += 1 ){\r\n\t\t\tretour[i] = options.format.to( scope_Values[i] );\r\n\t\t}\r\n\r\n\t\treturn inSliderOrder( retour );\r\n\t}\r\n\r\n\t// Removes classes from the root and empties it.\r\n\tfunction destroy ( ) {\r\n\r\n\t\tcssClasses.forEach(function(cls){\r\n\t\t\tif ( !cls ) { return; } // Ignore empty classes\r\n\t\t\tremoveClass(scope_Target, cls);\r\n\t\t});\r\n\r\n\t\twhile (scope_Target.firstChild) {\r\n\t\t\tscope_Target.removeChild(scope_Target.firstChild);\r\n\t\t}\r\n\r\n\t\tdelete scope_Target.noUiSlider;\r\n\t}\r\n\r\n\t// Get the current step size for the slider.\r\n\tfunction getCurrentStep ( ) {\r\n\r\n\t\t// Check all locations, map them to their stepping point.\r\n\t\t// Get the step point, then find it in the input list.\r\n\t\tvar retour = scope_Locations.map(function( location, index ){\r\n\r\n\t\t\tvar step = scope_Spectrum.getApplicableStep( location ),\r\n\r\n\t\t\t\t// As per #391, the comparison for the decrement step can have some rounding issues.\r\n\t\t\t\t// Round the value to the precision used in the step.\r\n\t\t\t\tstepDecimals = countDecimals(String(step[2])),\r\n\r\n\t\t\t\t// Get the current numeric value\r\n\t\t\t\tvalue = scope_Values[index],\r\n\r\n\t\t\t\t// To move the slider 'one step up', the current step value needs to be added.\r\n\t\t\t\t// Use null if we are at the maximum slider value.\r\n\t\t\t\tincrement = location === 100 ? null : step[2],\r\n\r\n\t\t\t\t// Going 'one step down' might put the slider in a different sub-range, so we\r\n\t\t\t\t// need to switch between the current or the previous step.\r\n\t\t\t\tprev = Number((value - step[2]).toFixed(stepDecimals)),\r\n\r\n\t\t\t\t// If the value fits the step, return the current step value. Otherwise, use the\r\n\t\t\t\t// previous step. Return null if the slider is at its minimum value.\r\n\t\t\t\tdecrement = location === 0 ? null : (prev >= step[1]) ? step[2] : (step[0] || false);\r\n\r\n\t\t\treturn [decrement, increment];\r\n\t\t});\r\n\r\n\t\t// Return values in the proper order.\r\n\t\treturn inSliderOrder( retour );\r\n\t}\r\n\r\n\t// Attach an event to this slider, possibly including a namespace\r\n\tfunction bindEvent ( namespacedEvent, callback ) {\r\n\t\tscope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\r\n\t\tscope_Events[namespacedEvent].push(callback);\r\n\r\n\t\t// If the event bound is 'update,' fire it immediately for all handles.\r\n\t\tif ( namespacedEvent.split('.')[0] === 'update' ) {\r\n\t\t\tscope_Handles.forEach(function(a, index){\r\n\t\t\t\tfireEvent('update', index);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Undo attachment of event\r\n\tfunction removeEvent ( namespacedEvent ) {\r\n\r\n\t\tvar event = namespacedEvent.split('.')[0],\r\n\t\t\tnamespace = namespacedEvent.substring(event.length);\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( bind ){\r\n\r\n\t\t\tvar tEvent = bind.split('.')[0],\r\n\t\t\t\ttNamespace = bind.substring(tEvent.length);\r\n\r\n\t\t\tif ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {\r\n\t\t\t\tdelete scope_Events[bind];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Updateable: margin, limit, step, range, animate, snap\r\n\tfunction updateOptions ( optionsToUpdate ) {\r\n\r\n\t\tvar v = valueGet(), i, newOptions = testOptions({\r\n\t\t\tstart: [0, 0],\r\n\t\t\tmargin: optionsToUpdate.margin,\r\n\t\t\tlimit: optionsToUpdate.limit,\r\n\t\t\tstep: optionsToUpdate.step,\r\n\t\t\trange: optionsToUpdate.range,\r\n\t\t\tanimate: optionsToUpdate.animate,\r\n\t\t\tsnap: optionsToUpdate.snap === undefined ? options.snap : optionsToUpdate.snap\r\n\t\t});\r\n\r\n\t\t['margin', 'limit', 'step', 'range', 'animate'].forEach(function(name){\r\n\t\t\tif ( optionsToUpdate[name] !== undefined ) {\r\n\t\t\t\toptions[name] = optionsToUpdate[name];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Save current spectrum direction as testOptions in testRange call\r\n\t\t// doesn't rely on current direction\r\n\t\tnewOptions.spectrum.direction = scope_Spectrum.direction;\r\n\t\tscope_Spectrum = newOptions.spectrum;\r\n\r\n\t\t// Invalidate the current positioning so valueSet forces an update.\r\n\t\tscope_Locations = [-1, -1];\r\n\t\tvalueSet(v);\r\n\r\n\t\tfor ( i = 0; i < scope_Handles.length; i++ ) {\r\n\t\t\tfireEvent('update', i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Throw an error if the slider was already initialized.\r\n\tif ( scope_Target.noUiSlider ) {\r\n\t\tthrow new Error('Slider was already initialized.');\r\n\t}\r\n\r\n\t// Create the base element, initialise HTML and set classes.\r\n\t// Add handles and links.\r\n\tscope_Base = addSlider( options.dir, options.ort, scope_Target );\r\n\tscope_Handles = addHandles( options.handles, options.dir, scope_Base );\r\n\r\n\t// Set the connect classes.\r\n\taddConnection ( options.connect, scope_Target, scope_Handles );\r\n\r\n\tif ( options.pips ) {\r\n\t\tpips(options.pips);\r\n\t}\r\n\r\n\tif ( options.tooltips ) {\r\n\t\ttooltips();\r\n\t}\r\n\r\n\tscope_Self = {\r\n\t\tdestroy: destroy,\r\n\t\tsteps: getCurrentStep,\r\n\t\ton: bindEvent,\r\n\t\toff: removeEvent,\r\n\t\tget: valueGet,\r\n\t\tset: valueSet,\r\n\t\tupdateOptions: updateOptions,\r\n\t\toptions: options, // Issue #600\r\n\t\ttarget: scope_Target, // Issue #597\r\n\t\tpips: pips // Issue #594\r\n\t};\r\n\r\n\t// Attach user events.\r\n\tevents( options.events );\r\n\r\n\treturn scope_Self;\r\n\r\n}\r\n\r\n\r\n\t// Run the standard initializer\r\n\tfunction initialize ( target, originalOptions ) {\r\n\r\n\t\tif ( !target.nodeName ) {\r\n\t\t\tthrow new Error('noUiSlider.create requires a single element.');\r\n\t\t}\r\n\r\n\t\t// Test the options and create the slider environment;\r\n\t\tvar options = testOptions( originalOptions, target ),\r\n\t\t\tslider = closure( target, options );\r\n\r\n\t\t// Use the public value method to set the start values.\r\n\t\tslider.set(options.start);\r\n\r\n\t\ttarget.noUiSlider = slider;\r\n\t\treturn slider;\r\n\t}\r\n\r\n\t// Use an object instead of a function for future expansibility;\r\n\treturn {\r\n\t\tcreate: initialize\r\n\t};\r\n\r\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/buschidos/work/git/result/~/nouislider/distribute/nouislider.js\n ** module id = 87\n ** module chunks = 0\n **/"],"sourceRoot":""}